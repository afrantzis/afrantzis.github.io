<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <title>A mind forever voyaging</title>
  <subtitle>A peek into the mind of Alexandros Frantzis</subtitle>
  <link rel="self" type="application/atom+xml" href="https://afrantzis.com/atom.xml" />
  <link rel="alternate" type="text/html" href="https://afrantzis.com" />
  <id>https://afrantzis.com/atom.xml</id> 
  <rights>Copyright Â© 2010-2019, Alexandros Frantzis</rights>
  <updated>2022-12-31T00:00:00Z</updated>
  <entry>
    <author><name>Alexandros Frantzis</name></author>
    <title>Reverse engineering an old Windows game for fun and compatibility</title>
    <link href="https://afrantzis.com/posts/reverse-engineering-an-old-windows-game/" />
    <updated>2022-12-31T00:00:00Z</updated>
    <id>https://afrantzis.com/posts/reverse-engineering-an-old-windows-game/</id>
    <content type="html">&lt;p&gt;A few months ago I decided to revisit &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;The_Last_Express&quot;&gt;The Last
Express&lt;&#x2F;a&gt;, one of the most
unique adventure games of the 1990s. Since the version I have (from 1997)
provided a Windows executable, I decided to run it using the Wayland driver for
Wine. Eager to treat myself to a nostalgic journey, I ran the game and saw...
nothing! I could hear the ominous menu music, but all I got was a minimized
window which completely ignored my attempts at restoration. I tried the game
with the Wine X11 driver and it worked as expected.&lt;&#x2F;p&gt;
&lt;p&gt;Disappointed, but also determined to get this working with the Wayland driver, I
ran the game with Wine debug logging turned on. The strange minimization
behavior led me to turn my attention to the &lt;code&gt;SetWindowPos&lt;&#x2F;code&gt; and &lt;code&gt;ShowWindow&lt;&#x2F;code&gt;
calls, hoping that I would get some insight about what was affecting the window
state. Here is what I got for the game start up, with some additional comments:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; class=&quot;language-sh z-code&quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;## Game window being created and resized to 640x480&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;trace:win:NtUserSetWindowPos&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; hwnd 0x1005e, after (nil&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;&#x2F;span&gt;)&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;,&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; 0,0 (0x0&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;&#x2F;span&gt;)&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;,&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; flags 00000037&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;trace:win:show_window&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; hwnd=0x1005e, cmd=5, was_visible 0&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;trace:win:NtUserSetWindowPos&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; hwnd 0x1005e, after (nil&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;&#x2F;span&gt;)&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;,&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; 0,0 (0x0&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;&#x2F;span&gt;)&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;,&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; flags 00000043&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;trace:win:NtUserSetWindowPos&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; hwnd 0x1005e, after 0xffffffff, 0,0 (1600x920&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;&#x2F;span&gt;)&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;,&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; flags 00000070&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;trace:win:NtUserSetWindowPos&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; hwnd 0x1005e, after (nil&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;&#x2F;span&gt;)&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;,&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; 0,0 (0x0&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;&#x2F;span&gt;)&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;,&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; flags 00000003&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;trace:win:NtUserSetWindowPos&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; hwnd 0x1005e, after (nil&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;&#x2F;span&gt;)&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;,&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; 0,0 (640x480&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;&#x2F;span&gt;)&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;,&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; flags 00000050&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;trace:win:NtUserSetWindowPos&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; hwnd 0x1005e, after (nil&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;&#x2F;span&gt;)&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;,&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; 0,0 (0x0&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;&#x2F;span&gt;)&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;,&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; flags 00000037&lt;&#x2F;span&gt;
&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;## Game window is minimized (6=SW_MINIMIZE)&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;trace:win:show_window&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; hwnd=0x1005e, cmd=6, was_visible 1&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;trace:waylanddrv:WAYLAND_ShowWindow&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; hwnd=0x1005e cmd=6&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;trace:win:NtUserSetWindowPos&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; hwnd 0x1005e, after (nil&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;&#x2F;span&gt;)&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;,&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;32000&lt;&#x2F;span&gt;,-32000 (160x24&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;&#x2F;span&gt;)&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;,&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; flags 00008174&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;When trying to restore the minimized window I got:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; class=&quot;language-sh z-code&quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;## Game window is restored to 640x480...&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;trace:win:show_window&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; hwnd=0x1005e, cmd=9, was_visible 1&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;trace:waylanddrv:WAYLAND_ShowWindow&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; hwnd=0x1005e cmd=9&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;trace:win:NtUserSetWindowPos&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; hwnd 0x1005e, after (nil&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;&#x2F;span&gt;)&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;,&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; 0,0 (640x480&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;&#x2F;span&gt;)&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;,&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; flags 00008120&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;trace:win:NtUserSetWindowPos&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; hwnd 0x1005e, after (nil&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;&#x2F;span&gt;)&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;,&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; 0,0 (640x480&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;&#x2F;span&gt;)&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;,&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; flags 00000014&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;trace:win:NtUserSetWindowPos&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; hwnd 0x1005e, after (nil&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;&#x2F;span&gt;)&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;,&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; 0,0 (640x480&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;&#x2F;span&gt;)&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;,&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; flags 00000050&lt;&#x2F;span&gt;
&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;## ...but then immediately minimized again!&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;trace:win:show_window&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; hwnd=0x1005e, cmd=6, was_visible 1&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;trace:waylanddrv:WAYLAND_ShowWindow&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; hwnd=0x1005e cmd=6&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;trace:win:NtUserSetWindowPos&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; hwnd 0x1005e, after (nil&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;&#x2F;span&gt;)&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;,&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;32000&lt;&#x2F;span&gt;,-32000 (160x24&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;&#x2F;span&gt;)&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;,&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; flags 00008174&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;It seemed that some logic was forcing the window to always become minimized.
After briefly exploring the possibility of the Wayland driver or Wine core doing
something fancy, I reached the conclusion that the minimization logic lived in
the application itself.&lt;&#x2F;p&gt;
&lt;p&gt;Why did the application minimize itself when running with the Wayland driver? A
mystery befitting the theme of the game itself!&lt;&#x2F;p&gt;
&lt;p&gt;In order to gain more insights, I had to take a peek into the inner workings
of the game. I loaded the &lt;code&gt;_le.exe&lt;&#x2F;code&gt; executable in Ghidra, analyzed it with
the default options and I searched for symbols references to &lt;code&gt;ShowWindow&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;afrantzis.com&#x2F;posts&#x2F;reverse-engineering-an-old-windows-game&#x2F;ghidra-le-symrefs.png&quot; alt=&quot;ghidra-le-symrefs.png&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The first entry was for the location within the &lt;a href=&quot;https:&#x2F;&#x2F;learn.microsoft.com&#x2F;en-us&#x2F;windows&#x2F;win32&#x2F;debug&#x2F;pe-format#import-address-table&quot;&gt;Import Address Table
(IAT)&lt;&#x2F;a&gt;
which the dynamic linker will fill in with the address of the
&lt;code&gt;CWnd::ShowWindow&lt;&#x2F;code&gt; function from &lt;code&gt;MFC42.DLL&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The second entry was the &lt;code&gt;CWnd::ShowWindow&lt;&#x2F;code&gt; thunk function within &lt;code&gt;_le.exe&lt;&#x2F;code&gt;,
which transfers control to the real &lt;code&gt;CWnd::ShowWindow&lt;&#x2F;code&gt; function by using
the address from the IAT location described above:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;asm&quot; class=&quot;language-asm z-code&quot;&gt;&lt;code class=&quot;language-asm&quot; data-lang=&quot;asm&quot;&gt;&lt;span class=&quot;z-source z-assembly&quot;&gt;&lt;span class=&quot;z-entity z-name z-function z-assembly&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-assembly&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-assembly&quot;&gt;4&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-assembly&quot;&gt;a&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-assembly&quot;&gt;8&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-assembly&quot;&gt;9&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-assembly&quot;&gt;9&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-assembly&quot;&gt;6&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-assembly&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-control z-assembly&quot;&gt;JMP&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-assembly&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-directive z-assembly&quot;&gt;dword&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-assembly&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-directive z-assembly&quot;&gt;ptr&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-assembly&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-assembly&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-assembly&quot;&gt;-&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-assembly&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-assembly&quot;&gt;M&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-assembly&quot;&gt;F&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-assembly&quot;&gt;C&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-assembly&quot;&gt;4&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-assembly&quot;&gt;2&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-assembly&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-assembly&quot;&gt;D&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-assembly&quot;&gt;L&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-assembly&quot;&gt;L&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-assembly&quot;&gt;:&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-assembly&quot;&gt;:&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-assembly&quot;&gt;C&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-assembly&quot;&gt;W&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-assembly&quot;&gt;n&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-assembly&quot;&gt;d&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-assembly&quot;&gt;:&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-assembly&quot;&gt;:&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-assembly&quot;&gt;S&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-assembly&quot;&gt;h&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-assembly&quot;&gt;o&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-assembly&quot;&gt;w&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-assembly&quot;&gt;W&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-assembly&quot;&gt;i&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-assembly&quot;&gt;n&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-assembly&quot;&gt;d&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-assembly&quot;&gt;o&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-assembly&quot;&gt;w&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-assembly&quot;&gt;]&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;This import immediately provided a hint that the game was using Microsoft
Foundation Classes, i.e., object-oriented wrappers around the Win32 API, and as
such I should be on the lookout for standard object-oriented patterns.&lt;&#x2F;p&gt;
&lt;p&gt;The thunk function is what the application actually calls internally, and in
the list above I could see several references to it. Alas, I checked the code
at each reference location, but none was passing &lt;code&gt;6&lt;&#x2F;code&gt; (&lt;code&gt;SW_MINIMIZE&lt;&#x2F;code&gt;) as the
show command. Could there be other references to the &lt;code&gt;CWnd::ShowWindow&lt;&#x2F;code&gt; thunk
that Ghidra was missing?&lt;&#x2F;p&gt;
&lt;p&gt;I decided to get a second opinion from &lt;code&gt;radare2&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$ radare2 -A _le.exe
[x] Analyze all flags starting with sym. and entry0 (aa)
[x] Analyze function calls (aac)
[x] Analyze len bytes of instructions for references (aar)
[x] Finding and parsing C++ vtables (avrr)
[x] Type matching analysis for all functions (aaft)
[x] Propagate noreturn information (aanr)
[x] Use -AA or aaaa to perform additional experimental analysis.
[0x004a8cf0]&amp;gt; axt 0x004a8996
(nofunc) 0x40fbe8 [CALL] call sub.MFC42.DLL_Ordinal_6215
(nofunc) 0x45a37e [CALL] call sub.MFC42.DLL_Ordinal_6215
fcn.0045a480 0x45a54a [CALL] call sub.MFC42.DLL_Ordinal_6215
(nofunc) 0x45af0e [CALL] call sub.MFC42.DLL_Ordinal_6215
(nofunc) 0x45afa7 [CALL] call sub.MFC42.DLL_Ordinal_6215
(nofunc) 0x45b018 [CALL] call sub.MFC42.DLL_Ordinal_6215
fcn.0045b940 0x45b9a4 [CALL] call sub.MFC42.DLL_Ordinal_6215
fcn.0045b940 0x45b9ea [CALL] call sub.MFC42.DLL_Ordinal_6215
fcn.0045ba20 0x45bb92 [CALL] call sub.MFC42.DLL_Ordinal_6215
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;There were indeed more references to the &lt;code&gt;CWnd::ShowWindow&lt;&#x2F;code&gt; thunk. I noted
that the references Ghidra was missing didn&#x27;t belong to any known function
(&lt;code&gt;(nofunc)&lt;&#x2F;code&gt; in radare2), and that was the reason they weren&#x27;t detected by
default. The solution was to rerun Ghidra&#x27;s analysis with the &amp;quot;Aggressive
Instruction Finder&amp;quot; option turned on, which gave me the following references:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;afrantzis.com&#x2F;posts&#x2F;reverse-engineering-an-old-windows-game&#x2F;ghidra-le-symrefs-aggresive.png&quot; alt=&quot;ghidra-le-symrefs-aggresive.png&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Note that the &lt;code&gt;0x45a37e&lt;&#x2F;code&gt; reference was still missing from Ghidra. I was able to
to add it by manually marking the region as code (in fact the relevant function
seems to start at &lt;code&gt;0x45a340&lt;&#x2F;code&gt;). In the end it didn&#x27;t matter, though, since that
particular invocation was using the &lt;code&gt;9 (SW_RESTORE)&lt;&#x2F;code&gt; command, so was not
relevant for our investigation.&lt;&#x2F;p&gt;
&lt;p&gt;From the updated reference list above there were two that involved a
minimization command, at &lt;code&gt;0x45af0e&lt;&#x2F;code&gt; and &lt;code&gt;0x45afa7&lt;&#x2F;code&gt;. The function at &lt;code&gt;0x45ae10&lt;&#x2F;code&gt;
which contained the &lt;code&gt;0x45af0e&lt;&#x2F;code&gt; reference was decompiled by Ghidra as:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;afrantzis.com&#x2F;posts&#x2F;reverse-engineering-an-old-windows-game&#x2F;ghidra-le-decompile-45ae10.png&quot; alt=&quot;ghidra-le-decompile-45ae10.png&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Although the high-level flow of this function was clear enough, I must say I
didn&#x27;t become more enlightened about the condition(s) that could lead to
minimization. A quick look at some of the invoked functions indicated that a
deeper investigation was required to understand how all this works, so I
decided to move to the next function and revisit later, if needed.&lt;&#x2F;p&gt;
&lt;p&gt;The second reference &lt;code&gt;0x45afa7&lt;&#x2F;code&gt; was part of the of the &lt;code&gt;0x45af70&lt;&#x2F;code&gt; function:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;afrantzis.com&#x2F;posts&#x2F;reverse-engineering-an-old-windows-game&#x2F;ghidra-le-decompile-45af70.png&quot; alt=&quot;ghidra-le-decompile-45af70.png&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This was more promising, with a very clear check affecting minimization at
the start of the function! As I could see from the decompiler output, the first
argument was effectively a &lt;code&gt;CWnd *&lt;&#x2F;code&gt;. The unconditional call to
&lt;code&gt;CWnd::OnDisplayChange&lt;&#x2F;code&gt; at the end allowed me to reasonably (and ultimately
correctly) assume that this function was in fact an override of the
&lt;code&gt;OnDisplayChange&lt;&#x2F;code&gt; method for a custom class inheriting from &lt;code&gt;CWnd&lt;&#x2F;code&gt;, so I
named this function &lt;code&gt;LExpressCWnd::OnDisplayChange&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The documentation for &lt;code&gt;CWnd::OnDisplayChange&lt;&#x2F;code&gt; was (and still is) surprisingly
scarce online, but in a &lt;a href=&quot;https:&#x2F;&#x2F;learn.microsoft.com&#x2F;en-us&#x2F;cpp&#x2F;porting&#x2F;visual-cpp-change-history-2003-2015&quot;&gt;Microsoft C&#x2F;C++
changelog&lt;&#x2F;a&gt;
I found the following:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;CWnd::OnDisplayChange changed to (UINT, int, int) instead of (WPARAM, LPARAM)
so that the new ON_WM_DISPLAYCHANGE macro can be used in the message map.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Since the game predated these changes, I determined that &lt;code&gt;param_1&lt;&#x2F;code&gt;
and &lt;code&gt;param_2&lt;&#x2F;code&gt; were really &lt;code&gt;wparam&lt;&#x2F;code&gt; and &lt;code&gt;lparam&lt;&#x2F;code&gt; of the corresponding
&lt;code&gt;WM_DISPLAYCHANGE&lt;&#x2F;code&gt; message. From the &lt;code&gt;WM_DISPLAYCHANGE&lt;&#x2F;code&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;learn.microsoft.com&#x2F;en-us&#x2F;windows&#x2F;win32&#x2F;gdi&#x2F;wm-displaychange&quot;&gt;documentation&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;wParam&lt;&#x2F;em&gt;&lt;br &#x2F;&gt;
The new image depth of the display, in bits per pixel.&lt;br &#x2F;&gt;
&lt;em&gt;lParam&lt;&#x2F;em&gt;&lt;br &#x2F;&gt;
The low-order word specifies the horizontal resolution of the screen.&lt;br &#x2F;&gt;
The high-order word specifies the vertical resolution of the screen.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;The pieces of the puzzle finally started to fall into place! Taking into
account the new information I updated the decompiled source like so:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;afrantzis.com&#x2F;posts&#x2F;reverse-engineering-an-old-windows-game&#x2F;ghidra-le-decompile-45af70-16bpp.png&quot; alt=&quot;ghidra-le-decompile-45af70-16bpp.png&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;There was a lot missing still, but the main takeway, in the highlighted part of
the code above, was that if the display mode was changed to one that did not
use 16 bits per pixel, the application unceremoniously minimized itself!&lt;&#x2F;p&gt;
&lt;p&gt;Indeed, in that older version of the Wayland driver for Wine we were choosing a
32-bit mode regardless of what the application specified. This worked for most
DirectX games since Wine internally deals with the inconsistency. However, &lt;em&gt;The
Last Express&lt;&#x2F;em&gt; explicitly checks the bits per pixel value sent with the
&lt;code&gt;WM_DISPLAYCHANGE&lt;&#x2F;code&gt; message and our ploy is exposed!&lt;&#x2F;p&gt;
&lt;p&gt;I updated the Wayland driver to properly set the &lt;code&gt;WM_DISPLAYCHANGE&lt;&#x2F;code&gt; bits per
pixel parameter, and verified that this fixed the minimization problem. I was
finally able to continue my (train) trip down memory lane!&lt;&#x2F;p&gt;
&lt;p&gt;You can see &lt;em&gt;The Last Express&lt;&#x2F;em&gt; in action with the Wayland driver
&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=lZ-MK72Kyp8&amp;amp;t=615s&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;bonus-material&quot;&gt;Bonus material&lt;&#x2F;h2&gt;
&lt;p&gt;Although this partial analysis was enough to allow me to resolve the task at
hand, I remained curious about some of the details of display configuration and
the unexplained aspects of the &lt;code&gt;LExpressCWnd::OnDisplayChange&lt;&#x2F;code&gt; function. To
explore further, I tracked symbol references to the &lt;code&gt;ChangeDisplaySettingsA&lt;&#x2F;code&gt;
function from &lt;code&gt;USER32.DLL&lt;&#x2F;code&gt; and came across two invocations in &lt;code&gt;_le.exe&lt;&#x2F;code&gt;. I will
spare you the details, but one reference was from a function that I determined
configured the display mode for the game (which I named
&lt;code&gt;LExpressCWnd::ConfigureDisplay&lt;&#x2F;code&gt; at &lt;code&gt;0x45ba20&lt;&#x2F;code&gt;), and the other from a function
that restored the original mode (&lt;code&gt;LExpressCwnd::RestoreDisplay&lt;&#x2F;code&gt; at &lt;code&gt;0x45bbd0&lt;&#x2F;code&gt;).
One interesting point about these invocations was that the code was tracking
the kind of display configuration operation the game was performing, by using
fields in &lt;code&gt;LExpressCWnd&lt;&#x2F;code&gt;. For example, in &lt;code&gt;LExpressCWnd::ConfigureDisplay&lt;&#x2F;code&gt;
there was the following decompiled snippet (after giving some more descriptive
names):&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;afrantzis.com&#x2F;posts&#x2F;reverse-engineering-an-old-windows-game&#x2F;ghidra-le-decompile-45ba20-snippet.png&quot; alt=&quot;ghidra-le-decompile-45ba20-snippet.png&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;code&gt;LExpressCWnd::configuring_display&lt;&#x2F;code&gt; field and the corresponding
&lt;code&gt;LExpressCWnd::restoring_display&lt;&#x2F;code&gt; used in &lt;code&gt;LExpressCWnd::RestoreDisplay&lt;&#x2F;code&gt;, were
two of the mysterious fields used in &lt;code&gt;LExpressCWnd::OnDisplayChange&lt;&#x2F;code&gt;. The idea
is that &lt;code&gt;ChangeDisplaySettingsA&lt;&#x2F;code&gt; sends the &lt;code&gt;WM_DISPLAYCHANGE&lt;&#x2F;code&gt; message
synchronously, and thus &lt;code&gt;LExpressCWnd::OnDisplayChange&lt;&#x2F;code&gt; is called in the
context of that invocation, reading the values of these fields.&lt;&#x2F;p&gt;
&lt;p&gt;With all this new information and a lot of additional exploration in the
executable, I reached this more complete version of
&lt;code&gt;LExpressCWnd::OnDisplayChange&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;afrantzis.com&#x2F;posts&#x2F;reverse-engineering-an-old-windows-game&#x2F;ghidra-le-decompile-45af70-final.png&quot; alt=&quot;ghidra-le-decompile-45af70-final.png&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Fortuitously, the discovery of the
&lt;code&gt;LExpressCWnd::ConfigureDisplay&#x2F;RestoreDisplay&lt;&#x2F;code&gt; functions also helped to shed
some light on the mysterious function at &lt;code&gt;0x45ae10&lt;&#x2F;code&gt; which we encountered
earlier in this post. My best guess about that function was that it handles the
(de)activation of the game window, so I named it &lt;code&gt;LExpressCWnd::OnActivate&lt;&#x2F;code&gt;. On
activation it increases the game thread priority and configures the display
mode (if in fullscreen mode). On deactivation it sets the game thread priority
to normal, restores the display mode and minimizes the window. My final
decompilation looks like:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;afrantzis.com&#x2F;posts&#x2F;reverse-engineering-an-old-windows-game&#x2F;ghidra-le-decompile-45ae10-final.png&quot; alt=&quot;ghidra-le-decompile-45ae10-final.png&quot; &#x2F;&gt;&lt;&#x2F;p&gt;</content>
  </entry>
  <entry>
    <author><name>Alexandros Frantzis</name></author>
    <title>unweave: Unweave interleaved streams of text lines</title>
    <link href="https://afrantzis.com/posts/unweave/" />
    <updated>2022-12-04T00:00:00Z</updated>
    <id>https://afrantzis.com/posts/unweave/</id>
    <content type="html">&lt;p&gt;When trying to debug unexpected behaviors in applications and libraries, I
often need to understand long and complex logs. Such logs typically contain
interleaved lines originating from multiple components and multiple threads and
processes. In addition to the actual message content, part of the information
is conveyed through the temporal relationship of the log entries.&lt;&#x2F;p&gt;
&lt;p&gt;However, such temporal relationships are sometimes hard to discern in the final
interleaved output. A different view, in which each source stream of log
entries is placed into its own column, can often provide more, or different,
insights:&lt;&#x2F;p&gt;
&lt;p align=&quot;center&quot;&gt;
&lt;img class=&quot;translucent&quot; src=&quot;https:&#x2F;&#x2F;afrantzis.com&#x2F;posts&#x2F;unweave&#x2F;unweave-example.svg&quot;
    alt=&quot;Unweave example&quot;
    width=&quot;250&quot;
    &#x2F;&gt;
&lt;&#x2F;p&gt;

&lt;p&gt;This separated, or &lt;em&gt;unweaved&lt;&#x2F;em&gt;, view has proven to be particularly useful for me
in the development of the &lt;a href=&quot;https:&#x2F;&#x2F;gitlab.collabora.com&#x2F;alf&#x2F;wine&#x2F;-&#x2F;tree&#x2F;wayland&quot;&gt;Wine Wayland
driver&lt;&#x2F;a&gt;, which is what
triggered the development of the
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;afrantzis&#x2F;unweave&quot;&gt;unweave&lt;&#x2F;a&gt; tool. Since Wine logs can be
very long and involve several interacting sources of information, efficiency and
versatility were a primary goal of &lt;code&gt;unweave&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;For a practical example of &lt;code&gt;unweave&lt;&#x2F;code&gt;&#x27;s capabilities, consider a log file that
contains &lt;code&gt;info&lt;&#x2F;code&gt; or &lt;code&gt;error&lt;&#x2F;code&gt; output from 3 threads &lt;code&gt;A&lt;&#x2F;code&gt;, &lt;code&gt;B&lt;&#x2F;code&gt;, &lt;code&gt;C&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;[info] A: 1
[info] A: 2
[info] B: 1
[error] A: 3
[info] B: 2
[error] C: 1
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;A natural transformed view of the log involves placing each thread in its own
column. This is straightforward with unweave:&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$ unweave &amp;#39;A|B|C&amp;#39; input
[info] A: 1
[info] A: 2
            [info] B: 1
[error] A: 3
            [info] B: 2
                       [error] C: 1
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Typically, the output format is more complex and the relevant values not known
in advance. For example, you may not know the exact thread names, only that
they appear in the log in the form of &lt;code&gt;$TID:&lt;&#x2F;code&gt; where &lt;code&gt;$TID&lt;&#x2F;code&gt; is an uppercase
alphabetic string. The pattern provided to &lt;code&gt;unweave&lt;&#x2F;code&gt; is a fully operational
&lt;del&gt;battle station&lt;&#x2F;del&gt; regular expression, so it can handle all this too, along
with making the columns wider:&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$ unweave -c 15 &amp;#39; ([A-Z]+): &amp;#39; input
[info] A: 1
[info] A: 2
               [info] B: 1
[error] A: 3
               [info] B: 2
                              [error] C: 1
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Perhaps it would be interesting to get a different view, with columns based on
log types instead of threads, and also use a more distinctive column separator:&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$ target&#x2F;release&#x2F;unweave -s &amp;#39; | &amp;#39; &amp;#39;^\[\w+\]&amp;#39; input
[info] A: 1 |
[info] A: 2 |
[info] B: 1 |
            | [error] A: 3
[info] B: 2 |
            | [error] C: 1
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Although separating streams into columns is the primary mode of the &lt;code&gt;unweave&lt;&#x2F;code&gt;
tool, it can sometimes be useful to use separate files instead, with each
output filename containing the stream tag and the stream id:&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$ unweave --mode=files -o &amp;#39;stream-%t-%2d&amp;#39; &amp;#39;A|B|C&amp;#39; input
$ tail -n +1 stream-*
==&amp;gt; stream-A-00 &amp;lt;==
[info] A: 1
[info] A: 2
[error] A: 3

==&amp;gt; stream-B-01 &amp;lt;==
[info] B: 1
[info] B: 2

==&amp;gt; stream-C-02 &amp;lt;==
[error] C: 1
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Visit the unweave
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;afrantzis&#x2F;unweave&quot;&gt;repository&lt;&#x2F;a&gt; or view the
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;afrantzis&#x2F;unweave&#x2F;blob&#x2F;master&#x2F;doc&#x2F;unweave.1.md&quot;&gt;manpage&lt;&#x2F;a&gt; to find
out more!&lt;&#x2F;p&gt;</content>
  </entry>
  <entry>
    <author><name>Alexandros Frantzis</name></author>
    <title>GitLab merge diffs for branches that rewrite commit history</title>
    <link href="https://afrantzis.com/posts/gitlab-merge-diffs/" />
    <updated>2022-10-22T00:00:00Z</updated>
    <id>https://afrantzis.com/posts/gitlab-merge-diffs/</id>
    <content type="html">&lt;p&gt;For the development of the Wayland driver for Wine we have been maintaining a
commit series on top of upstream Wine, which we want to keep clean and easily
reviewable.&lt;&#x2F;p&gt;
&lt;p&gt;For this reason, most proposed changes in the code do not typically appear as
new fix commits on top of the current series, but rather transform the existing
series in place, producing an updated clean version. For example, if we have
the commit series &lt;em&gt;a-b-c-d-e&lt;&#x2F;em&gt;, an update may fix something in &lt;em&gt;c&lt;&#x2F;em&gt;, leading to
the updated series &lt;em&gt;a-b-f-d&#x27;-e&#x27;&lt;&#x2F;em&gt; (we use &lt;em&gt;d&#x27;&#x2F;e&#x27;&lt;&#x2F;em&gt; to signify that the commit
introduces the same changes as &lt;em&gt;d&#x2F;e&lt;&#x2F;em&gt;).&lt;&#x2F;p&gt;
&lt;p&gt;Although in this instance we have good reasons to use git in this manner, this
public rewriting of commit history is not how git is typically used, and we
have found that some tools do not deal too well with this scenario.&lt;&#x2F;p&gt;
&lt;p&gt;One particular pain point we have encountered is in our internal reviewing
process. Although it doesn&#x27;t seem possible to use GitLab to perform the actual
merge of a branch that rewrites history, we would still like to get a sensible
merge diff for reviews and discussion. However, when we try this we are
presented with a seemingly non-sensical diff. To understand what&#x27;s going on,
and hopefully find a solution, we need to dive in more deeply into how GitLab,
and similar tools, produce merge diffs.&lt;&#x2F;p&gt;
&lt;p&gt;Before we start our journey it would be beneficial to establish a common
vocabulary for commits and operations on them. Please read the
&lt;a href=&quot;https:&#x2F;&#x2F;afrantzis.com&#x2F;posts&#x2F;gitlab-merge-diffs&#x2F;.&#x2F;#Appendix&quot;&gt;Appendix&lt;&#x2F;a&gt; for details about the notation used in this post.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;gitlab-merge-diffs&quot;&gt;GitLab merge diffs&lt;&#x2F;h2&gt;
&lt;p&gt;GitLab provides
&lt;a href=&quot;https:&#x2F;&#x2F;docs.gitlab.com&#x2F;ee&#x2F;development&#x2F;diffs.html#merge-request-diffs-against-the-head-of-the-target-branch&quot;&gt;two merge diff methods&lt;&#x2F;a&gt;,
&lt;em&gt;base&lt;&#x2F;em&gt; and &lt;em&gt;HEAD&lt;&#x2F;em&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;base&lt;&#x2F;em&gt; is the older method and works by using the &lt;em&gt;...&lt;&#x2F;em&gt; diff operator. The
&lt;em&gt;...&lt;&#x2F;em&gt; diff operator aims to provide a diff that represents the intention of the
developer at the time of branching, regardless of the current state of the
&lt;em&gt;target&lt;&#x2F;em&gt; branch. It achieves this by finding the most recent
&lt;a href=&quot;https:&#x2F;&#x2F;afrantzis.com&#x2F;posts&#x2F;gitlab-merge-diffs&#x2F;.&#x2F;#CommonAncestor&quot;&gt;&lt;em&gt;CommonAncestor&lt;&#x2F;em&gt;&lt;&#x2F;a&gt; of &lt;em&gt;target&lt;&#x2F;em&gt; and &lt;em&gt;source&lt;&#x2F;em&gt;, also called the
&lt;em&gt;merge base&lt;&#x2F;em&gt;, and diff-ing the source with that ancestor. In the example below:&lt;&#x2F;p&gt;
&lt;graph line-colors=&quot;#b3dbff none #b3ffcf&quot;&gt;
a - b - c - d     #target
    .\
    . - f - g - h #source
    .           . 
    .............
&lt;&#x2F;graph&gt;
&lt;p&gt;&lt;em&gt;b&lt;&#x2F;em&gt; is the most recent ancestor of &lt;em&gt;target&lt;&#x2F;em&gt; and &lt;em&gt;source&lt;&#x2F;em&gt;, so we get:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Diff target...source =&lt;&#x2F;em&gt; &lt;br&#x2F;&gt;
&lt;em&gt;Diff (CommonAncestor target source)..source =&lt;&#x2F;em&gt; &lt;br&#x2F;&gt;
&lt;em&gt;Diff b..h&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Changes in the &lt;em&gt;target&lt;&#x2F;em&gt; branch after the &lt;em&gt;source&lt;&#x2F;em&gt;&#x27;s branching point are
effectively ignored by the &lt;em&gt;...&lt;&#x2F;em&gt; diff.&lt;&#x2F;p&gt;
&lt;p&gt;The problem with the &lt;em&gt;base&lt;&#x2F;em&gt; method is that the produced diff contents tend to
become obsolete as the merge target (which is typically the &lt;em&gt;master&lt;&#x2F;em&gt;&#x2F;&lt;em&gt;main&lt;&#x2F;em&gt;
branch) evolves. To make the diff more accurate the &lt;em&gt;HEAD&lt;&#x2F;em&gt; diff method was
introduced.&lt;&#x2F;p&gt;
&lt;p&gt;In the &lt;em&gt;HEAD&lt;&#x2F;em&gt; method the &lt;em&gt;target&lt;&#x2F;em&gt; branch is merged into the &lt;em&gt;source&lt;&#x2F;em&gt; branch, and
the resulting commit of that merge is compared with the &lt;em&gt;target&lt;&#x2F;em&gt; branch &lt;sup class=&quot;footnote-reference&quot;&gt;&lt;a href=&quot;#1&quot;&gt;1&lt;&#x2F;a&gt;&lt;&#x2F;sup&gt;.&lt;&#x2F;p&gt;
&lt;graph line-colors=&quot;#b3dbff none #ffe1b3 none #b3ffcf&quot;&gt;
a - b - c - d ---  #target
     \      .    \ 
      \     ......m
       \         &#x2F;
        f - g - h  #source 
&lt;&#x2F;graph&gt;
&lt;p&gt;In this case the produced diff comes from :&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Diff target..(MergeInto target source) =&lt;&#x2F;em&gt; &lt;br&#x2F;&gt;
&lt;em&gt;Diff d..m&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;This diff is a more accurate representation of what one would expect if the source
branch was actually merged at that point in time.&lt;&#x2F;p&gt;
&lt;p&gt;However, the &lt;em&gt;HEAD&lt;&#x2F;em&gt; method may fail due to conflicts during merge, and, in this
case, the current GitLab behavior is to fall back to &lt;em&gt;base&lt;&#x2F;em&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-problem&quot;&gt;The problem&lt;&#x2F;h2&gt;
&lt;p&gt;Now, let&#x27;s consider what happens when we ask GitLab to provide the merge diff
for our original example, trying to merge a branch &lt;em&gt;fix&lt;&#x2F;em&gt; that rewrites history,
into &lt;em&gt;master&lt;&#x2F;em&gt;:&lt;&#x2F;p&gt;
&lt;graph line-colors=&quot;#b3dbff none #b3ffcf&quot;&gt;
a - b - c - d - e  #master
     \
      - f - d&#x27;- e&#x27; #fix
&lt;&#x2F;graph&gt;
&lt;p&gt;First GitLab will try the &lt;em&gt;HEAD&lt;&#x2F;em&gt; method. If the merge of &lt;em&gt;master&lt;&#x2F;em&gt; into &lt;em&gt;fix&lt;&#x2F;em&gt;
succeeds then we will get a nice diff. Chances are that this merge will fail,
so we will fall back to the &lt;em&gt;base&lt;&#x2F;em&gt; method. The &lt;em&gt;base&lt;&#x2F;em&gt; method will then give us
&lt;code&gt;git diff b..e&#x27;&lt;&#x2F;code&gt; whereas we would like to see &lt;code&gt;git diff e..e&#x27;&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;making-the-head-method-work&quot;&gt;Making the &lt;em&gt;HEAD&lt;&#x2F;em&gt; method work&lt;&#x2F;h2&gt;
&lt;p&gt;How can we trick GitLab into producing a sane diff for our reviewing purposes?
One idea is to try to make the &lt;em&gt;HEAD&lt;&#x2F;em&gt; method succeed and provide the expected
results. This can be expressed by the following pseudo-equations:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Diff master..(MergeInto master fix) = Diff master..fix&lt;&#x2F;em&gt; &lt;br&#x2F;&gt;
&lt;em&gt;Tree (MergeInto master fix) = Tree fix&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;If we could change that pesky
&lt;a href=&quot;https:&#x2F;&#x2F;afrantzis.com&#x2F;posts&#x2F;gitlab-merge-diffs&#x2F;.&#x2F;#MergeInto&quot;&gt;&lt;em&gt;MergeInto&lt;&#x2F;em&gt;&lt;&#x2F;a&gt; operation to become
&lt;a href=&quot;https:&#x2F;&#x2F;afrantzis.com&#x2F;posts&#x2F;gitlab-merge-diffs&#x2F;.&#x2F;#MergeIntoKeepTarget&quot;&gt;&lt;em&gt;MergeIntoKeepTarget&lt;&#x2F;em&gt;&lt;&#x2F;a&gt; we would get our result instantly.
Sadly, changing GitLab itself is outside the scope of this effort.&lt;&#x2F;p&gt;
&lt;p&gt;Not all is lost, however. We can&#x27;t change &lt;em&gt;MergeInto&lt;&#x2F;em&gt; or &lt;em&gt;master&lt;&#x2F;em&gt;, but we are
free to change &lt;em&gt;fix&lt;&#x2F;em&gt; (since we are the ones proposing it) to fulfill the
equation. The only requirement is that the changed &lt;em&gt;fix&lt;&#x2F;em&gt;, let&#x27;s call it &lt;em&gt;fix&#x27;&lt;&#x2F;em&gt;,
has the same tree contents as &lt;em&gt;fix&lt;&#x2F;em&gt; itself (although it may have additional
merge parents).&lt;&#x2F;p&gt;
&lt;p&gt;But which &lt;em&gt;fix&#x27;&lt;&#x2F;em&gt; can we use to fulfill the above equality? There is a notable
property of merging that we can make use of: if the merge target already has
the merge source as a merge parent then the merge operation is a no-op. In
other words the following holds:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;SomeMerge2 x (SomeMerge1 x y) = SomeMerge1 x y&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;This property allows us to simplify our previous equation to:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Tree (MergeInto master fix&#x27;) = Tree fix&#x27;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;as long as &lt;em&gt;fix&#x27;&lt;&#x2F;em&gt; is of the form &lt;em&gt;SomeMerge master fix&lt;&#x2F;em&gt;. Given that we want
&lt;em&gt;fix&#x27;&lt;&#x2F;em&gt; to have the same contents as &lt;em&gt;fix&lt;&#x2F;em&gt;, the decision about which merge
to use is easy:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;fix&#x27; = MergeIntoKeepTarget master fix&lt;&#x2F;em&gt; &lt;br&#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;graph line-colors=&quot;#b3dbff none #b3ffcf&quot;&gt;
a - b - c - d - e -   #master
     \             \
      - f - d&#x27;- e&#x27;- m #fix&#x27;
&lt;&#x2F;graph&gt;
&lt;p&gt;Here is what happens if we use the GitLab &lt;em&gt;HEAD&lt;&#x2F;em&gt; method to produce the diff of
merging &lt;em&gt;fix&#x27;&lt;&#x2F;em&gt; into &lt;em&gt;master&lt;&#x2F;em&gt;:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Diff master..(MergeInto master fix&#x27;) = Diff e..(MergeInto e m)&lt;&#x2F;em&gt; &lt;br&#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Since &lt;em&gt;m&lt;&#x2F;em&gt; already has &lt;em&gt;e&lt;&#x2F;em&gt; as a merge parent, &lt;em&gt;MergeInto e m&lt;&#x2F;em&gt; just gives &lt;em&gt;m&lt;&#x2F;em&gt;, so we get:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;... = Diff e..m&lt;&#x2F;em&gt; &lt;br&#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Because &lt;em&gt;MergeIntoKeepTarget&lt;&#x2F;em&gt; gave &lt;em&gt;m&lt;&#x2F;em&gt; the same tree contents as &lt;em&gt;e&#x27;&lt;&#x2F;em&gt; we can replace one
for the other in the &lt;code&gt;..&lt;&#x2F;code&gt; diff operation:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;... = Diff e..e&#x27; = Diff master..fix&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2 id=&quot;making-the-base-method-work&quot;&gt;Making the &lt;em&gt;base&lt;&#x2F;em&gt; method work&lt;&#x2F;h2&gt;
&lt;p&gt;How about trying to bend the &lt;em&gt;base&lt;&#x2F;em&gt; method to our will? This could be useful
for systems that don&#x27;t support &lt;em&gt;HEAD&lt;&#x2F;em&gt; (i.e., GitHub or older versions of
GitLab). This is expressed by the following pseudo-equations:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Diff master...fix = Diff master..fix &#x2F;&#x2F; Note three vs two dot diffs&lt;&#x2F;em&gt; &lt;br&#x2F;&gt;
&lt;em&gt;Diff (CommonAncestor master fix)..fix = Diff master..fix&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;As in our previous attempt, we can&#x27;t change &lt;em&gt;master&lt;&#x2F;em&gt;, but we can change
&lt;em&gt;fix&lt;&#x2F;em&gt;, as long as we produce a new &lt;em&gt;fix&#x27;&lt;&#x2F;em&gt; with the same contents:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Diff (CommonAncestor master fix&#x27;)..fix&#x27; = Diff master..fix&lt;&#x2F;em&gt; &lt;br&#x2F;&gt;
&lt;em&gt;Tree (CommonAncestor master fix&#x27;) = Tree master AND Tree fix&#x27; = Tree fix&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;But which &lt;em&gt;fix&#x27;&lt;&#x2F;em&gt; can we use to fulfill the above equality this time? Another
interesting property comes to the rescue: if commit &lt;em&gt;x&lt;&#x2F;em&gt; is an ancestor of &lt;em&gt;y&lt;&#x2F;em&gt;,
then &lt;em&gt;CommonAncestor x y = x&lt;&#x2F;em&gt;. This provides a possible way forward: we need to
make &lt;em&gt;master&lt;&#x2F;em&gt; an ancestor of &lt;em&gt;fix&#x27;&lt;&#x2F;em&gt;. The only way to change commit connections
is with a merge, and we have just the merge we need,
&lt;a href=&quot;https:&#x2F;&#x2F;afrantzis.com&#x2F;posts&#x2F;gitlab-merge-diffs&#x2F;.&#x2F;#MergeIntoKeepTarget&quot;&gt;&lt;em&gt;MergeIntoKeepTarget&lt;&#x2F;em&gt;&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;fix&#x27; = MergeIntoKeepTarget master fix&lt;&#x2F;em&gt; &lt;br&#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;graph line-colors=&quot;#b3dbff none #b3ffcf&quot;&gt;
a - b - c - d - e -   #master
     \             \
      - f - d&#x27;- e&#x27;- m #fix&#x27;
&lt;&#x2F;graph&gt;
&lt;p&gt;By a happy coincidence (or is it?) we again get the same solution as with the
&lt;em&gt;HEAD&lt;&#x2F;em&gt; method!&lt;&#x2F;p&gt;
&lt;p&gt;Here is what happens if we use the GitLab &lt;em&gt;base&lt;&#x2F;em&gt; method to produce the diff of
merging &lt;em&gt;fix&#x27;&lt;&#x2F;em&gt; into &lt;em&gt;master&lt;&#x2F;em&gt;:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Diff master...fix&#x27; = Diff e...m&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;The ancestry relationship between &lt;em&gt;m&lt;&#x2F;em&gt; and &lt;em&gt;e&lt;&#x2F;em&gt; makes the &lt;code&gt;...&lt;&#x2F;code&gt; diff operator
between them act effectively like the &lt;code&gt;..&lt;&#x2F;code&gt; diff operator, so we get:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;... = Diff e..m&lt;&#x2F;em&gt; &lt;br&#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Because &lt;em&gt;MergeIntoKeepTarget&lt;&#x2F;em&gt; gave m the same tree contents as e&#x27; we can replace one
for the other in the &lt;code&gt;..&lt;&#x2F;code&gt; diff operation:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;... = Diff e..e&#x27; = Diff master..fix&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2 id=&quot;putting-theory-into-practice&quot;&gt;Putting theory into practice&lt;&#x2F;h2&gt;
&lt;p&gt;The theory behind our solution may be somewhat involved, but it leads to a
straightforward practical recipe. It all boils down to creating the &lt;em&gt;fix&#x27;&lt;&#x2F;em&gt;
commit and using that as our merge request source. Since:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;fix&#x27; = MergeIntoKeepTarget master fix&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;we can create a detached&#x2F;disposable &lt;em&gt;fix&#x27;&lt;&#x2F;em&gt; by doing:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; class=&quot;language-sh z-code&quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; git checkout&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; --&lt;&#x2F;span&gt;detach&lt;&#x2F;span&gt; fix&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; git merge&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;sours&lt;&#x2F;span&gt; master&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Then we can push our detached &lt;em&gt;fix&#x27;&lt;&#x2F;em&gt; to our MR branch, for example by doing:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; class=&quot;language-sh z-code&quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; git push our-remote HEAD:fix&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;We can also verify that our solution works by locally getting the diff that
GitLab will produce for the &lt;em&gt;base&lt;&#x2F;em&gt; method:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; class=&quot;language-sh z-code&quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; git diff master...HEAD&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;And for the &lt;em&gt;HEAD&lt;&#x2F;em&gt; method:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; class=&quot;language-sh z-code&quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; git merge master&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;Already&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; up to date&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; git diff master..HEAD&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;Appendix&quot;&gt;Appendix: A notation for commits and their operations&lt;&#x2F;h2&gt;
&lt;p&gt;In the notation used in this post each commit is represented by a letter,
denoting the changes introduced by the commit. A prime (&lt;em&gt;&#x27;&lt;&#x2F;em&gt;) symbol (e.g.,
&lt;em&gt;a&#x27;&lt;&#x2F;em&gt;) denotes a commit introducing the same changes as its non-prime
counterpart.&lt;&#x2F;p&gt;
&lt;p&gt;A commit series is denoted with a graph of commits, each commit pointing to its
parent(s). A fork in the graph is a branching point:&lt;&#x2F;p&gt;
&lt;graph line-colors=&quot;#b3dbff none #b3ffcf&quot;&gt;
a - b - c - d - e
         \
          - f - g
&lt;&#x2F;graph&gt;
&lt;p&gt;A few interesting operations:&lt;&#x2F;p&gt;
&lt;h3 id=&quot;Tree&quot;&gt;Tree x&lt;&#x2F;h3&gt;
&lt;p&gt;The contents of the tree at commit &lt;em&gt;x&lt;&#x2F;em&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;CommonAncestor&quot;&gt;CommonAncestor x y&lt;&#x2F;h3&gt;
&lt;p&gt;The most recent common ancestor of commits &lt;em&gt;x&lt;&#x2F;em&gt; and &lt;em&gt;y&lt;&#x2F;em&gt;. For example, in our
sample commit graph we have &lt;em&gt;CommonAncestor e g = c&lt;&#x2F;em&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;DiffTwo&quot;&gt;Diff x..y&lt;&#x2F;h3&gt;
&lt;p&gt;The difference between the tree contents of commits &lt;em&gt;x&lt;&#x2F;em&gt; and &lt;em&gt;y&lt;&#x2F;em&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;DiffTwo&quot;&gt;Diff x...y&lt;&#x2F;h3&gt;
&lt;p&gt;The difference between the tree contents of commit &lt;em&gt;y&lt;&#x2F;em&gt; and &lt;em&gt;base = CommonAnsestor x y&lt;&#x2F;em&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;MergeInto&quot;&gt;MergeInto x y&lt;&#x2F;h3&gt;
&lt;p&gt;Merges tip &lt;em&gt;x&lt;&#x2F;em&gt; into tip &lt;em&gt;y&lt;&#x2F;em&gt;, producing a new commit. For example, &lt;em&gt;MergeInto e g&lt;&#x2F;em&gt;
produces the following &lt;em&gt;m&lt;&#x2F;em&gt;:&lt;&#x2F;p&gt;
&lt;graph line-colors=&quot;#b3dbff none #b3ffcf&quot;&gt;
a - b - c - d - e -
         \         \
          - f - g - m
&lt;&#x2F;graph&gt;
&lt;p&gt;The contents of commit &lt;em&gt;m&lt;&#x2F;em&gt; are not uniquely defined. They are determined by the
merge algorithm, and, in case of conflicts, by explicit user input.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;MergeIntoKeepTarget&quot;&gt;MergeIntoKeepTarget x y&lt;&#x2F;h3&gt;
&lt;p&gt;Merges tip &lt;em&gt;x&lt;&#x2F;em&gt; into tip &lt;em&gt;y&lt;&#x2F;em&gt;, producing a new commit which has the same tree
contents as &lt;em&gt;y&lt;&#x2F;em&gt;. For example, &lt;em&gt;MergeIntoKeepTarget e g&lt;&#x2F;em&gt; gives:&lt;&#x2F;p&gt;
&lt;graph line-colors=&quot;#b3dbff none #b3ffcf&quot;&gt;
a - b - c - d - e -
         \         \
          - f - g - g&#x27;
&lt;&#x2F;graph&gt;
&lt;p&gt;In terms of git commands this operation corresponds to &lt;code&gt;git merge -sours e&lt;&#x2F;code&gt;,
assuming &lt;em&gt;g&lt;&#x2F;em&gt; is checked out before the merge.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h4 id=&quot;1&quot;&gt;&lt;&#x2F;h4&gt;
&lt;p&gt;1. Note that the GitLab
&lt;a href=&quot;https:&#x2F;&#x2F;docs.gitlab.com&#x2F;ee&#x2F;development&#x2F;diffs.html#merge-request-diffs-against-the-head-of-the-target-branch&quot;&gt;documentation&lt;&#x2F;a&gt;,
actually says that &lt;em&gt;the target branch is
artificially merged into the source branch, then the resulting merge ref is
compared to the source branch&lt;&#x2F;em&gt;, rather than the other way around. I believe
this to be inaccurate since it contradicts both the
&lt;a href=&quot;https:&#x2F;&#x2F;blog.developer.atlassian.com&#x2F;a-better-pull-request&#x2F;&quot;&gt;article&lt;&#x2F;a&gt; which
inspired this feature, and my understanding of the GitLab code.&lt;&#x2F;p&gt;</content>
  </entry>
  <entry>
    <author><name>Alexandros Frantzis</name></author>
    <title>Interactive time series graph of confirmed COVID-19 cases per country</title>
    <link href="https://afrantzis.com/posts/covid-19-interactive-graph/" />
    <updated>2020-03-09T00:00:00Z</updated>
    <id>https://afrantzis.com/posts/covid-19-interactive-graph/</id>
    <content type="html">&lt;p&gt;I have been looking for more information about the trends of the number of
confirmed COVID-19 cases per country. I could find the numbers for each day,
but I wanted a visual representation of the information in order to readily
compare the trends in various regions.&lt;&#x2F;p&gt;
&lt;p&gt;John Hopkins University (JHU) has set up a great
&lt;a href=&quot;https:&#x2F;&#x2F;www.arcgis.com&#x2F;apps&#x2F;opsdashboard&#x2F;index.html#&#x2F;bda7594740fd40299423467b48e9ecf6&quot;&gt;dashboard&lt;&#x2F;a&gt;
tracking the COVID-19 cases worldwide. It contains a time series graph of the
overall cases, but doesn&#x27;t provide such graphs for each country.
Thankfully, JHU have made all their data publicly available (for
educational&#x2F;academic purposes) in their &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;CSSEGISandData&#x2F;COVID-19&quot;&gt;JHU CSSE COVID-19
repository&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Since I couldn&#x27;t find a visualization that matched my needs I decided
to create my own interactive graph:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;..&#x2F;..&#x2F;covid-19&#x2F;&quot;&gt;Interactive time series graph of confirmed COVID-19 cases per country&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The graph is implemented as a web page that uses client-side processing (i.e.,
javascript) to plot the time series for one or more countries. The JHU
data is fetched and processed by the client on each page load, so the graph
will display the latest data without requiring any server-side updates.&lt;&#x2F;p&gt;
&lt;p&gt;For example, this is a plot from that page for France, Italy and Spain as of
2020-03-08:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;afrantzis.com&#x2F;posts&#x2F;covid-19-interactive-graph&#x2F;france-italy-spain.png&quot; alt=&quot;france-italy-spain&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Given the time offset between the trend lines, it&#x27;s not always clear how the
trends compare. To be able to compare trends more easily, I added an option to
synchronize the displayed time series so that they start at (approximately) the
same confirmed case count. Here is the same series as above but synchronized
at 200 cases:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;afrantzis.com&#x2F;posts&#x2F;covid-19-interactive-graph&#x2F;france-italy-spain-sync-200.png&quot; alt=&quot;france-italy-spain-sync-200&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This plot indicates that France and Italy are following roughly the same trend,
whereas Spain is faring a bit better.&lt;&#x2F;p&gt;
&lt;p&gt;Before you draw any conclusions about trends that show up after
synchronization, keep in mind two important caveats.&lt;&#x2F;p&gt;
&lt;p&gt;First, since our sampling granularity is one day, and jumps in confirmed cases
between successive days can be large, starting points for each series after
synchronization may in fact be different enough to skew results. For example,
we may want to synchronize at around 200, but if one series jumps from 50 to
300, the starting point for that series is not going to be near 200.&lt;&#x2F;p&gt;
&lt;p&gt;Second, using different synchronization points may provide different views of
the trends. The same France-Italy-Spain plot synchronized at 40 cases gives:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;afrantzis.com&#x2F;posts&#x2F;covid-19-interactive-graph&#x2F;france-italy-spain-sync-40.png&quot; alt=&quot;france-italy-spain-sync-40&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;In this plot we can see that France and Spain initially followed a similar
trend, but then France started diverging upwards. This is somewhat apparent in
the original, non-synchronized plot, but only because the France and Spain
trend lines have a small time offset.&lt;&#x2F;p&gt;
&lt;p&gt;I hope people find this interactive graph informative!&lt;&#x2F;p&gt;</content>
  </entry>
  <entry>
    <author><name>Alexandros Frantzis</name></author>
    <title>Efficient saving of multi-source buffers</title>
    <link href="https://afrantzis.com/posts/efficient-saving-of-multi-source-buffers/" />
    <updated>2019-12-16T00:00:00Z</updated>
    <id>https://afrantzis.com/posts/efficient-saving-of-multi-source-buffers/</id>
    <content type="html">&lt;h2 id=&quot;preface&quot;&gt;Preface&lt;&#x2F;h2&gt;
&lt;p&gt;Several years ago I was working on &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;afrantzis&#x2F;libbls&quot;&gt;libbls&lt;&#x2F;a&gt;, a library implementing
editable buffers that can efficiently hold contents originating from both
memory and file sources. Typical clients of this libraries are programs that
need to edit arbitrary portions of very large files, like hex editors or wave
editors, while minimizing the required memory usage.&lt;&#x2F;p&gt;
&lt;p&gt;One of the more interesting problems I encountered was devising an efficient
way to save buffers to their corresponding files in place, while minimizing the
extra memory (or disk space) used in the process. This post describes how this
problem, which turns out to be NP-hard, can be modeled as a graph, and how we
can provide a reasonable solution by using a variation of a standard graph
algorithm.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;&#x2F;h2&gt;
&lt;p&gt;Buffers in libbls are described in terms of segments that contain data from
either memory or file sources. In order to conserve memory (and sometimes to
even make the editing feasible) the data from file sources is not loaded into
main memory. Instead, the buffer keeps information about the contained files
and ranges and reads the data in vm-page-sized chunks when needed. So, a buffer
could look like:&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;B:  |F1:0-9   |M1:10-18|F1:10-19 |M2:10-19|F2:0-6|
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Where F1 and F2 are file sources, M1 and M2 are memory sources and S:B-E
denotes a segment representing bytes from the range [B, E] of source S.&lt;&#x2F;p&gt;
&lt;p&gt;In the simple case, saving a buffer to a file consists of just reading data
from the various sources and writing them out to the target file. Things become
more complicated when the target file happens to be one of the file sources
used in the buffer.&lt;&#x2F;p&gt;
&lt;p&gt;This post aims to illustrate the issues that can arise in such cases and
propose an elegant way to resolve them.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;illustrating-the-problem&quot;&gt;Illustrating the problem&lt;&#x2F;h2&gt;
&lt;p&gt;Saving the buffer to a file typically involves reading each segment in order
and writing it out to the file. However, if the segment source is the same as
the file that we are writing to, and depending on the ordering of segments, we
may face a serious problem.&lt;&#x2F;p&gt;
&lt;p&gt;To illustrate the problem, consider a buffer B containing segment [0-9] of file
F at range [10-19] of the buffer, and assume that we want to write the buffer
back to file F:&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    S
F:  |0-9      |.........|

              S             
B:  |.........|F:0-9    |
    ^         ^         ^
    0         10        20
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Writing the buffer segments in order leads to a situation where we first write
out buffer range [0-9] to file F, overwriting the contents of the file at that
range. So, when moving on to the next segment, trying to write out the range
[10-19] of the buffer, the data we are going to read from the file (and
therefore write) is not the original data of [F:0-9], but the data belonging to
the previous segment of the buffer we just wrote at positions [0-9].&lt;&#x2F;p&gt;
&lt;p&gt;The solution in this case is to first write out range [10-19] of the buffer to
the file, so that the data we use is the original file data, and only then
write out any other segments.&lt;&#x2F;p&gt;
&lt;p&gt;The problem can become even more complicated when we have more segments from
the target file. A particularly interesting case arises when a segment from the
buffer which belongs to the target file happens to overlap with another segment
of F which is also present in the buffer:&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    S                   T
F:  |0-9      |.........|20-29    |.........|
                      
            T                     S 
B:  |.......|F:20-29  |...........|F:0-9    |
    ^       ^         ^           ^
    0       8         18          30
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;In this case segment S in F overlaps with segment T in B. We can simply try to
adapt the strategy used in the previous case and first write out the two target
file segments. This works but only if we are extra careful.  In this case, if
we first write segment T then when we try to read the data of segment S we will
read wrong data (file range 8-9 will contain data from segment T). If we do it
the other way around everything works wonderfully. &lt;&#x2F;p&gt;
&lt;p&gt;Taking the last example one step further, consider what happens if we have
cyclic overlaps:&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    S                   T
F:  |0-9      |.........|20-29    |....|

            T                S 
B:  |.......|F:20-29  |......|F:0-9    |
    ^       ^         ^      ^     ^
    0       8         18     25    30
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Now segment S in F overlaps with segment T in B, and segment T in F overlaps
with segment S in B. In this case there is no way to order the writes of
segments S and T so that we end up with the correct data.&lt;&#x2F;p&gt;
&lt;p&gt;A straightforward but wasteful way of tackling this problem is to save the
whole buffer to a temporary file and then move the file to its final location.
This works, and in some cases is preferred since it has the benefit of
atomicity, but requires extra space for the temporary file. When buffers reach
many GiB in size this method may prove to be unfeasible.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a name=&quot;remove-overlap&quot;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;A more efficient method is to try to eliminate the cyclic overlaps by removing
at least one of the overlaps involved. In the previous case we can replace
segment T in B with two segments M and T1 so that no overlap occurs. Segment M
will contain a part of T&#x27;s data but will actually store them in memory (or a
temporary file if necessary) and the T1 segment will just be a T minus the
range stored in M. This approach still requires some amount of extra memory,
but in most cases this amount is much smaller than the size of the whole
buffer. Using this scheme we have:&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    S                     T1
F:  |0-9      |...........|22-29  |....|

            M T1              S 
B:  |.......|.|F:22-29|......|F:0-9    |
    ^       ^         ^      ^     ^
    0       8         18     25    30
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;We have managed to eliminate the first overlap and now we can safely save the
buffer by first writing T1 then S and then the remaining segments of B.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;modeling-the-problem&quot;&gt;Modeling the problem&lt;&#x2F;h2&gt;
&lt;p&gt;The examples presented in the previous section show representative but simple
cases of the problems we can run into. In order to be able to handle cases of
arbitrary complexity it is useful to create a model of the problem. We can then
use this model to come up with algorithms that provide generic solutions.&lt;&#x2F;p&gt;
&lt;p&gt;The model we are going to present uses graphs. In these &lt;em&gt;overlap graphs&lt;&#x2F;em&gt;
vertices represent segments from the file we are going to save to, that are
also present in the buffer we are going to save. Edges between vertices denote
segment overlap: an edge from vertex P to vertex Q denotes that segment P in
the target file overlaps with segment Q in the buffer. Every edge carries with
it the size of the overlapping range.&lt;&#x2F;p&gt;
&lt;p&gt;Here are some buffers and their respective overlap graphs (P* denotes a
self-loop on P):&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    P              Q                   R
F:  |0-9      |....|15-24    |.........|35-42  |

                             P
B1: |........................|F:0-9    |.......|   P

              P              Q
B2: |.........|F:0-9     |...|F:15-24  |.......|   Q --&amp;gt; P

         P                Q
B3: |....|F:0-9    |......|F:20-29  |..........|   P* Q*

    R        P                    Q
B4: |F:35-42|F:0-9    |...........|F:20-29  |..|   R &amp;lt;-- P* &amp;lt;-- Q
                                                    \___________^

&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;solving-the-problem&quot;&gt;Solving the problem&lt;&#x2F;h2&gt;
&lt;p&gt;Using the overlap graph we can now answer the question: in what order should
the vertices (segments) be written to the file so that the correct data is
written?&lt;&#x2F;p&gt;
&lt;p&gt;If the graph has no cycles then we can process the vertices in topological
order. Topological order guarantees that each vertex is processed only when its
dependencies have already been processed and written to file, and thus that no
unwritten file segment in the buffer overlaps with the destination range of
that vertex.&lt;&#x2F;p&gt;
&lt;p&gt;As a special case, we can process a vertex that has a self-loop but no other
incoming edge.  This is achieved by first writing to the file the
non-overlapping part of the vertex and then the rest.&lt;&#x2F;p&gt;
&lt;p&gt;In order to handle graphs with cycles (except self-loops) we must find a way to
break the cycles. This can be achieved by removing the correct edges. An edge
from P to Q can be removed by replacing Q in the buffer by the segments Q1 and
M as described &lt;a href=&quot;https:&#x2F;&#x2F;afrantzis.com&#x2F;posts&#x2F;efficient-saving-of-multi-source-buffers&#x2F;#remove-overlap&quot;&gt;previously&lt;&#x2F;a&gt;. M contains an in memory copy of
data of the overlapping range. Q1 is the part of Q that remains. This technique
eliminates the overlap (because the overlapping part is now stored in memory)
and removes the edge. By choosing the edges to remove wisely, we can minimize
the amount of extra memory we are going to need.&lt;&#x2F;p&gt;
&lt;p&gt;Once we have an acyclic graph (self-loops allowed) we can process it as
described previously.&lt;&#x2F;p&gt;
&lt;p&gt;Let&#x27;s manually apply this method to an example:&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    P              Q                   R
F:  |0-9      |....|15-24    |.........|35-42  |

    R        P                    Q
B4: |F:35-42|F:0-9    |...........|F:20-29  |..|   R &amp;lt;-- P* &amp;lt;-- Q
                                                    \___________^
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;We first have to make the graph acyclic. We have a few choices for which edge
to break:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Q-&amp;gt;P, a 3 byte overlap&lt;&#x2F;li&gt;
&lt;li&gt;P-&amp;gt;R, a 7 byte overlap&lt;&#x2F;li&gt;
&lt;li&gt;R-&amp;gt;Q, a 5 byte overlap&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;To minimize the required extra memory we break the Q-&amp;gt;P edge by storing the
last three bytes of P in memory as segment M, so we get:&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    P1             Q                   R
F:  |0-6   |.......|15-24    |.........|35-42  |

    R       P1     M              Q
B4: |F:35-42|F:0-6 |..|...........|F:20-29  |..|   Q &amp;lt;-- R &amp;lt;-- P1
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Note that coincidentally we also resolved the self-loop of P. Now that we have
an acyclic graph we can process the buffer segments in topological order, thus
we first store P1 in range [8-14] of the file, next is R at [0-7] and finally Q
at range [30-40] followed by all other portions of the buffer.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;implementation-details&quot;&gt;Implementation Details&lt;&#x2F;h2&gt;
&lt;p&gt;libbls implements the solution described above when saving a file in place. The
high level logic for the algorithm resides in
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;afrantzis&#x2F;libbls&#x2F;blob&#x2F;17ade9439adbf2d46ed0d2a04dc9819563df38c5&#x2F;src&#x2F;buffer_file.c#L610&quot;&gt;bless_buffer_save&lt;&#x2F;a&gt;. The implementation of the algorithm
within that function can be conceptually split into three steps. Some
implementation details for each step are given below, along with links to the
functions that provide the relevant functionality.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;step-1-creating-the-overlap-graph&quot;&gt;Step 1: Creating the overlap graph&lt;&#x2F;h4&gt;
&lt;p&gt;Relevant functions:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;buffer_file.c&lt;&#x2F;strong&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;afrantzis&#x2F;libbls&#x2F;blob&#x2F;17ade9439adbf2d46ed0d2a04dc9819563df38c5&#x2F;src&#x2F;buffer_file.c#L134&quot;&gt;create_overlap_graph&lt;&#x2F;a&gt;&lt;br &#x2F;&gt;
&lt;strong&gt;overlap_graph.c&lt;&#x2F;strong&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;afrantzis&#x2F;libbls&#x2F;blob&#x2F;17ade9439adbf2d46ed0d2a04dc9819563df38c5&#x2F;src&#x2F;overlap_graph.c#L291&quot;&gt;overlap_graph_add_segment&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;To create the overlap graph we have to scan the buffer segment collection for
segments that belong to the file we want to save to. Each new segment that is
found must be checked against all previous found file segments for overlap.
This is an &lt;em&gt;O(n + k*f(k))&lt;&#x2F;em&gt; algorithm where n is the number of segments in the
segment collection and &lt;em&gt;k&lt;&#x2F;em&gt; the number of segments belonging to the file.  If we
check for overlap naively then &lt;em&gt;f(k) = O(k)&lt;&#x2F;em&gt; and therefore the algorithm is
&lt;em&gt;O(n + k*k)&lt;&#x2F;em&gt;. We can use an interval tree so that &lt;em&gt;f(k) = O(logk)&lt;&#x2F;em&gt; and the
algorithm becomes &lt;em&gt;O(n + k*logk)&lt;&#x2F;em&gt;.  As we don&#x27;t expect &lt;em&gt;k&lt;&#x2F;em&gt; to grow too large,
the implementation currently uses the naive approach for simplicity.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;step-2-making-the-graph-acyclic&quot;&gt;Step 2: Making the graph acyclic&lt;&#x2F;h4&gt;
&lt;p&gt;Relevant functions:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;overlap_graph.c&lt;&#x2F;strong&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;afrantzis&#x2F;libbls&#x2F;blob&#x2F;17ade9439adbf2d46ed0d2a04dc9819563df38c5&#x2F;src&#x2F;overlap_graph.c#L377&quot;&gt;overlap_graph_remove_cycles&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;In the second step the goal is to remove cycles from the graph, while trying to
minimize the total weight of the removed edges in order to minimize extra
memory usage. However, it turns out that the problem we are trying to solve,
minimum feedback arc set, is NP-Hard! Don&#x27;t despair though; we can get
reasonable results with only little extra work.&lt;&#x2F;p&gt;
&lt;p&gt;The undirected counterpart of the minimum feedback arc set problem is the
minimum (or maximum) spanning tree (MST) problem, which can be efficiently
solved by using various methods. We can use these methods to give a solution
(but not the best) for our problem, too. We can do that because MST algorithms
remove all undirected cycles and therefore all directed ones, too. The caveat
is that they remove more that we need them to; undirected cycles that are not
directed.&lt;&#x2F;p&gt;
&lt;p&gt;MST algorithms work by processing edges in non-decreasing or non-increasing
order of weight and adding them to the already formed tree (Prim) or trees
(Kruskal) if they aren&#x27;t already connected to them by an undirected path.
Because our goal is to avoid directed cycles we can be more lax with the rules
of adding an edge. A simple but useful observation is that if the destination
node of an edge has no outgoing edges then a directed cycle cannot be formed,
regardless of whether there is a pre-existing undirected path between the two
nodes. Similarly, if the source node of an edge has no incoming edges a
directed cycle cannot be formed either, regardless of the pre-existence of an
undirected path between the source and destination nodes.&lt;&#x2F;p&gt;
&lt;p&gt;We can use the previous observations to decrease the number of edges that are
incorrectly deleted by the MST algorithms when acting on directed graphs.
Although we don&#x27;t completely eliminate the erroneous deletions, these rules
give reasonable results while keeping the complexity the same as in the
undirected case.&lt;&#x2F;p&gt;
&lt;p&gt;Of the MST algorithms, Kruskal&#x27;s algorithm can be used unchanged in directed
graphs because it works directly on edges and doesn&#x27;t care about their
direction. It also works on disconnected graphs, since it finds a spanning
forest. For these reasons, it was selected as the basis for the algorithm used
by libbls.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;step-3-removing-edges-and-saving-to-file&quot;&gt;Step 3: Removing edges and saving to file&lt;&#x2F;h4&gt;
&lt;p&gt;Relevant functions:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;overlap_graph.c&lt;&#x2F;strong&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;afrantzis&#x2F;libbls&#x2F;blob&#x2F;17ade9439adbf2d46ed0d2a04dc9819563df38c5&#x2F;src&#x2F;overlap_graph.c#L544&quot;&gt;overlap_graph_get_removed_edges&lt;&#x2F;a&gt;&lt;br &#x2F;&gt;
&lt;strong&gt;buffer_file.c&lt;&#x2F;strong&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;afrantzis&#x2F;libbls&#x2F;blob&#x2F;17ade9439adbf2d46ed0d2a04dc9819563df38c5&#x2F;src&#x2F;buffer_file.c#L192&quot;&gt;break_edge&lt;&#x2F;a&gt;&lt;br &#x2F;&gt;
&lt;strong&gt;buffer_util.c&lt;&#x2F;strong&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;afrantzis&#x2F;libbls&#x2F;blob&#x2F;17ade9439adbf2d46ed0d2a04dc9819563df38c5&#x2F;src&#x2F;buffer_util.c#L412&quot;&gt;segcol_store_in_memory&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;afrantzis&#x2F;libbls&#x2F;blob&#x2F;17ade9439adbf2d46ed0d2a04dc9819563df38c5&#x2F;src&#x2F;buffer_util.c#L527&quot;&gt;segcol_store_in_file&lt;&#x2F;a&gt;&lt;br &#x2F;&gt;
&lt;strong&gt;overlap_graph.c&lt;&#x2F;strong&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;afrantzis&#x2F;libbls&#x2F;blob&#x2F;17ade9439adbf2d46ed0d2a04dc9819563df38c5&#x2F;src&#x2F;overlap_graph.c#L618&quot;&gt;overlap_graph_get_vertices_topo&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;In the previous step we calculated which edges would need to be removed to
create an acyclic graph. In this step we first perform the actual removal of
these edges by storing the associated data in memory or a temporary file as
described &lt;a href=&quot;https:&#x2F;&#x2F;afrantzis.com&#x2F;posts&#x2F;efficient-saving-of-multi-source-buffers&#x2F;#remove-overlap&quot;&gt;previously&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Removing the edges has the unfortunate side effect of further altering the
graph as segments are removed, added or changed in the segment collection. This
means that after removing the edges we must re-calculate the overlap graph for
the segment collection.  There may be some way to avoid re-calculating the
whole graph, making only local changes to the existing graph as vertices are
altered but we will use the simple (although more costly) way for now.&lt;&#x2F;p&gt;
&lt;p&gt;We then use this new overlap graph, which is guaranteed not to have any cycles,
to get the vertices in topological order and save them to the target file.&lt;&#x2F;p&gt;</content>
  </entry>
  <entry>
    <author><name>Alexandros Frantzis</name></author>
    <title>mda-rs: Custom Mail Delivery Agents in Rust</title>
    <link href="https://afrantzis.com/posts/mda-rs/" />
    <updated>2019-10-07T00:00:00Z</updated>
    <id>https://afrantzis.com/posts/mda-rs/</id>
    <content type="html">&lt;p&gt;I had been stubbornly using procmail for two decades to filter my email, before
deciding that it&#x27;s finally time for a change. Procmail served me well through
the years, but, little by little, the annoyances started adding up. The fact
that procmail is unmaintained since 2001 inspired less and less confidence as
years passed, and the requirement in many cases for external processing before
any useful matching could be performed (e.g., dealing with MIME content
transfer encoded data, or non us-ascii character sets) was a constant pain
point. As the complexity of my rules grew, I even had to resort to an external
program (a custom C++ program in my case) to perform some of the mailbox
selection logic, using the AUTOFOLDER feature of procmail.&lt;&#x2F;p&gt;
&lt;p&gt;At that point, and given all the functionality that I had to implement myself,
I seriously started questioning the value procmail was providing to me and
started looking for alternatives. I evaluated fdm and maildrop, finding in both
a lot that I liked; first and foremost a less arcane filtering language. In the
end, I found maildrop to be a closer match to my preferences and requirements,
and I especially appreciated the automatic MIME content decoding.&lt;&#x2F;p&gt;
&lt;p&gt;I briefly considered switching to maildrop, but a few experiments on my set of
filtering rules indicated that maildrop&#x27;s performance was significantly worse
compared to procmail, even though for procmail I had to call out to a few more
external programs to achieve similar functionality. I also gave fdm a go, and
it was even slower than maildrop. I receive a lot of emails each day, mostly
from various FOSS mailing lists, and the performance penalty adds up. While
waiting for a few dozen seconds daily wouldn&#x27;t have been the end of the world,
the thought that my original and much older solution was faster, disturbed me.&lt;&#x2F;p&gt;
&lt;p&gt;Meanwhile, I noticed that the control flow statements in maildrop&#x27;s filtering
language were similar to that of a general purpose programming language, and,
in fact, with the integration with regular expressions, they looked a bit like
perl. So, I thought, what if instead of using a domain specific language, I
could use a general purpose language, augmented by some kind of library to
implement the same filtering and delivery functionality. My thoughts then
drifted to other things, but the seed of that idea had already been planted in
my mind it seems, as a few years later I found myself implementing the code
that would become mda-rs.&lt;&#x2F;p&gt;
&lt;p&gt;With mda-rs I wanted to create an experience as close as possible to using an
interpreted domain specific language, the approach follow by typical MDAs,
while still having the performance and power of a full, compiled language at
the fingertips. One aspect of this experience was providing an API that feels
like natural fit for the intended purpose. The other aspect was providing a
straightforward way to build a custom MDA. For this second aspect, the
simplicity of Rust&#x27;s cargo was one of the reasons I decided to use Rust for
this project.&lt;&#x2F;p&gt;
&lt;p&gt;Another decision catering to a similar ease-of-use goal was that the user
shouldn&#x27;t be required to use external programs to transform the data just so
they could perform basic matching. To this end, mda-rs, like maildrop,
normalizes the email before processing, by decoding and converting all text
MIME content parts (including MIME encoded-words in headers) to plain UTF-8.&lt;&#x2F;p&gt;
&lt;p&gt;Of course, I also wanted the resulting custom MDAs to be fast; performance was
my main disappointment with other MDAs after all. Performance requires an
efficient implementation, but also and an API that encourages performant use.
An example of the effect of such a concern on the mda-rs API, is that the API
provides access to the header fields by name, so that one can perform targeted
per-header-field string searches, which can be much faster than regular
expression searches of the whole header.&lt;&#x2F;p&gt;
&lt;p&gt;Finally, an important requirement for all MDAs is that the email delivery is
durable, i.e., that no email will be lost in case of a system failure. In other
words, at any point in time at least one of the local filesystem and the email
server should have a complete and fully accessible copy of the email.&lt;&#x2F;p&gt;
&lt;p&gt;While investigating the best way to provide such durability guarantees, I
noticed that all three MDAs mentioned previously are fsyncing the written email
file, as expected.  However, they are not fsyncing the containing directory,
which could potentially lead to the file not appearing on the filesystem &lt;sup class=&quot;footnote-reference&quot;&gt;&lt;a href=&quot;#1&quot;&gt;1&lt;&#x2F;a&gt;&lt;&#x2F;sup&gt;.
The exact guarantees in this scenario seem to be dependent on the filesystem,
but, to provide maximum durability, mda-rs fsyncs both the file and the
containing directory by default. This does incur a performance penalty, so I
have also included an option to use the file-sync-only approach if preferred.&lt;&#x2F;p&gt;
&lt;p&gt;Since mda-rs was written to cater primarily to my personal needs, it currently
has some limitations, or unimplemented functionality, if you will. The most
prominent one is that it delivers to maildir only, since that&#x27;s the only
mailbox format I use. The second is that there is no built-in way to change the
email data (e.g., add a header field) except by filtering through an external
tool, since this is another feature I don&#x27;t use.&lt;&#x2F;p&gt;
&lt;p&gt;Here is a small taste of how a custom MDA would look like with mda-rs:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;rust&quot; class=&quot;language-rust z-code&quot;&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-keyword z-other z-rust&quot;&gt;use&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-path z-rust&quot;&gt;std&lt;span class=&quot;z-punctuation z-accessor z-rust&quot;&gt;::&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-path z-rust&quot;&gt;path&lt;span class=&quot;z-punctuation z-accessor z-rust&quot;&gt;::&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;PathBuf&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;

&lt;span class=&quot;z-keyword z-other z-rust&quot;&gt;use&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-path z-rust&quot;&gt;mda&lt;span class=&quot;z-punctuation z-accessor z-rust&quot;&gt;::&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;Email&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt; EmailRegex&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-type z-rust&quot;&gt;Result&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt; DeliveryDurability&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;

&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-rust&quot;&gt;fn&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-rust&quot;&gt;main&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt; &lt;span class=&quot;z-meta z-function z-return-type z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;&lt;span class=&quot;z-support z-type z-rust&quot;&gt;Result&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-storage z-type z-rust&quot;&gt;let&lt;&#x2F;span&gt; root &lt;span class=&quot;z-keyword z-operator z-assignment z-rust&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-path z-rust&quot;&gt;PathBuf&lt;span class=&quot;z-punctuation z-accessor z-rust&quot;&gt;::&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;from&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&#x2F;tmp&#x2F;my-personal-mail&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;

    &lt;span class=&quot;z-storage z-type z-rust&quot;&gt;let&lt;&#x2F;span&gt; &lt;span class=&quot;z-storage z-modifier z-rust&quot;&gt;mut&lt;&#x2F;span&gt; email &lt;span class=&quot;z-keyword z-operator z-assignment z-rust&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-path z-rust&quot;&gt;Email&lt;span class=&quot;z-punctuation z-accessor z-rust&quot;&gt;::&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;from_stdin_filtered&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-bitwise z-rust&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&#x2F;usr&#x2F;bin&#x2F;bogofilter&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;-ep&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;?&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-comment z-line z-double-slash z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-rust&quot;&gt;&#x2F;&#x2F;&lt;&#x2F;span&gt; Use quicker (but possibly less durable) delivery.
&lt;&#x2F;span&gt;    email&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;set_delivery_durability&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-path z-rust&quot;&gt;DeliveryDurability&lt;span class=&quot;z-punctuation z-accessor z-rust&quot;&gt;::&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;FileSyncOnly&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;

    &lt;span class=&quot;z-storage z-type z-rust&quot;&gt;let&lt;&#x2F;span&gt; from &lt;span class=&quot;z-keyword z-operator z-assignment z-rust&quot;&gt;=&lt;&#x2F;span&gt; email&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;header_field&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;From&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;unwrap_or&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-storage z-type z-rust&quot;&gt;let&lt;&#x2F;span&gt; bogosity &lt;span class=&quot;z-keyword z-operator z-assignment z-rust&quot;&gt;=&lt;&#x2F;span&gt; email&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;header_field&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;X-Bogosity&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;unwrap_or&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;

    &lt;span class=&quot;z-keyword z-control z-rust&quot;&gt;if&lt;&#x2F;span&gt; bogosity&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;contains&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Spam, tests=bogofilter&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-logical z-rust&quot;&gt;||&lt;&#x2F;span&gt;
       from&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;contains&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;@banneddomain.com&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
        email&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;deliver_to_maildir&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;root&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;join&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;spam&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;?&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
        &lt;span class=&quot;z-keyword z-control z-rust&quot;&gt;return&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-type z-rust&quot;&gt;Ok&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
    &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;

    &lt;span class=&quot;z-storage z-type z-rust&quot;&gt;let&lt;&#x2F;span&gt; cc &lt;span class=&quot;z-keyword z-operator z-assignment z-rust&quot;&gt;=&lt;&#x2F;span&gt; email&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;header_field&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Cc&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;unwrap_or&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-storage z-type z-rust&quot;&gt;let&lt;&#x2F;span&gt; to &lt;span class=&quot;z-keyword z-operator z-assignment z-rust&quot;&gt;=&lt;&#x2F;span&gt; email&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;header_field&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;To&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;unwrap_or&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;

    &lt;span class=&quot;z-keyword z-control z-rust&quot;&gt;if&lt;&#x2F;span&gt; to&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;contains&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;myworkemail@example.com&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-logical z-rust&quot;&gt;||&lt;&#x2F;span&gt;
       cc&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;contains&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;myworkemail@example.com&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
        &lt;span class=&quot;z-keyword z-control z-rust&quot;&gt;if&lt;&#x2F;span&gt; email&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;body&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;search&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;URGENCY RATING: (CRITICAL|URGENT)&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;?&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
            email&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;deliver_to_maildir&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;root&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;join&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;inbox&#x2F;myemail&#x2F;urgent&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;?&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
        &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-control z-rust&quot;&gt;else&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
            email&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;deliver_to_maildir&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;root&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;join&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;inbox&#x2F;myemail&#x2F;normal&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;?&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
        &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
        &lt;span class=&quot;z-keyword z-control z-rust&quot;&gt;return&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-type z-rust&quot;&gt;Ok&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
    &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;

    email&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;deliver_to_maildir&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;root&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;join&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;inbox&#x2F;unsorted&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;?&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;

    &lt;span class=&quot;z-support z-type z-rust&quot;&gt;Ok&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;and a corresponding minimal Cargo.toml:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;toml&quot; class=&quot;language-toml z-code&quot;&gt;&lt;code class=&quot;language-toml&quot; data-lang=&quot;toml&quot;&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-table z-begin z-toml&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-tag z-table z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-table z-toml&quot;&gt;package&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-table z-end z-toml&quot;&gt;]&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-tag z-key z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-toml&quot;&gt;name&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-key-value z-toml&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-basic z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;my-mda&lt;span class=&quot;z-punctuation z-definition z-string z-end z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-tag z-key z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-toml&quot;&gt;version&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-key-value z-toml&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-basic z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;0.1.0&lt;span class=&quot;z-punctuation z-definition z-string z-end z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-tag z-key z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-toml&quot;&gt;edition&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-key-value z-toml&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-basic z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;2018&lt;span class=&quot;z-punctuation z-definition z-string z-end z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;

&lt;span class=&quot;z-punctuation z-definition z-table z-begin z-toml&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-tag z-table z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-table z-toml&quot;&gt;dependencies&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-table z-end z-toml&quot;&gt;]&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-tag z-key z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-toml&quot;&gt;mda&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-key-value z-toml&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-basic z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;0.1&lt;span class=&quot;z-punctuation z-definition z-string z-end z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;To provide an idea of the performance gains to expect, I benchmarked a us-ascii
only version of my personal mail filtering rules on a sample of 250 of my
recently received emails using all the aforementioned MDAs. Of course, the
performance results will vary depending on both the rules and the email
themselves, but in my experience what is presented below seems to be a typical
outcome. I&#x27;d be very interested to know how mda-rs worked for others on the
performance front.&lt;&#x2F;p&gt;
&lt;p&gt;In the benchmark I included runs both with and without filtering for spam,
since such filtering takes up a significant amount of processing and affects
the relative results. For mda-rs I included two versions, one that mostly uses
per-header-field searches, and a second one that uses regular expressions
exclusively, and thus is a bit closer to how the other MDAs work.  For each
mda-rs version I ran the benchmark both in file sync only mode, which is how
the others MDAs work, and full sync (file and directory) mode, which is the
default for mda-rs. Note that, for this benchmark, both maildrop and mda-rs
performed MIME decoding and translation to UTF-8 (internally and
automatically), whereas neither procmail nor fdm did so, and no external
program was used to provide such functionality. I verified that the delivery
results were the same for all MDAs.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;afrantzis.com&#x2F;posts&#x2F;mda-rs&#x2F;mda-benchmark.svg&quot; alt=&quot;mda-benchmark&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;mda-rs wins hands down when operating in file sync mode, while at the same time
doing more work (normalizing the email) compared to the next faster contestant,
procmail. In full sync mode, the extra directory syncs prove to be expensive
enough to overshadow other mda-rs performance gains, and procmail takes the
lead. Still, even in this case, the performance is acceptable and much better
compared to both maildrop and fdm.&lt;&#x2F;p&gt;
&lt;p&gt;If you would like to learn more about how to use mda-rs, you can find detailed
documentation at:
&lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;mda&quot;&gt;https:&#x2F;&#x2F;docs.rs&#x2F;mda&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The mda-rs project repository is at:
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;afrantzis&#x2F;mda-rs&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;afrantzis&#x2F;mda-rs&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The mda-rs crates.io entry is at:
&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;mda&quot;&gt;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;mda&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Enjoy!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;sup class=&quot;footnote-reference&quot;&gt;&lt;a href=&quot;#1&quot;&gt;1&lt;&#x2F;a&gt;&lt;&#x2F;sup&gt; See &lt;a href=&quot;https:&#x2F;&#x2F;lwn.net&#x2F;Articles&#x2F;457667&#x2F;&quot;&gt;https:&#x2F;&#x2F;lwn.net&#x2F;Articles&#x2F;457667&#x2F;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;</content>
  </entry>
  <entry>
    <author><name>Alexandros Frantzis</name></author>
    <title>Dynamic programming for fun and profit</title>
    <link href="https://afrantzis.com/posts/dynamic-programming-for-fun-and-profit/" />
    <updated>2019-04-20T15:00:00Z</updated>
    <id>https://afrantzis.com/posts/dynamic-programming-for-fun-and-profit/</id>
    <content type="html">&lt;p&gt;Imagine that you decide to make an investment. You have 1720 currency units
(CU) at your disposal and the investment options that are available are:&lt;&#x2F;p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Option#&lt;&#x2F;th&gt;&lt;th&gt;min amount&lt;&#x2F;th&gt;&lt;th&gt;max amount&lt;&#x2F;th&gt;&lt;th&gt;interest&lt;&#x2F;th&gt;&lt;th&gt;sign up bonus&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;50&lt;&#x2F;td&gt;&lt;td&gt;99&lt;&#x2F;td&gt;&lt;td&gt;1%&lt;&#x2F;td&gt;&lt;td&gt;0.5&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;2&lt;&#x2F;td&gt;&lt;td&gt;100&lt;&#x2F;td&gt;&lt;td&gt;299&lt;&#x2F;td&gt;&lt;td&gt;1.1%&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;3&lt;&#x2F;td&gt;&lt;td&gt;300&lt;&#x2F;td&gt;&lt;td&gt;499&lt;&#x2F;td&gt;&lt;td&gt;1.6%&lt;&#x2F;td&gt;&lt;td&gt;2.2&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;4&lt;&#x2F;td&gt;&lt;td&gt;500&lt;&#x2F;td&gt;&lt;td&gt;999&lt;&#x2F;td&gt;&lt;td&gt;1.8%&lt;&#x2F;td&gt;&lt;td&gt;2.5&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;5&lt;&#x2F;td&gt;&lt;td&gt;1000&lt;&#x2F;td&gt;&lt;td&gt;1999&lt;&#x2F;td&gt;&lt;td&gt;2%&lt;&#x2F;td&gt;&lt;td&gt;4&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;p&gt;You may use multiple investment options, each one possibly multiple times. Each
option accepts a minimum and maximum amount of CUs, and provides an interest on
that amount plus an additional bonus amount which does not depend on the
invested amount.  How will you invest your money? Take your time and continue
reading when ready...&lt;&#x2F;p&gt;
&lt;p&gt;Let see how you did! If you invested all 1720 CU in option 5 then...  you chose
poorly. Your profit is going to be 38.4 CU â not bad, but you can do better. If
you invested 1020 in option 5 and 700 in option 4, that&#x27;s a bit better at 39.5
CU, but still not optimal. What about 1020 in option 5, 500 in option 4 and 200
in option 2? That&#x27;s actually a bit worse at 39.1 CU! I&#x27;ll spare you the agony
and reveal the best solution: 1020 in option 5, 300 in option 3 &lt;em&gt;twice&lt;&#x2F;em&gt;, and
100 in option 2, giving a profit of 40.5 CU. This is about 5.5% better than the
straightforward solution of assigning everything to option 5.&lt;&#x2F;p&gt;
&lt;p&gt;As this short exercise has hopefully exhibited, finding the optimal portofolio
of options is far from trivial. Is there a way to programmatically find the
optimal solution?&lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-road-to-dynamic-programming&quot;&gt;The road to dynamic programming&lt;&#x2F;h2&gt;
&lt;p&gt;First, let&#x27;s define what are trying to find. A portofolio is a multiset of
&lt;span style=&quot;vertical-align: -3.9248926525529266pt;&quot;&gt;
&lt;!-- This file was generated by dvisvgm 2.14 --&gt;
&lt;svg version=&apos;1.1&apos; xmlns=&apos;http://www.w3.org/2000/svg&apos; xmlns:xlink=&apos;http://www.w3.org/1999/xlink&apos; width=&apos;31.459327pt&apos; height=&apos;14.574568pt&apos; viewBox=&apos;-.562502 -10.649675 31.459327 14.574568&apos;&gt;
&lt;style type=&apos;text/css&apos;&gt;
&lt;![CDATA[@font-face{font-family:cmmi12;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
@font-face{font-family:cmr12;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
]]&gt;
&lt;/style&gt;
&lt;g id=&apos;page1&apos; transform=&apos;matrix(1.125 0 0 1.125 0 0)&apos;&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;0&apos; y=&apos;0&apos;&gt;(&lt;/text&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;4.552326&apos; y=&apos;0&apos;&gt;o,&lt;tspan x=&apos;15.423922&apos;&gt;n&lt;/tspan&gt;&lt;/text&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;22.411528&apos; y=&apos;0&apos;&gt;)&lt;/text&gt;
&lt;/g&gt;
&lt;/svg&gt;&lt;/span&gt; pairs, each pair representing that we are assigning &lt;span style=&quot;vertical-align: -0.5625016189290162pt;&quot;&gt;
&lt;!-- This file was generated by dvisvgm 2.14 --&gt;
&lt;svg version=&apos;1.1&apos; xmlns=&apos;http://www.w3.org/2000/svg&apos; xmlns:xlink=&apos;http://www.w3.org/1999/xlink&apos; width=&apos;8.98606pt&apos; height=&apos;6.915794pt&apos; viewBox=&apos;-.562502 -6.353292 8.98606 6.915794&apos;&gt;
&lt;style type=&apos;text/css&apos;&gt;
&lt;![CDATA[@font-face{font-family:cmmi12;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
]]&gt;
&lt;/style&gt;
&lt;g id=&apos;page1&apos; transform=&apos;matrix(1.125 0 0 1.125 0 0)&apos;&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;0&apos; y=&apos;0&apos;&gt;n&lt;/text&gt;
&lt;/g&gt;
&lt;/svg&gt;&lt;/span&gt; CU to
option &lt;span style=&quot;vertical-align: -0.5625016189290162pt;&quot;&gt;
&lt;!-- This file was generated by dvisvgm 2.14 --&gt;
&lt;svg version=&apos;1.1&apos; xmlns=&apos;http://www.w3.org/2000/svg&apos; xmlns:xlink=&apos;http://www.w3.org/1999/xlink&apos; width=&apos;7.455859pt&apos; height=&apos;6.915794pt&apos; viewBox=&apos;-.562502 -6.353292 7.455859 6.915794&apos;&gt;
&lt;style type=&apos;text/css&apos;&gt;
&lt;![CDATA[@font-face{font-family:cmmi12;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
]]&gt;
&lt;/style&gt;
&lt;g id=&apos;page1&apos; transform=&apos;matrix(1.125 0 0 1.125 0 0)&apos;&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;0&apos; y=&apos;0&apos;&gt;o&lt;/text&gt;
&lt;/g&gt;
&lt;/svg&gt;&lt;/span&gt;. For this solution to be acceptable, all the pairs need to be
valid and the total sum of all pairs must not exceed the total amount of money
we want to use. We are trying to find the portofolio which provides the maximum
profit.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;brute-force&quot;&gt;Brute force&lt;&#x2F;h3&gt;
&lt;p&gt;To understand the solution space a bit more let&#x27;s devise a way to enumerate
&lt;em&gt;all&lt;&#x2F;em&gt; the portofolios, which is in fact not trivial.&lt;&#x2F;p&gt;
&lt;p&gt;One way to think about this is that to produce a portofolio we first have to
split our total amount in some way, and assign an option to each element in the
split. Each such split is formally called a partition of &lt;span style=&quot;vertical-align: -0.5625016189290162pt;&quot;&gt;
&lt;!-- This file was generated by dvisvgm 2.14 --&gt;
&lt;svg version=&apos;1.1&apos; xmlns=&apos;http://www.w3.org/2000/svg&apos; xmlns:xlink=&apos;http://www.w3.org/1999/xlink&apos; width=&apos;8.98606pt&apos; height=&apos;6.915794pt&apos; viewBox=&apos;-.562502 -6.353292 8.98606 6.915794&apos;&gt;
&lt;style type=&apos;text/css&apos;&gt;
&lt;![CDATA[@font-face{font-family:cmmi12;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
]]&gt;
&lt;/style&gt;
&lt;g id=&apos;page1&apos; transform=&apos;matrix(1.125 0 0 1.125 0 0)&apos;&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;0&apos; y=&apos;0&apos;&gt;n&lt;/text&gt;
&lt;/g&gt;
&lt;/svg&gt;&lt;/span&gt;. The number of
partitions for a number &lt;span style=&quot;vertical-align: -0.5625016189290162pt;&quot;&gt;
&lt;!-- This file was generated by dvisvgm 2.14 --&gt;
&lt;svg version=&apos;1.1&apos; xmlns=&apos;http://www.w3.org/2000/svg&apos; xmlns:xlink=&apos;http://www.w3.org/1999/xlink&apos; width=&apos;8.98606pt&apos; height=&apos;6.915794pt&apos; viewBox=&apos;-.562502 -6.353292 8.98606 6.915794&apos;&gt;
&lt;style type=&apos;text/css&apos;&gt;
&lt;![CDATA[@font-face{font-family:cmmi12;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
]]&gt;
&lt;/style&gt;
&lt;g id=&apos;page1&apos; transform=&apos;matrix(1.125 0 0 1.125 0 0)&apos;&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;0&apos; y=&apos;0&apos;&gt;n&lt;/text&gt;
&lt;/g&gt;
&lt;/svg&gt;&lt;/span&gt; is given by the &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Partition_function_(number_theory)&quot;&gt;partition
function&lt;&#x2F;a&gt;
&lt;span style=&quot;vertical-align: -3.9248926525529266pt;&quot;&gt;
&lt;!-- This file was generated by dvisvgm 2.14 --&gt;
&lt;svg version=&apos;1.1&apos; xmlns=&apos;http://www.w3.org/2000/svg&apos; xmlns:xlink=&apos;http://www.w3.org/1999/xlink&apos; width=&apos;25.838325pt&apos; height=&apos;14.574568pt&apos; viewBox=&apos;-.562502 -10.649675 25.838325 14.574568&apos;&gt;
&lt;style type=&apos;text/css&apos;&gt;
&lt;![CDATA[@font-face{font-family:cmr12;src:url(data:application/x-font-woff;base64,d09GRgABAAAAAAY8AA4AAAAACEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGRlRNAAABRAAAABoAAAAckuE1CU9TLzIAAAFgAAAAQgAAAFZWRF5QY21hcAAAAaQAAABEAAABQgAPBthjdnQgAAAB6AAAAAYAAAAGAnkAIWZwZ20AAAHwAAABsQAAAmUPtC+nZ2x5ZgAAA6QAAAD2AAABHDojXFtoZWFkAAAEnAAAADEAAAA2H8OZR2hoZWEAAATQAAAAHgAAACQEjwCGaG10eAAABPAAAAASAAAAEgSrAINsb2NhAAAFBAAAAAwAAAAMAIYA4m1heHAAAAUQAAAAIAAAACABHwBLbmFtZQAABTAAAADBAAABHaYLJ0Vwb3N0AAAF9AAAABgAAAAsABMAD3ByZXAAAAYMAAAALgAAAC6w8isUeNpjYGBgZACCy9vuzQDR96dqW8BoAFIxBq8AAHjaY2BkrGGcwMDKwMDUybSbgYGhG0Iz3mcwZGQCijKwcjLAACMDEghIc00BUhoMmkxv/7MxRDG9Y/gNUwMA2GgLPwAAeNpjYGBgZoBgGQZGBhCwAfIYwXwWBgUgzQKEIL7m//9AUuP///+3oSoZGNkYYEwGRiYgwcSAChgRTGYWhmEJAHAdBuoAAAAhAnkAAHjaXVG7TltBEN0NDwOBxNggOdoUs5mQAu+FNkggri7CyHZjOULajVzkYlzAB1AgUYP2awZoKFOkTYOQCyQ+gU+IlJk1iaI0Ozuzc86ZM0vKkap3ab3nqXMWSOFug2abfiek2kWAB9L1jUZG2sEjLTYzeuW6fb+PwWY05U4aQHnPW8pDRtNOoBbtuX8yP4PhPv/LPAeDlmaanlpnIT2EwHwzbmnwNaNZd/1BX7E6XA0GhhTTVNz1x1TK/5bmXG0ZtjYzmndwISI/mAZoaq2NQNOfOqR6Po5iCXL5bKwNJqasP8lEcGEyXdVULTO+dnCf7Cw62KRKc+ABDrBVnoKH46MJhfQtiTJLQ4SD2CoxQsQkh0JOOXeyPylQPpKEMW+S0s64Ya2BceQ1MKjN0xy+zGZT21uHMH4RR/DdL8aSDj6yoTZGhNiOWApgApGQUVW+ocZzL4sBudT+MxAlYHn67V8nAq07NhEvZW2dY4wVgp7fNt/5ZcXdqlznRaG7d1U1VOmU5kMvZ9/jEU+PheGgseDN531/o0DtDYsbDZoDwZDejd7/0Vp1xFXeCx/ZbzWzsRYAAAB42mNgYlBkYGDUZJrFwMzAzqC3kZFB32YTOwvjW6ONbKx3bDYxMwGZDBuZQcKsIOFN7GxMf2w2MYLEjQUVBdWNBZUVGTmeHzvGNOtvmiJTBAMDE0PSf1ZGV6Z3DOIMEgxCDIwbJPU3CFzbwHJ2oxSjNoOBIauJupqggLmZqYmyEh8jO5uoiLgck7GRKaOr4JzFXJzsBs5iXk7S7vrsnJ9ZBecxWjBaLuNk5dAK1p28Y3OHWbQGB8gOc6AdUqh28FzbwACzQ9VEXY9JWQlotJigAMgKYyM7RqCVjFIQkxE2/dzcCTITaNO/E/+OQ22aso0BAIbuQecAAHjaY2BkYGAA4m0t6w7G89t8ZZBnfg4UYbg/VdsCTiv+Z2V0ZXoH5HIwMIFEAVknC2cAAAB42mNgZGBgeveflSGKsYYBCBhdGRgZUAELAFbIAxgAAAF8ACEAAAAAAXwAAAF8AGIANwAAAAAAKgAqACoAXACOAAEAAAAFABkAAgAAAAAAAgABAAIAFgAAAQAALgAAAAB42kWNS2rDMBRFj+Mm/QRKR6FD0bmNpaHHxQvIIMNCCKoJ+ANysoAsIwvIArLDXjmCSui9c58u7wIv/JIRz4JnPhLnfPGTeMmaa+KV1F2/2dOr/O+zM3LON5+Jl2y4JF7xxo0tnpYzHXsCbH177vaChpGB09yDHB6Do6RSr/UO9JpbzR46UqFqVZ1cTpdmHE7NGFpvXFmZ2hz6YJ26dYW1haucPDutDkwc58C4KIaw82E6joOxpcR/GPMK/gDIeSYAAAAAeNpjYGJABowM6IAVLMrEwM3AAwABFAAjuAH/hbABjQBLsAhQWLEBAY5ZsUYGK1ghsBBZS7AUUlghsIBZHbAGK1xYWbAUKwAA) format(&apos;woff&apos;);}
@font-face{font-family:cmmi12;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
]]&gt;
&lt;/style&gt;
&lt;g id=&apos;page1&apos; transform=&apos;matrix(1.125 0 0 1.125 0 0)&apos;&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;0&apos; y=&apos;0&apos;&gt;p&lt;/text&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;5.875143&apos; y=&apos;0&apos;&gt;(&lt;/text&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;10.427469&apos; y=&apos;0&apos;&gt;n&lt;/text&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;17.415074&apos; y=&apos;0&apos;&gt;)&lt;/text&gt;
&lt;/g&gt;
&lt;/svg&gt;&lt;/span&gt; which becomes spectacular very quickly. For each such partition we also
need to factor in all the different acceptable option permutations.&lt;&#x2F;p&gt;
&lt;p&gt;Another way to think about this, which turns out to be more helpful, is with a
recursive, constructive view of the problem.  Let &lt;span style=&quot;vertical-align: -2.579923287671233pt;&quot;&gt;
&lt;!-- This file was generated by dvisvgm 2.14 --&gt;
&lt;svg version=&apos;1.1&apos; xmlns=&apos;http://www.w3.org/2000/svg&apos; xmlns:xlink=&apos;http://www.w3.org/1999/xlink&apos; width=&apos;15.954307pt&apos; height=&apos;12.332957pt&apos; viewBox=&apos;-.562502 -9.753034 15.954307 12.332957&apos;&gt;
&lt;style type=&apos;text/css&apos;&gt;
&lt;![CDATA[@font-face{font-family:cmmi8;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
@font-face{font-family:cmmi12;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
]]&gt;
&lt;/style&gt;
&lt;g id=&apos;page1&apos; transform=&apos;matrix(1.125 0 0 1.125 0 0)&apos;&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;0&apos; y=&apos;0&apos;&gt;P&lt;/text&gt;
&lt;text font-family=&apos;cmmi8&apos; font-size=&apos;7.970112&apos; x=&apos;7.545268&apos; y=&apos;1.793263&apos;&gt;n&lt;/text&gt;
&lt;/g&gt;
&lt;/svg&gt;&lt;/span&gt; be the set of
portfolios for &lt;span style=&quot;vertical-align: -0.5625016189290162pt;&quot;&gt;
&lt;!-- This file was generated by dvisvgm 2.14 --&gt;
&lt;svg version=&apos;1.1&apos; xmlns=&apos;http://www.w3.org/2000/svg&apos; xmlns:xlink=&apos;http://www.w3.org/1999/xlink&apos; width=&apos;8.98606pt&apos; height=&apos;6.915794pt&apos; viewBox=&apos;-.562502 -6.353292 8.98606 6.915794&apos;&gt;
&lt;style type=&apos;text/css&apos;&gt;
&lt;![CDATA[@font-face{font-family:cmmi12;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
]]&gt;
&lt;/style&gt;
&lt;g id=&apos;page1&apos; transform=&apos;matrix(1.125 0 0 1.125 0 0)&apos;&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;0&apos; y=&apos;0&apos;&gt;n&lt;/text&gt;
&lt;/g&gt;
&lt;/svg&gt;&lt;/span&gt; total CU. From this set, the subset of porfolios
that use option &lt;span style=&quot;vertical-align: -0.5625016189290162pt;&quot;&gt;
&lt;!-- This file was generated by dvisvgm 2.14 --&gt;
&lt;svg version=&apos;1.1&apos; xmlns=&apos;http://www.w3.org/2000/svg&apos; xmlns:xlink=&apos;http://www.w3.org/1999/xlink&apos; width=&apos;7.455859pt&apos; height=&apos;6.915794pt&apos; viewBox=&apos;-.562502 -6.353292 7.455859 6.915794&apos;&gt;
&lt;style type=&apos;text/css&apos;&gt;
&lt;![CDATA[@font-face{font-family:cmmi12;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
]]&gt;
&lt;/style&gt;
&lt;g id=&apos;page1&apos; transform=&apos;matrix(1.125 0 0 1.125 0 0)&apos;&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;0&apos; y=&apos;0&apos;&gt;o&lt;/text&gt;
&lt;/g&gt;
&lt;/svg&gt;&lt;/span&gt; with &lt;span style=&quot;vertical-align: -0.5625016189290162pt;&quot;&gt;
&lt;!-- This file was generated by dvisvgm 2.14 --&gt;
&lt;svg version=&apos;1.1&apos; xmlns=&apos;http://www.w3.org/2000/svg&apos; xmlns:xlink=&apos;http://www.w3.org/1999/xlink&apos; width=&apos;8.425696pt&apos; height=&apos;10.464956pt&apos; viewBox=&apos;-.562502 -9.902454 8.425696 10.464956&apos;&gt;
&lt;style type=&apos;text/css&apos;&gt;
&lt;![CDATA[@font-face{font-family:cmmi12;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
]]&gt;
&lt;/style&gt;
&lt;g id=&apos;page1&apos; transform=&apos;matrix(1.125 0 0 1.125 0 0)&apos;&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;0&apos; y=&apos;0&apos;&gt;k&lt;/text&gt;
&lt;/g&gt;
&lt;/svg&gt;&lt;/span&gt; CU consists of all portofolios with
&lt;span style=&quot;vertical-align: -1.6832986301369863pt;&quot;&gt;
&lt;!-- This file was generated by dvisvgm 2.14 --&gt;
&lt;svg version=&apos;1.1&apos; xmlns=&apos;http://www.w3.org/2000/svg&apos; xmlns:xlink=&apos;http://www.w3.org/1999/xlink&apos; width=&apos;32.725046pt&apos; height=&apos;11.585753pt&apos; viewBox=&apos;-.562502 -9.902454 32.725046 11.585753&apos;&gt;
&lt;style type=&apos;text/css&apos;&gt;
&lt;![CDATA[@font-face{font-family:cmsy10;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
@font-face{font-family:cmmi12;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
]]&gt;
&lt;/style&gt;
&lt;g id=&apos;page1&apos; transform=&apos;matrix(1.125 0 0 1.125 0 0)&apos;&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;0&apos; y=&apos;0&apos;&gt;n&lt;/text&gt;
&lt;text font-family=&apos;cmsy10&apos; font-size=&apos;11.955168&apos; x=&apos;9.644269&apos; y=&apos;0&apos;&gt;â&lt;/text&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;21.59943&apos; y=&apos;0&apos;&gt;k&lt;/text&gt;
&lt;/g&gt;
&lt;/svg&gt;&lt;/span&gt; total CU combined with the option &lt;span style=&quot;vertical-align: -3.9248926525529266pt;&quot;&gt;
&lt;!-- This file was generated by dvisvgm 2.14 --&gt;
&lt;svg version=&apos;1.1&apos; xmlns=&apos;http://www.w3.org/2000/svg&apos; xmlns:xlink=&apos;http://www.w3.org/1999/xlink&apos; width=&apos;30.898962pt&apos; height=&apos;14.574568pt&apos; viewBox=&apos;-.562502 -10.649675 30.898962 14.574568&apos;&gt;
&lt;style type=&apos;text/css&apos;&gt;
&lt;![CDATA[@font-face{font-family:cmmi12;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
@font-face{font-family:cmr12;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
]]&gt;
&lt;/style&gt;
&lt;g id=&apos;page1&apos; transform=&apos;matrix(1.125 0 0 1.125 0 0)&apos;&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;0&apos; y=&apos;0&apos;&gt;(&lt;/text&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;4.552326&apos; y=&apos;0&apos;&gt;o,&lt;tspan x=&apos;15.423922&apos;&gt;k&lt;/tspan&gt;&lt;/text&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;21.913426&apos; y=&apos;0&apos;&gt;)&lt;/text&gt;
&lt;/g&gt;
&lt;/svg&gt;&lt;/span&gt;. Expressing this with set
notation we have (&lt;span style=&quot;vertical-align: -0.5625016189290162pt;&quot;&gt;
&lt;!-- This file was generated by dvisvgm 2.14 --&gt;
&lt;svg version=&apos;1.1&apos; xmlns=&apos;http://www.w3.org/2000/svg&apos; xmlns:xlink=&apos;http://www.w3.org/1999/xlink&apos; width=&apos;10.091397pt&apos; height=&apos;8.597007pt&apos; viewBox=&apos;-.562502 -8.034505 10.091397 8.597007&apos;&gt;
&lt;style type=&apos;text/css&apos;&gt;
&lt;![CDATA[@font-face{font-family:cmsy10;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
]]&gt;
&lt;/style&gt;
&lt;g id=&apos;page1&apos; transform=&apos;matrix(1.125 0 0 1.125 0 0)&apos;&gt;
&lt;text font-family=&apos;cmsy10&apos; font-size=&apos;11.955168&apos; x=&apos;0&apos; y=&apos;0&apos;&gt;î&lt;/text&gt;
&lt;/g&gt;
&lt;/svg&gt;&lt;/span&gt; is the multiset sum operator, which in our case is
used to add items to the multiset):&lt;&#x2F;p&gt;
&lt;p&gt;&lt;div style=&quot;vertical-align: -3.9248926525529266pt; text-align: center&quot;&gt;
&lt;!-- This file was generated by dvisvgm 2.14 --&gt;
&lt;svg version=&apos;1.1&apos; xmlns=&apos;http://www.w3.org/2000/svg&apos; xmlns:xlink=&apos;http://www.w3.org/1999/xlink&apos; width=&apos;211.004779pt&apos; height=&apos;14.574568pt&apos; viewBox=&apos;-.562502 -10.649675 211.004779 14.574568&apos;&gt;
&lt;style type=&apos;text/css&apos;&gt;
&lt;![CDATA[@font-face{font-family:cmsy8;src:url(data:application/x-font-woff;base64,d09GRgABAAAAAAXMAA4AAAAAB7wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGRlRNAAABRAAAABoAAAAckuE1B09TLzIAAAFgAAAAQwAAAFZ2Rn+eY21hcAAAAaQAAAA+AAABQgAPJb1jdnQgAAAB5AAAAAYAAAAGAaAAIWZwZ20AAAHsAAABsQAAAmUPtC+nZ2x5ZgAAA6AAAACUAAAAlKEa4SBoZWFkAAAENAAAADEAAAA2IV6ZE2hoZWEAAARoAAAAHgAAACQE/QM/aG10eAAABIgAAAAQAAAAEAmuAHlsb2NhAAAEmAAAAAoAAAAKAHQAVG1heHAAAASkAAAAIAAAACABHgA7bmFtZQAABMQAAADAAAABHbNUuJpwb3N0AAAFhAAAABYAAAAqAPYAA3ByZXAAAAWcAAAALgAAAC6w8isUeNpjYGBgZACCy9vuzQDR96dqm8NoAFInBq0AAHjaY2BktmKcwMDKwMDUybSbgYGhG0Iz3mcwZGQCijKwcjIgAwcYIyDNNYWBQUlISYjx4N9bDFGMB8HCjCACAM1SCtEAeNpjYGBgZoBgGQZGBhCwAfIYwXwWBgUgzQKEQL6S0P//EPLuR6hKBkY2BhiTgZEJSDAxoAJGhmEPAHaIBu4AAAAAACEBoAAAeNpdUbtOW0EQ3Q0PA4HE2CA52hSzmZAC74U2SCCuLsLIdmM5QtqNXORiXMAHUCBRg/ZrBmgoU6RNg5ALJD6BT4iUmTWJojQ7O7NzzpkzS8qRqndpveepcxZI4W6DZpt+J6TaRYAH0vWNRkbawSMtNjN65bp9v4/BZjTlThpAec9bykNG006gFu25fzI/g+E+/8s8B4OWZpqeWmchPYTAfDNuafA1o1l3/UFfsTpcDQaGFNNU3PXHVMr/luZcbRm2NjOad3AhIj+YBmhqrY1A0586pHo+jmIJcvlsrA0mpqw/yURwYTJd1VQtM752cJ/sLDrYpEpz4AEOsFWegofjowmF9C2JMktDhIPYKjFCxCSHQk45d7I/KVA+koQxb5LSzrhhrYFx5DUwqM3THL7MZlPbW4cwfhFH8N0vxpIOPrKhNkaE2I5YCmACkZBRVb6hxnMviwG51P4zECVgefrtXycCrTs2ES9lbZ1jjBWCnt823/llxd2qXOdFobt3VTVU6ZTmQy9n3+MRT4+F4aCx4M3nfX+jQO0NixsNmgPBkN6N3v/RWnXEVd4LH9lvNbOxFgAAAAACACEAAAEpAcEAAwAHAC6xAQAvPLIHBAHtMrEGBdw8sgMCAe0yALEDAC88sgUEAe0ysgcGAvw8sgECAe0yMxEhESczESMhAQjnxsYBwf4/IQF/AAACAFgA4wLhAREABwAIABoAsAcvsATNAbAJL7EKASsAsQQHERKwCDkwMSUyNCMhIhQzIQK7Jib9wyYmAj3jLi542mNgZGBgAOL6HwyX4/ltvjLIMz8HijDcn6ptDqcVGRiYHjIeBHI5GJhAogA+XQpxAAAAeNpjYGRgYDzIwMAQxWwFJBmYHjIwMqACFgA4LAJDAAADOgAhAAAAAAM6AAADOgBYAAAAKgAqACoASgAAAAEAAAAEAAkAAgAAAAAAAgABAAIAFgAAAQAALgAAAAB42kWNTarCQBCEP//1CeJKXA7uEzKzEteSA7hwKYiMQdAEJrpw6THeATyAN7QSBpxmur6mi2pgzJkOzesyYh65x4pD5AFT/iMPNX207fQn8s9aZ8M9tiwjD1jwijzkjzc7PAUPrhwJsPPF43oU5FSU3FsNcngMjpRMutE/caPmyTrOVttE3ao7uZyKvCrveRUKb1yamY053ernWmpdYm3iMifPXtFBUZf2YBPUHGHvQ32pSmNTDb9jtBF8AQdeJzx42mNgYkAGjAzogAUsysTwHgABtQD6AAC4Af+FsAGNAEuwCFBYsQEBjlmxRgYrWCGwEFlLsBRSWCGwgFkdsAYrXFhZsBQrAAA=) format(&apos;woff&apos;);}
@font-face{font-family:cmsy10;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
@font-face{font-family:cmr12;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
@font-face{font-family:cmmi8;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
@font-face{font-family:cmmi12;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
]]&gt;
&lt;/style&gt;
&lt;g id=&apos;page1&apos; transform=&apos;matrix(1.125 0 0 1.125 0 0)&apos;&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;0&apos; y=&apos;0&apos;&gt;P&lt;/text&gt;
&lt;text font-family=&apos;cmmi8&apos; font-size=&apos;7.970112&apos; x=&apos;7.545268&apos; y=&apos;1.793263&apos;&gt;n&lt;/text&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;13.181602&apos; y=&apos;0&apos;&gt;(&lt;/text&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;17.733928&apos; y=&apos;0&apos;&gt;o,&lt;tspan x=&apos;28.605525&apos;&gt;k&lt;/tspan&gt;&lt;/text&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;35.095029&apos; y=&apos;0&apos;&gt;)&lt;tspan x=&apos;42.968184&apos;&gt;=&lt;/tspan&gt;&lt;/text&gt;
&lt;text font-family=&apos;cmsy10&apos; font-size=&apos;11.955168&apos; x=&apos;55.393665&apos; y=&apos;0&apos;&gt;{&lt;/text&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;61.371271&apos; y=&apos;0&apos;&gt;Q&lt;/text&gt;
&lt;text font-family=&apos;cmsy10&apos; font-size=&apos;11.955168&apos; x=&apos;73.299183&apos; y=&apos;0&apos;&gt;î&lt;tspan x=&apos;83.925985&apos;&gt;{&lt;/tspan&gt;&lt;/text&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;89.903592&apos; y=&apos;0&apos;&gt;(&lt;/text&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;94.455918&apos; y=&apos;0&apos;&gt;o,&lt;tspan x=&apos;105.327514&apos;&gt;k&lt;/tspan&gt;&lt;/text&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;111.817018&apos; y=&apos;0&apos;&gt;)&lt;/text&gt;
&lt;text font-family=&apos;cmsy10&apos; font-size=&apos;11.955168&apos; x=&apos;116.369344&apos; y=&apos;0&apos;&gt;}&lt;tspan x=&apos;125.66778&apos;&gt;|&lt;/tspan&gt;&lt;/text&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;132.3095&apos; y=&apos;0&apos;&gt;Q&lt;/text&gt;
&lt;text font-family=&apos;cmsy10&apos; font-size=&apos;11.955168&apos; x=&apos;144.901577&apos; y=&apos;0&apos;&gt;â&lt;/text&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;156.192545&apos; y=&apos;0&apos;&gt;P&lt;/text&gt;
&lt;text font-family=&apos;cmmi8&apos; font-size=&apos;7.970112&apos; x=&apos;163.737813&apos; y=&apos;1.793263&apos;&gt;n&lt;/text&gt;
&lt;text font-family=&apos;cmsy8&apos; font-size=&apos;7.970112&apos; x=&apos;168.876015&apos; y=&apos;1.793263&apos;&gt;â&lt;/text&gt;
&lt;text font-family=&apos;cmmi8&apos; font-size=&apos;7.970112&apos; x=&apos;175.462522&apos; y=&apos;1.793263&apos;&gt;k&lt;/text&gt;
&lt;text font-family=&apos;cmsy10&apos; font-size=&apos;11.955168&apos; x=&apos;180.582269&apos; y=&apos;0&apos;&gt;}&lt;/text&gt;
&lt;/g&gt;
&lt;/svg&gt;&lt;/div&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The whole set &lt;span style=&quot;vertical-align: -2.579923287671233pt;&quot;&gt;
&lt;!-- This file was generated by dvisvgm 2.14 --&gt;
&lt;svg version=&apos;1.1&apos; xmlns=&apos;http://www.w3.org/2000/svg&apos; xmlns:xlink=&apos;http://www.w3.org/1999/xlink&apos; width=&apos;15.954307pt&apos; height=&apos;12.332957pt&apos; viewBox=&apos;-.562502 -9.753034 15.954307 12.332957&apos;&gt;
&lt;style type=&apos;text/css&apos;&gt;
&lt;![CDATA[@font-face{font-family:cmmi8;src:url(data:application/x-font-woff;base64,d09GRgABAAAAAAcgAA4AAAAACVwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGRlRNAAABRAAAABoAAAAckuE1B09TLzIAAAFgAAAAQgAAAFZVnl9LY21hcAAAAaQAAABBAAABQgMPBBljdnQgAAAB6AAAAAgAAAAIACECw2ZwZ20AAAHwAAABsQAAAmUPtC+nZ2x5ZgAAA6QAAAHeAAACNH5Pwa1oZWFkAAAFhAAAADEAAAA2IN+Z42hoZWEAAAW4AAAAHgAAACQFWgJ/aG10eAAABdgAAAAQAAAAEAeMAD9sb2NhAAAF6AAAAAoAAAAKAUQAVG1heHAAAAX0AAAAIAAAACABHgFkbmFtZQAABhQAAADBAAABHa0+koRwb3N0AAAG2AAAABYAAAAqAFgAA3ByZXAAAAbwAAAALgAAAC6w8isUeNpjYGBgZACCy9vuzQDR96dqm8NoAFInBq0AAHjaY2BkamGcwMDKwMDUxbSHgYGhB0IzPmAwZGQCijKwcjLAACMDEghIc00BUnkMeUzv/rMxRDHNYuCCqQEA28cKlQAAeNpjYGBgZoBgGQZGBhCwAfIYwXwWBgUgzQKEIH7e//8Q8v9UqEoGRjYGGJOBkQlIMDGgAkYGKgNmhsEGALg6BysAAAAAAABKACECeXjaXVG7TltBEN0NDwOBxNggOdoUs5mQAu+FNkggri7CyHZjOULajVzkYlzAB1AgUYP2awZoKFOkTYOQCyQ+gU+IlJk1iaI0Ozuzc86ZM0vKkap3ab3nqXMWSOFug2abfiek2kWAB9L1jUZG2sEjLTYzeuW6fb+PwWY05U4aQHnPW8pDRtNOoBbtuX8yP4PhPv/LPAeDlmaanlpnIT2EwHwzbmnwNaNZd/1BX7E6XA0GhhTTVNz1x1TK/5bmXG0ZtjYzmndwISI/mAZoaq2NQNOfOqR6Po5iCXL5bKwNJqasP8lEcGEyXdVULTO+dnCf7Cw62KRKc+ABDrBVnoKH46MJhfQtiTJLQ4SD2CoxQsQkh0JOOXeyPylQPpKEMW+S0s64Ya2BceQ1MKjN0xy+zGZT21uHMH4RR/DdL8aSDj6yoTZGhNiOWApgApGQUVW+ocZzL4sBudT+MxAlYHn67V8nAq07NhEvZW2dY4wVgp7fNt/5ZcXdqlznRaG7d1U1VOmU5kMvZ9/jEU+PheGgseDN531/o0DtDYsbDZoDwZDejd7/0Vp1xFXeCx/ZbzWzsRYAAAB42mWLP2/TQBiH787ErtPY8TkxSUwUxU5DSkLjxHZsDidu1DZK6YzUMiAxICY+SXcYKrHxAd5zBgRTt7J4ZeIDsCA2EBIVnPkzcTr9fs89976IIAchPCQXSEIKGnOMvHmm3CCffS6XPs4ziQhEXCp0qdCZIks/5hkufEAdOghoz8Hqp6srcnH9zCFnCBHU+fmVPMVv0Rod4wYC6kE7h9iDrQCGOfR9DA88mHyAMIfQ4Es8glUOK4Prgjo5dAxeFuTm4Bq8JcjK+YmoyH63+PblGlmjsg6pAcklX+PvIF1u0FqqjTb4d5IixfdmkSa1USaye94978k6NVkmBkUBZkAYeoOkZJGuMRn/Pfg/A0sb83BCTfAZLCnMGKxMPowZA53yARPdMbPKVl8Qd8vUzGi7W9gWBZsh3qZi9ZBBTJeqbjXcwcRfHu802GQap7i4UeBbdUW26jcDP8WzsOcqOu65szCOZuFt8RrjQhGrHvjRv+kq/rMQR/v4PdHwtkr3H7KFFu3cXdnVSomyTtNMju49OSjdH0zb21SuqrJsj7taVe6X6xVbl7TGayVS7jSaj48Wr5za7t7JYUWjSeq09l7MI3a660XW9BbRVOu5Z0Rz62VfMapNOX6EfgGhD4PdAAB42mNgZGBgAGIRXSb+eH6brwzyzC+AIgz3p2qbw2m5/9+YUphmAbkcDEwgUQD9IQnJAAAAeNpjYGRgYJr1/xtDFFMLAxAwpTAwMqACFgBrLAPeAAAChAAhAAAAAAKEAAAChAAeAAAAKgAqACoBGgAAAAEAAAAEAEkAAgAAAAAAAgABAAIAFgAAAQABFwAAAAB42kWNTYrCQBCFP39nRkFmJS6b2SekeyWuJQdw4XJAQk8ImARaPcAcwwN4AG/o69BgF13vK+rxCvjkjxHxjfngO/GEH34Tz1hyTzzX9NR2NP2SfzU4I0/Ys0k8Y81/4jkLHhzw1Nw4cyLAwde380lQ0tNxHTTI4TE4cgrpTr+iVTVs02y1zdStupPLqSj77lr2ofbG5YXZmaptm63UuszazBVOnqOiAxdFxYMxKB7h6MOl6Ttjcw3vYwwRvAD1oybkAAAAeNpjYGJABowM6IAFLMrEEAgAARcAXAAAuAH/hbABjQBLsAhQWLEBAY5ZsUYGK1ghsBBZS7AUUlghsIBZHbAGK1xYWbAUKwAA) format(&apos;woff&apos;);}
@font-face{font-family:cmmi12;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
]]&gt;
&lt;/style&gt;
&lt;g id=&apos;page1&apos; transform=&apos;matrix(1.125 0 0 1.125 0 0)&apos;&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;0&apos; y=&apos;0&apos;&gt;P&lt;/text&gt;
&lt;text font-family=&apos;cmmi8&apos; font-size=&apos;7.970112&apos; x=&apos;7.545268&apos; y=&apos;1.793263&apos;&gt;n&lt;/text&gt;
&lt;/g&gt;
&lt;/svg&gt;&lt;/span&gt; is the union of all &lt;span style=&quot;vertical-align: -3.9248926525529266pt;&quot;&gt;
&lt;!-- This file was generated by dvisvgm 2.14 --&gt;
&lt;svg version=&apos;1.1&apos; xmlns=&apos;http://www.w3.org/2000/svg&apos; xmlns:xlink=&apos;http://www.w3.org/1999/xlink&apos; width=&apos;45.728265pt&apos; height=&apos;14.574568pt&apos; viewBox=&apos;-.562502 -10.649675 45.728265 14.574568&apos;&gt;
&lt;style type=&apos;text/css&apos;&gt;
&lt;![CDATA[@font-face{font-family:cmr12;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
@font-face{font-family:cmmi8;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
@font-face{font-family:cmmi12;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
]]&gt;
&lt;/style&gt;
&lt;g id=&apos;page1&apos; transform=&apos;matrix(1.125 0 0 1.125 0 0)&apos;&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;0&apos; y=&apos;0&apos;&gt;P&lt;/text&gt;
&lt;text font-family=&apos;cmmi8&apos; font-size=&apos;7.970112&apos; x=&apos;7.545268&apos; y=&apos;1.793263&apos;&gt;n&lt;/text&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;13.181602&apos; y=&apos;0&apos;&gt;(&lt;/text&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;17.733928&apos; y=&apos;0&apos;&gt;o,&lt;tspan x=&apos;28.605525&apos;&gt;k&lt;/tspan&gt;&lt;/text&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;35.095029&apos; y=&apos;0&apos;&gt;)&lt;/text&gt;
&lt;/g&gt;
&lt;/svg&gt;&lt;/span&gt; sets for all valid
combinations of &lt;span style=&quot;vertical-align: -0.5625016189290162pt;&quot;&gt;
&lt;!-- This file was generated by dvisvgm 2.14 --&gt;
&lt;svg version=&apos;1.1&apos; xmlns=&apos;http://www.w3.org/2000/svg&apos; xmlns:xlink=&apos;http://www.w3.org/1999/xlink&apos; width=&apos;7.455859pt&apos; height=&apos;6.915794pt&apos; viewBox=&apos;-.562502 -6.353292 7.455859 6.915794&apos;&gt;
&lt;style type=&apos;text/css&apos;&gt;
&lt;![CDATA[@font-face{font-family:cmmi12;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
]]&gt;
&lt;/style&gt;
&lt;g id=&apos;page1&apos; transform=&apos;matrix(1.125 0 0 1.125 0 0)&apos;&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;0&apos; y=&apos;0&apos;&gt;o&lt;/text&gt;
&lt;/g&gt;
&lt;/svg&gt;&lt;/span&gt; and &lt;span style=&quot;vertical-align: -0.5625016189290162pt;&quot;&gt;
&lt;!-- This file was generated by dvisvgm 2.14 --&gt;
&lt;svg version=&apos;1.1&apos; xmlns=&apos;http://www.w3.org/2000/svg&apos; xmlns:xlink=&apos;http://www.w3.org/1999/xlink&apos; width=&apos;8.425696pt&apos; height=&apos;10.464956pt&apos; viewBox=&apos;-.562502 -9.902454 8.425696 10.464956&apos;&gt;
&lt;style type=&apos;text/css&apos;&gt;
&lt;![CDATA[@font-face{font-family:cmmi12;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
]]&gt;
&lt;/style&gt;
&lt;g id=&apos;page1&apos; transform=&apos;matrix(1.125 0 0 1.125 0 0)&apos;&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;0&apos; y=&apos;0&apos;&gt;k&lt;/text&gt;
&lt;/g&gt;
&lt;/svg&gt;&lt;/span&gt;:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;div style=&quot;vertical-align: -3.9248926525529266pt; text-align: center&quot;&gt;
&lt;!-- This file was generated by dvisvgm 2.14 --&gt;
&lt;svg version=&apos;1.1&apos; xmlns=&apos;http://www.w3.org/2000/svg&apos; xmlns:xlink=&apos;http://www.w3.org/1999/xlink&apos; width=&apos;174.988452pt&apos; height=&apos;14.574568pt&apos; viewBox=&apos;-.562502 -10.649675 174.988452 14.574568&apos;&gt;
&lt;style type=&apos;text/css&apos;&gt;
&lt;![CDATA[@font-face{font-family:cmr12;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
@font-face{font-family:cmmi8;src:url(data:application/x-font-woff;base64,d09GRgABAAAAAAb4AA4AAAAACRQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGRlRNAAABRAAAABoAAAAckuE1B09TLzIAAAFgAAAAQgAAAFZVm18JY21hcAAAAaQAAABBAAABQgASBBZjdnQgAAAB6AAAAAYAAAAGAnkAIWZwZ20AAAHwAAABsQAAAmUPtC+nZ2x5ZgAAA6QAAAG3AAAB7DzNjHxoZWFkAAAFXAAAADEAAAA2IJOZ/2hoZWEAAAWQAAAAHgAAACQFJwIkaG10eAAABbAAAAAQAAAAEAZ7AFpsb2NhAAAFwAAAAAoAAAAKASAAVG1heHAAAAXMAAAAIAAAACABHgEGbmFtZQAABewAAADBAAABHa0+koRwb3N0AAAGsAAAABYAAAAqAFUAA3ByZXAAAAbIAAAALgAAAC6w8isUeNpjYGBgZACCy9vuzQDR96dqm8NoAFInBq0AAHjaY2Bk0mScwMDKwMDUxbSHgYGhB0IzPmAwZGQCijKwcjLAACMDEghIc00BUtkM2Uzv/rMxRDFtY+CCqQEAvwIKUAAAeNpjYGBgZoBgGQZGBhCwAfIYwXwWBgUgzQKEIH72//8Q8v8MqEoGRjYGGJOBkQlIMDGgAkYGagJmhkEIALTyBygAAAAAAAAhAnkAAHjaXVG7TltBEN0NDwOBxNggOdoUs5mQAu+FNkggri7CyHZjOULajVzkYlzAB1AgUYP2awZoKFOkTYOQCyQ+gU+IlJk1iaI0Ozuzc86ZM0vKkap3ab3nqXMWSOFug2abfiek2kWAB9L1jUZG2sEjLTYzeuW6fb+PwWY05U4aQHnPW8pDRtNOoBbtuX8yP4PhPv/LPAeDlmaanlpnIT2EwHwzbmnwNaNZd/1BX7E6XA0GhhTTVNz1x1TK/5bmXG0ZtjYzmndwISI/mAZoaq2NQNOfOqR6Po5iCXL5bKwNJqasP8lEcGEyXdVULTO+dnCf7Cw62KRKc+ABDrBVnoKH46MJhfQtiTJLQ4SD2CoxQsQkh0JOOXeyPylQPpKEMW+S0s64Ya2BceQ1MKjN0xy+zGZT21uHMH4RR/DdL8aSDj6yoTZGhNiOWApgApGQUVW+ocZzL4sBudT+MxAlYHn67V8nAq07NhEvZW2dY4wVgp7fNt/5ZcXdqlznRaG7d1U1VOmU5kMvZ9/jEU+PheGgseDN531/o0DtDYsbDZoDwZDejd7/0Vp1xFXeCx/ZbzWzsRYAAAB42i2QvW7TUBzF74c/YznxdWyH0rSN4yopjYlru064IUQRgkhFQZFKW9iReADExEPAivIMDP/rgVfI5LUTD8DCykQF14jtnN85ZzmIoBAhfEq2iCIdjQVGybzUFfwzE5r6fV5SIiUStMZqjUtdI7/nJa55zkI2zFkUYvPHbke2d+9C8gYhgvifX8Qn39AVukZfEQwSyCtYJrCpwE7ArDDcJMBugVRAHBFZIygqOOrdMuAVFI5I8QjiCmIH1jVcVbBKYF2J13gkCGNu+fjyFedcFEfMFU8WUq24VIOcc0hZubzYyBRiF55yJPIBc2GPw5ItrWDfi+LxwcX68uq4w4W9kVGbg8kEueb8LMWT4jw6a+Em8b08O8S+p1PN94I8m06mgXT/zYLIXl/TtahfnE/laDiZLnCedeqhLEgy+JfrbXysOLNHtmXc7wRU/aS0m6HdbX8k6ixO+pZntgyd9iY9Td2OTpJnYadxb58GLIiG0cnLbPbgLfliGE15PTXMpqJqqnu3a+m2O/7wwn7eaASNeJaxNFRss/U+9bqedePvxeOHNj10NMfvH3RP84y7+DNCfwGGT23EAHjaY2BkYGAA4tnvS1Lj+W2+MsgzvwCKMNyfqm0OpxX/f2MSZdoG5HIwMIFEAVb6C6oAAAB42mNgZGBg2vb/G0MUkyYDEDCJMjAyoAIWAF/QA1AAAAIpACEAAAAAAikAAAIpADkAAAAqACoAKgD2AAAAAQAAAAQAVgACAAAAAAACAAEAAgAWAAABAACsAAAAAHjaRY1NisJAEIU/f2dGQWYlLpvZJ6R7Ja4lB3DhckBCTwiYBFo9wBzDA3gAb+jr0GAXXe8r6vEK+OSPEfGN+eA78YQffhPPWHJPPNf01HY0/ZJ/NTgjT9izSTxjzX/iOQseHPDU3DhzIsDB17fzSVDS03EdNMjhMThyCulOv6JVNWzTbLXN1K26k8upKPvuWvah9sblhdmZqm2brdS6zNrMFU6eo6IDF0XFgzEoHuHow6XpO2NzDe9jDBG8APWjJuQAAAB42mNgYkAGjAzogAUsysTgBwABFABZAAC4Af+FsAGNAEuwCFBYsQEBjlmxRgYrWCGwEFlLsBRSWCGwgFkdsAYrXFhZsBQrAAA=) format(&apos;woff&apos;);}
@font-face{font-family:cmsy10;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
@font-face{font-family:cmmi12;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
]]&gt;
&lt;/style&gt;
&lt;g id=&apos;page1&apos; transform=&apos;matrix(1.125 0 0 1.125 0 0)&apos;&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;0&apos; y=&apos;0&apos;&gt;O&lt;/text&gt;
&lt;text font-family=&apos;cmmi8&apos; font-size=&apos;7.970112&apos; x=&apos;8.946082&apos; y=&apos;1.793263&apos;&gt;k&lt;/text&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;17.386659&apos; y=&apos;0&apos;&gt;=&lt;/text&gt;
&lt;text font-family=&apos;cmsy10&apos; font-size=&apos;11.955168&apos; x=&apos;29.812139&apos; y=&apos;0&apos;&gt;{&lt;/text&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;35.789746&apos; y=&apos;0&apos;&gt;O&lt;tspan x=&apos;45.060994&apos;&gt;ptions&lt;/tspan&gt;&lt;tspan x=&apos;81.187772&apos;&gt;that&lt;/tspan&gt;&lt;tspan x=&apos;106.427583&apos;&gt;accept&lt;/tspan&gt;&lt;tspan x=&apos;142.078241&apos;&gt;k&lt;/tspan&gt;&lt;/text&gt;
&lt;text font-family=&apos;cmsy10&apos; font-size=&apos;11.955168&apos; x=&apos;148.567745&apos; y=&apos;0&apos;&gt;}&lt;/text&gt;
&lt;/g&gt;
&lt;/svg&gt;&lt;/div&gt;
&lt;div style=&quot;vertical-align: -19.284887671232877pt; text-align: center&quot;&gt;
&lt;!-- This file was generated by dvisvgm 2.14 --&gt;
&lt;svg version=&apos;1.1&apos; xmlns=&apos;http://www.w3.org/2000/svg&apos; xmlns:xlink=&apos;http://www.w3.org/1999/xlink&apos; width=&apos;136.647467pt&apos; height=&apos;33.969508pt&apos; viewBox=&apos;-.562502 -14.68462 136.647467 33.969508&apos;&gt;
&lt;style type=&apos;text/css&apos;&gt;
&lt;![CDATA[@font-face{font-family:cmsy8;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
@font-face{font-family:cmr8;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
@font-face{font-family:cmex10;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
@font-face{font-family:cmmi6;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
@font-face{font-family:cmr12;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
@font-face{font-family:cmmi8;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
@font-face{font-family:cmmi12;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
]]&gt;
&lt;/style&gt;
&lt;g id=&apos;page1&apos; transform=&apos;matrix(1.125 0 0 1.125 0 0)&apos;&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;0&apos; y=&apos;0&apos;&gt;P&lt;/text&gt;
&lt;text font-family=&apos;cmmi8&apos; font-size=&apos;7.970112&apos; x=&apos;7.545268&apos; y=&apos;1.793263&apos;&gt;n&lt;/text&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;16.502432&apos; y=&apos;0&apos;&gt;=&lt;/text&gt;
&lt;text font-family=&apos;cmex10&apos; font-size=&apos;11.955168&apos; x=&apos;35.869639&apos; y=&apos;-11.357464&apos;&gt;î&lt;/text&gt;
&lt;text font-family=&apos;cmr8&apos; font-size=&apos;7.970112&apos; x=&apos;28.927913&apos; y=&apos;14.102754&apos;&gt;1&lt;/text&gt;
&lt;text font-family=&apos;cmsy8&apos; font-size=&apos;7.970112&apos; x=&apos;33.162095&apos; y=&apos;14.102754&apos;&gt;â¤&lt;/text&gt;
&lt;text font-family=&apos;cmmi8&apos; font-size=&apos;7.970112&apos; x=&apos;39.748602&apos; y=&apos;14.102754&apos;&gt;k&lt;/text&gt;
&lt;text font-family=&apos;cmsy8&apos; font-size=&apos;7.970112&apos; x=&apos;44.370218&apos; y=&apos;14.102754&apos;&gt;â¤&lt;/text&gt;
&lt;text font-family=&apos;cmmi8&apos; font-size=&apos;7.970112&apos; x=&apos;50.956724&apos; y=&apos;14.102754&apos;&gt;n&lt;/text&gt;
&lt;text font-family=&apos;cmex10&apos; font-size=&apos;11.955168&apos; x=&apos;61.814217&apos; y=&apos;-11.357464&apos;&gt;î&lt;/text&gt;
&lt;text font-family=&apos;cmmi8&apos; font-size=&apos;7.970112&apos; x=&apos;58.087424&apos; y=&apos;14.014189&apos;&gt;o&lt;/text&gt;
&lt;text font-family=&apos;cmsy8&apos; font-size=&apos;7.970112&apos; x=&apos;62.180474&apos; y=&apos;14.014189&apos;&gt;â&lt;/text&gt;
&lt;text font-family=&apos;cmmi8&apos; font-size=&apos;7.970112&apos; x=&apos;67.826051&apos; y=&apos;14.014189&apos;&gt;O&lt;/text&gt;
&lt;text font-family=&apos;cmmi6&apos; font-size=&apos;5.977584&apos; x=&apos;74.251479&apos; y=&apos;15.420034&apos;&gt;k&lt;/text&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;80.817068&apos; y=&apos;0&apos;&gt;P&lt;/text&gt;
&lt;text font-family=&apos;cmmi8&apos; font-size=&apos;7.970112&apos; x=&apos;88.362336&apos; y=&apos;1.793263&apos;&gt;n&lt;/text&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;93.998671&apos; y=&apos;0&apos;&gt;(&lt;/text&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;98.550997&apos; y=&apos;0&apos;&gt;o,&lt;tspan x=&apos;109.422593&apos;&gt;k&lt;/tspan&gt;&lt;/text&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;115.912097&apos; y=&apos;0&apos;&gt;)&lt;/text&gt;
&lt;/g&gt;
&lt;/svg&gt;&lt;/div&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Using this recursive set description of the solution space we can write a
program to enumerate all the solutions for a particular amount and set of
options. This description provides a straightforward, albeit rather
inefficient, way to solve this problem: by brute force â evaluate &lt;em&gt;all&lt;&#x2F;em&gt;
solutions and use the best. In pseudocode this would look like:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; class=&quot;language-python z-code&quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;solve_brute_force&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;n&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-annotation z-variable z-python&quot;&gt;:&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;solutions&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-mapping z-empty z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-mapping z-begin z-python&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-mapping z-end z-python&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;

    &lt;span class=&quot;z-meta z-statement z-loop z-for z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-loop z-for z-python&quot;&gt;for&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;k&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-control z-loop z-for z-in z-python&quot;&gt;in&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-loop z-for z-python&quot;&gt; &lt;span class=&quot;z-meta z-sequence z-list z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-sequence z-begin z-python&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-float z-decimal z-python&quot;&gt;1&lt;span class=&quot;z-punctuation z-separator z-decimal z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;n&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-sequence z-end z-python&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-loop z-for z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-loop z-for z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
        &lt;span class=&quot;z-meta z-statement z-loop z-for z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-loop z-for z-python&quot;&gt;for&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;o&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-control z-loop z-for z-in z-python&quot;&gt;in&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-loop z-for z-python&quot;&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-other z-constant z-python&quot;&gt;OPTIONS&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-loop z-for z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-loop z-for z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
            &lt;span class=&quot;z-meta z-statement z-conditional z-if z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-conditional z-if z-python&quot;&gt;if&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;o&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;accepts&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;k&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-block z-conditional z-if z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
                &lt;span class=&quot;z-meta z-statement z-loop z-for z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-loop z-for z-python&quot;&gt;for&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;s&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-control z-loop z-for z-in z-python&quot;&gt;in&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-loop z-for z-python&quot;&gt; &lt;span class=&quot;z-meta z-group z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;solve_brute_force&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;n&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-arithmetic z-python&quot;&gt;-&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;k&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; âª &lt;span class=&quot;z-meta z-mapping-or-set z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-mapping-or-set z-begin z-python&quot;&gt;{&lt;&#x2F;span&gt;â&lt;span class=&quot;z-punctuation z-section z-mapping-or-set z-end z-python&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-loop z-for z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-loop z-for z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
                    &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;solutions&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;solutions&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; âª &lt;span class=&quot;z-meta z-group z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;s&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; â &lt;span class=&quot;z-meta z-mapping-or-set z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-mapping-or-set z-begin z-python&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-sequence z-tuple z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-sequence z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;o&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-sequence z-python&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;k&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-sequence z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-mapping-or-set z-end z-python&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;

    &lt;span class=&quot;z-keyword z-control z-flow z-return z-python&quot;&gt;return&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;solutions&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;

&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;solve_driver&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;n&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-annotation z-variable z-python&quot;&gt;:&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-keyword z-control z-flow z-return z-python&quot;&gt;return&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;argmax&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;solve_brute_force&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;n&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-arguments z-python&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;profit&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;optimal-substructure&quot;&gt;Optimal substructure&lt;&#x2F;h3&gt;
&lt;p&gt;Let&#x27;s see if this problem has any interesting properties we can take advantage
of to find the optimal solution more efficiently.&lt;&#x2F;p&gt;
&lt;p&gt;If we look at &lt;span style=&quot;vertical-align: -3.9248926525529266pt;&quot;&gt;
&lt;!-- This file was generated by dvisvgm 2.14 --&gt;
&lt;svg version=&apos;1.1&apos; xmlns=&apos;http://www.w3.org/2000/svg&apos; xmlns:xlink=&apos;http://www.w3.org/1999/xlink&apos; width=&apos;45.728265pt&apos; height=&apos;14.574568pt&apos; viewBox=&apos;-.562502 -10.649675 45.728265 14.574568&apos;&gt;
&lt;style type=&apos;text/css&apos;&gt;
&lt;![CDATA[@font-face{font-family:cmr12;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
@font-face{font-family:cmmi8;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
@font-face{font-family:cmmi12;src:url(data:application/x-font-woff;base64,d09GRgABAAAAAAkUAA4AAAAAC9AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGRlRNAAABRAAAABoAAAAckuE1A09TLzIAAAFgAAAAQgAAAFZWE160Y21hcAAAAaQAAABaAAABWgERC1ljdnQgAAACAAAAAAoAAAAKAsQB2mZwZ20AAAIMAAABsQAAAmUPtC+nZ2x5ZgAAA8AAAAOnAAAEdAGECe9oZWFkAAAHaAAAADEAAAA2IWKZRGhoZWEAAAecAAAAIAAAACQF9wFRaG10eAAAB7wAAAAcAAAAHAoSAQdsb2NhAAAH2AAAABAAAAAQAmwDjG1heHAAAAfoAAAAIAAAACABIwEwbmFtZQAACAgAAAC/AAABI/a6b6dwb3N0AAAIyAAAABoAAAAwAGcAh3ByZXAAAAjkAAAALgAAAC6w8isUeNpjYGBgZACCy9vuzQDR96dqm8JoAFITBqkAAHjaY2BkvMY4gYGVgYGpi2kPAwNDD4RmfMBgyMgEFGVgZWaAAUYGJBCQ5poCpHQY8pne/WdjiGLaxnAQpgYA9yMLcgAAeNpjYGBgZoBgGQZGBhAIAfIYwXwWBgsgzcXAwcAEhDoMAQzZDPn//wPF4Oz/1/9v+T/r/3SoXihgZGOACzAyAQkmBlTAiMplZiAMWHBLsQIxG8MgAwAkLg5rAAAAAAG5AEsAIQJ5AAB42l1Ru05bQRDdDQ8DgcTYIDnaFLOZkALvhTZIIK4uwsh2YzlC2o1c5GJcwAdQIFGD9msGaChTpE2DkAskPoFPiJSZNYmiNDs7s3POmTNLypGqd2m956lzFkjhboNmm34npNpFgAfS9Y1GRtrBIy02M3rlun2/j8FmNOVOGkB5z1vKQ0bTTqAW7bl/Mj+D4T7/yzwHg5Zmmp5aZyE9hMB8M25p8DWjWXf9QV+xOlwNBoYU01Tc9cdUyv+W5lxtGbY2M5p3cCEiP5gGaGqtjUDTnzqkej6OYgly+WysDSamrD/JRHBhMl3VVC0zvnZwn+wsOtikSnPgAQ6wVZ6Ch+OjCYX0LYkyS0OEg9gqMULEJIdCTjl3sj8pUD6ShDFvktLOuGGtgXHkNTCozdMcvsxmU9tbhzB+EUfw3S/Gkg4+sqE2RoTYjlgKYAKRkFFVvqHGcy+LAbnU/jMQJWB5+u1fJwKtOzYRL2VtnWOMFYKe3zbf+WXF3apc50Whu3dVNVTplOZDL2ff4xFPj4XhoLHgzed9f6NA7Q2LGw2aA8GQ3o3e/9FadcRV3gsf2W81s7EWAAAAeNpFk01o41YQx+dJsmQ5li1ZtiM7iWL5I/auEsmWEmnFZm0nhJDQQAjkY9vSwhLYpaXXXgsthdJDKb1u6amXwl5GNi20vSxsYReKbiWnHsvSS6GXtpQ2SUfuwj54T/PmzZM0/98McGABsJvcQ+BBAidm4G5OJIH/zYvFzM+bE54jE2I+dWdS90QShX83Jyz1+5qldX2tZTH516dPuYeX9y3uLgAHZ9cjeAL3YB4MaAAqLvIJw5qLhQuEJK4zm16paCUUo/5gfn2l1RQr5arvhYFXKUtk+96QbTwxzWq9ZpQVThjP5cRuT3BCs6SbCqe/vpcXcqtvrIMALn3wF+4RDMCDEYzhfZiYADYaCdoegoujBAsuBj5m6R+2XIwuUEjibWZjUP9uqP/+DlTsXAErKpYfxwPub/QfZ6Yw8HV7OkpXHqblysB3aLCvITVHzmzguA4xGJSGF8WFkVaKhXFECTHfCzYoKatZYGkqJq0SX2CtF/vgNvOqswzXW02H1nCBDRk5K2VREm2ms95Xbz26/9rVj3lZMpYWBeEjqTbIy9mi3M29K/dyoigZi4sZbrwnFc3zj5fMjQef7LDhh8fDMybL6XG2ePl8SWVZeY7jUleGfDm4ZjcW8ufmPfMW0yDlFF7/yf7gvoFTOIOfYHLESLedBHsuhgkeuLibYNFFkXS766JxEXdItCiZclEna6OeoE7q+sgl2FHRalxoeCfBSI33KewwmTqH+xTmJei56CTxq8yOdVJropinURRhR5sIxydkxRFH2m1tk7V/h6xeSKeeNl3fOThqz0folOL+bhRBHPZI63qEB9pYNqodx+xvHZ+mEbulePuQrhePKKASoajFytkMRZBqLDVFqcC9RDErsGDEZrsXlTfk0sg0rtUkInSvG4RDQjmfQqOIYFamkijprMbnc2tZSy7MiWXD4DOfCgu6KrnhJi94Xacha9mcmOFltWNYWeGzlr82tqqFWr2sVMx2o/tK1F17wH2R53MZnjE+OwMmli5/KGbrxtL34mo7VyxqdnBLc01elpSWvdqvmyXlRK+E/lqeNzVVXe63wrGrsc8JI/XADeL4jH0Lc5AHE5ZhFyZ8yrKaoOyiQvwahPEC1QRVNa4RHupCi3jUVNJb5lNxFZm0W46wqk3EPEQz9V52ZrDBmisb6/9LUk0LleqZPTvZOf8ynVf/rAwa5eWD1srAqi/tW0zfe3P6djqv/rrtt99rBwN6fHDTdQD+Axlr/sEAeNpjYGRgYADivCtzjOP5bb4yyDO/AIow3J+qbQqnFf/bMz1h2gbkcjAwgUQBSA0LbAAAAHjaY2BkYGDa9t+eIYqpnIHh/2SmJwxAERTADgCEDAVLAWwAIQAAAAABTQAAAQ8AVwJ3AC8B/QA3AdYAKQAAACoAKgAqAGAA/gHiAjoAAQAAAAcAWAAEAAAAAAACAAEAAgAWAAABAADUAAAAAHjaTY1NqsIwFIU//xXl4UgcBhy3NBm6gC7AgWNFYinYFqLuwGW4AFfg+jzRDF4OuffLzeFcYMqZHvH0mbBMPGDDIfGIOc/EY+mt395wJv/f1xl5QMk68YgVj8RjFrzY4am4c+FIgJ2v7pejoKSj5fbtQQ6PwZFTqG91TzRSjdX0N4mUqVpVJ5+TKLv2Vnah8sblhdmaU9PU1gmsy6zNXOFk2is9cFVa3BmT4h72PlzrrjU21+P/Pn4pfADXbSemAHjaY2BiwA/YgZiRgYmBn8GYwY8hCAADuADvAAC4Af+FsAGNAEuwCFBYsQEBjlmxRgYrWCGwEFlLsBRSWCGwgFkdsAYrXFhZsBQrAAA=) format(&apos;woff&apos;);}
]]&gt;
&lt;/style&gt;
&lt;g id=&apos;page1&apos; transform=&apos;matrix(1.125 0 0 1.125 0 0)&apos;&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;0&apos; y=&apos;0&apos;&gt;P&lt;/text&gt;
&lt;text font-family=&apos;cmmi8&apos; font-size=&apos;7.970112&apos; x=&apos;7.545268&apos; y=&apos;1.793263&apos;&gt;n&lt;/text&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;13.181602&apos; y=&apos;0&apos;&gt;(&lt;/text&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;17.733928&apos; y=&apos;0&apos;&gt;o,&lt;tspan x=&apos;28.605525&apos;&gt;k&lt;/tspan&gt;&lt;/text&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;35.095029&apos; y=&apos;0&apos;&gt;)&lt;/text&gt;
&lt;/g&gt;
&lt;/svg&gt;&lt;/span&gt; we see that we are combining &lt;span style=&quot;vertical-align: -3.9248926525529266pt;&quot;&gt;
&lt;!-- This file was generated by dvisvgm 2.14 --&gt;
&lt;svg version=&apos;1.1&apos; xmlns=&apos;http://www.w3.org/2000/svg&apos; xmlns:xlink=&apos;http://www.w3.org/1999/xlink&apos; width=&apos;30.898962pt&apos; height=&apos;14.574568pt&apos; viewBox=&apos;-.562502 -10.649675 30.898962 14.574568&apos;&gt;
&lt;style type=&apos;text/css&apos;&gt;
&lt;![CDATA[@font-face{font-family:cmmi12;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
@font-face{font-family:cmr12;src:url(data:application/x-font-woff;base64,d09GRgABAAAAAAY8AA4AAAAACEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGRlRNAAABRAAAABoAAAAckuE1BU9TLzIAAAFgAAAAQgAAAFZWRF5QY21hcAAAAaQAAABEAAABQgAPBthjdnQgAAAB6AAAAAYAAAAGAnkAIWZwZ20AAAHwAAABsQAAAmUPtC+nZ2x5ZgAAA6QAAAD2AAABHDojXFtoZWFkAAAEnAAAADEAAAA2H8OZQ2hoZWEAAATQAAAAHgAAACQEjwCGaG10eAAABPAAAAASAAAAEgSrAINsb2NhAAAFBAAAAAwAAAAMAIYA4m1heHAAAAUQAAAAIAAAACABHwBLbmFtZQAABTAAAADBAAABHaYLJ0Vwb3N0AAAF9AAAABgAAAAsABMAD3ByZXAAAAYMAAAALgAAAC6w8isUeNpjYGBgZACCy9vuzQDR96dqm8FoAFIdBqsAAHjaY2BkrGGcwMDKwMDUybSbgYGhG0Iz3mcwZGQCijKwcjLAACMDEghIc00BUhoMmkxv/7MxRDG9Y/gNUwMA2GgLPwAAeNpjYGBgZoBgGQZGBhCwAfIYwXwWBgUgzQKEIL7m//9AUuP///+3oSoZGNkYYEwGRiYgwcSAChgRTGYWhmEJAHAdBuoAAAAhAnkAAHjaXVG7TltBEN0NDwOBxNggOdoUs5mQAu+FNkggri7CyHZjOULajVzkYlzAB1AgUYP2awZoKFOkTYOQCyQ+gU+IlJk1iaI0Ozuzc86ZM0vKkap3ab3nqXMWSOFug2abfiek2kWAB9L1jUZG2sEjLTYzeuW6fb+PwWY05U4aQHnPW8pDRtNOoBbtuX8yP4PhPv/LPAeDlmaanlpnIT2EwHwzbmnwNaNZd/1BX7E6XA0GhhTTVNz1x1TK/5bmXG0ZtjYzmndwISI/mAZoaq2NQNOfOqR6Po5iCXL5bKwNJqasP8lEcGEyXdVULTO+dnCf7Cw62KRKc+ABDrBVnoKH46MJhfQtiTJLQ4SD2CoxQsQkh0JOOXeyPylQPpKEMW+S0s64Ya2BceQ1MKjN0xy+zGZT21uHMH4RR/DdL8aSDj6yoTZGhNiOWApgApGQUVW+ocZzL4sBudT+MxAlYHn67V8nAq07NhEvZW2dY4wVgp7fNt/5ZcXdqlznRaG7d1U1VOmU5kMvZ9/jEU+PheGgseDN531/o0DtDYsbDZoDwZDejd7/0Vp1xFXeCx/ZbzWzsRYAAAB42mNgYlBkYGDUZJrFwMzAzqC3kZFB32YTOwvjW6ONbKx3bDYxMwGZDBuZQcKsIOFN7GxMf2w2MYLEjQUVBdWNBZUVGTmeHzvGNOtvmiJTBAMDE0PSf1ZGV6Z3DOIMEgxCDIwbJPU3CFzbwHJ2oxSjNoOBIauJupqggLmZqYmyEh8jO5uoiLgck7GRKaOr4JzFXJzsBs5iXk7S7vrsnJ9ZBecxWjBaLuNk5dAK1p28Y3OHWbQGB8gOc6AdUqh28FzbwACzQ9VEXY9JWQlotJigAMgKYyM7RqCVjFIQkxE2/dzcCTITaNO/E/+OQ22aso0BAIbuQecAAHjaY2BkYGAA4m0t6y7G89t8ZZBnfg4UYbg/VdsMTiv+Z2V0ZXoH5HIwMIFEAVt7C3MAAAB42mNgZGBgeveflSGKsYYBCBhdGRgZUAELAFbIAxgAAAF8ACEAAAAAAXwAAAF8AGIANwAAAAAAKgAqACoAXACOAAEAAAAFABkAAgAAAAAAAgABAAIAFgAAAQAALgAAAAB42kWNS2rDMBRFj+Mm/QRKR6FD0bmNpaHHxQvIIMNCCKoJ+ANysoAsIwvIArLDXjmCSui9c58u7wIv/JIRz4JnPhLnfPGTeMmaa+KV1F2/2dOr/O+zM3LON5+Jl2y4JF7xxo0tnpYzHXsCbH177vaChpGB09yDHB6Do6RSr/UO9JpbzR46UqFqVZ1cTpdmHE7NGFpvXFmZ2hz6YJ26dYW1haucPDutDkwc58C4KIaw82E6joOxpcR/GPMK/gDIeSYAAAAAeNpjYGJABowM6IAVLMrEwM3AAwABFAAjuAH/hbABjQBLsAhQWLEBAY5ZsUYGK1ghsBBZS7AUUlghsIBZHbAGK1xYWbAUKwAA) format(&apos;woff&apos;);}
]]&gt;
&lt;/style&gt;
&lt;g id=&apos;page1&apos; transform=&apos;matrix(1.125 0 0 1.125 0 0)&apos;&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;0&apos; y=&apos;0&apos;&gt;(&lt;/text&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;4.552326&apos; y=&apos;0&apos;&gt;o,&lt;tspan x=&apos;15.423922&apos;&gt;k&lt;/tspan&gt;&lt;/text&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;21.913426&apos; y=&apos;0&apos;&gt;)&lt;/text&gt;
&lt;/g&gt;
&lt;/svg&gt;&lt;/span&gt; with all
portofolios for &lt;span style=&quot;vertical-align: -1.6832986301369863pt;&quot;&gt;
&lt;!-- This file was generated by dvisvgm 2.14 --&gt;
&lt;svg version=&apos;1.1&apos; xmlns=&apos;http://www.w3.org/2000/svg&apos; xmlns:xlink=&apos;http://www.w3.org/1999/xlink&apos; width=&apos;32.725046pt&apos; height=&apos;11.585753pt&apos; viewBox=&apos;-.562502 -9.902454 32.725046 11.585753&apos;&gt;
&lt;style type=&apos;text/css&apos;&gt;
&lt;![CDATA[@font-face{font-family:cmsy10;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
@font-face{font-family:cmmi12;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
]]&gt;
&lt;/style&gt;
&lt;g id=&apos;page1&apos; transform=&apos;matrix(1.125 0 0 1.125 0 0)&apos;&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;0&apos; y=&apos;0&apos;&gt;n&lt;/text&gt;
&lt;text font-family=&apos;cmsy10&apos; font-size=&apos;11.955168&apos; x=&apos;9.644269&apos; y=&apos;0&apos;&gt;â&lt;/text&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;21.59943&apos; y=&apos;0&apos;&gt;k&lt;/text&gt;
&lt;/g&gt;
&lt;/svg&gt;&lt;/span&gt;, and we ultimately check all these combinations to
find the best solution. This is wasteful, however, since the choice of &lt;span style=&quot;vertical-align: -3.9248926525529266pt;&quot;&gt;
&lt;!-- This file was generated by dvisvgm 2.14 --&gt;
&lt;svg version=&apos;1.1&apos; xmlns=&apos;http://www.w3.org/2000/svg&apos; xmlns:xlink=&apos;http://www.w3.org/1999/xlink&apos; width=&apos;30.898962pt&apos; height=&apos;14.574568pt&apos; viewBox=&apos;-.562502 -10.649675 30.898962 14.574568&apos;&gt;
&lt;style type=&apos;text/css&apos;&gt;
&lt;![CDATA[@font-face{font-family:cmmi12;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
@font-face{font-family:cmr12;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
]]&gt;
&lt;/style&gt;
&lt;g id=&apos;page1&apos; transform=&apos;matrix(1.125 0 0 1.125 0 0)&apos;&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;0&apos; y=&apos;0&apos;&gt;(&lt;/text&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;4.552326&apos; y=&apos;0&apos;&gt;o,&lt;tspan x=&apos;15.423922&apos;&gt;k&lt;/tspan&gt;&lt;/text&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;21.913426&apos; y=&apos;0&apos;&gt;)&lt;/text&gt;
&lt;/g&gt;
&lt;/svg&gt;&lt;/span&gt;
doesn&#x27;t affect the profit of any of the members of &lt;span style=&quot;vertical-align: -3.5139656288916563pt;&quot;&gt;
&lt;!-- This file was generated by dvisvgm 2.14 --&gt;
&lt;svg version=&apos;1.1&apos; xmlns=&apos;http://www.w3.org/2000/svg&apos; xmlns:xlink=&apos;http://www.w3.org/1999/xlink&apos; width=&apos;28.563444pt&apos; height=&apos;13.267pt&apos; viewBox=&apos;-.562502 -9.753034 28.563444 13.267&apos;&gt;
&lt;style type=&apos;text/css&apos;&gt;
&lt;![CDATA[@font-face{font-family:cmsy8;src:url(data:application/x-font-woff;base64,d09GRgABAAAAAAXMAA4AAAAAB7wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGRlRNAAABRAAAABoAAAAckuE1BU9TLzIAAAFgAAAAQwAAAFZ2Rn+eY21hcAAAAaQAAAA+AAABQgAPJb1jdnQgAAAB5AAAAAYAAAAGAaAAIWZwZ20AAAHsAAABsQAAAmUPtC+nZ2x5ZgAAA6AAAACUAAAAlKEa4SBoZWFkAAAENAAAADEAAAA2IV6ZEWhoZWEAAARoAAAAHgAAACQE/QM/aG10eAAABIgAAAAQAAAAEAmuAHlsb2NhAAAEmAAAAAoAAAAKAHQAVG1heHAAAASkAAAAIAAAACABHgA7bmFtZQAABMQAAADAAAABHbNUuJpwb3N0AAAFhAAAABYAAAAqAPYAA3ByZXAAAAWcAAAALgAAAC6w8isUeNpjYGBgZACCy9vuzQDR96dqm8FoAFIdBqsAAHjaY2BktmKcwMDKwMDUybSbgYGhG0Iz3mcwZGQCijKwcjIgAwcYIyDNNYWBQUlISYjx4N9bDFGMB8HCjCACAM1SCtEAeNpjYGBgZoBgGQZGBhCwAfIYwXwWBgUgzQKEQL6S0P//EPLuR6hKBkY2BhiTgZEJSDAxoAJGhmEPAHaIBu4AAAAAACEBoAAAeNpdUbtOW0EQ3Q0PA4HE2CA52hSzmZAC74U2SCCuLsLIdmM5QtqNXORiXMAHUCBRg/ZrBmgoU6RNg5ALJD6BT4iUmTWJojQ7O7NzzpkzS8qRqndpveepcxZI4W6DZpt+J6TaRYAH0vWNRkbawSMtNjN65bp9v4/BZjTlThpAec9bykNG006gFu25fzI/g+E+/8s8B4OWZpqeWmchPYTAfDNuafA1o1l3/UFfsTpcDQaGFNNU3PXHVMr/luZcbRm2NjOad3AhIj+YBmhqrY1A0586pHo+jmIJcvlsrA0mpqw/yURwYTJd1VQtM752cJ/sLDrYpEpz4AEOsFWegofjowmF9C2JMktDhIPYKjFCxCSHQk45d7I/KVA+koQxb5LSzrhhrYFx5DUwqM3THL7MZlPbW4cwfhFH8N0vxpIOPrKhNkaE2I5YCmACkZBRVb6hxnMviwG51P4zECVgefrtXycCrTs2ES9lbZ1jjBWCnt823/llxd2qXOdFobt3VTVU6ZTmQy9n3+MRT4+F4aCx4M3nfX+jQO0NixsNmgPBkN6N3v/RWnXEVd4LH9lvNbOxFgAAAAACACEAAAEpAcEAAwAHAC6xAQAvPLIHBAHtMrEGBdw8sgMCAe0yALEDAC88sgUEAe0ysgcGAvw8sgECAe0yMxEhESczESMhAQjnxsYBwf4/IQF/AAACAFgA4wLhAREABwAIABoAsAcvsATNAbAJL7EKASsAsQQHERKwCDkwMSUyNCMhIhQzIQK7Jib9wyYmAj3jLi542mNgZGBgAOL6Hwy34/ltvjLIMz8HijDcn6ptBqcVGRiYHjIeBHI5GJhAogA/hwp3AAAAeNpjYGRgYDzIwMAQxWwFJBmYHjIwMqACFgA4LAJDAAADOgAhAAAAAAM6AAADOgBYAAAAKgAqACoASgAAAAEAAAAEAAkAAgAAAAAAAgABAAIAFgAAAQAALgAAAAB42kWNTarCQBCEP//1CeJKXA7uEzKzEteSA7hwKYiMQdAEJrpw6THeATyAN7QSBpxmur6mi2pgzJkOzesyYh65x4pD5AFT/iMPNX207fQn8s9aZ8M9tiwjD1jwijzkjzc7PAUPrhwJsPPF43oU5FSU3FsNcngMjpRMutE/caPmyTrOVttE3ao7uZyKvCrveRUKb1yamY053ernWmpdYm3iMifPXtFBUZf2YBPUHGHvQ32pSmNTDb9jtBF8AQdeJzx42mNgYkAGjAzogAUsysTwHgABtQD6AAC4Af+FsAGNAEuwCFBYsQEBjlmxRgYrWCGwEFlLsBRSWCGwgFkdsAYrXFhZsBQrAAA=) format(&apos;woff&apos;);}
@font-face{font-family:cmmi8;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
@font-face{font-family:cmmi12;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
]]&gt;
&lt;/style&gt;
&lt;g id=&apos;page1&apos; transform=&apos;matrix(1.125 0 0 1.125 0 0)&apos;&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;0&apos; y=&apos;0&apos;&gt;P&lt;/text&gt;
&lt;text font-family=&apos;cmmi8&apos; font-size=&apos;7.970112&apos; x=&apos;7.545268&apos; y=&apos;1.793263&apos;&gt;n&lt;/text&gt;
&lt;text font-family=&apos;cmsy8&apos; font-size=&apos;7.970112&apos; x=&apos;12.68347&apos; y=&apos;1.793263&apos;&gt;â&lt;/text&gt;
&lt;text font-family=&apos;cmmi8&apos; font-size=&apos;7.970112&apos; x=&apos;19.269977&apos; y=&apos;1.793263&apos;&gt;k&lt;/text&gt;
&lt;/g&gt;
&lt;/svg&gt;&lt;/span&gt;. To put it
more formally, the profit function is an additive multiset function:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;div style=&quot;vertical-align: -3.9248926525529266pt; text-align: center&quot;&gt;
&lt;!-- This file was generated by dvisvgm 2.14 --&gt;
&lt;svg version=&apos;1.1&apos; xmlns=&apos;http://www.w3.org/2000/svg&apos; xmlns:xlink=&apos;http://www.w3.org/1999/xlink&apos; width=&apos;484.105469pt&apos; height=&apos;14.574568pt&apos; viewBox=&apos;-.562502 -10.649675 484.105469 14.574568&apos;&gt;
&lt;style type=&apos;text/css&apos;&gt;
&lt;![CDATA[@font-face{font-family:cmsy8;src:url(data:application/x-font-woff;base64,d09GRgABAAAAAAXMAA4AAAAAB7wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGRlRNAAABRAAAABoAAAAckuE1BU9TLzIAAAFgAAAAQwAAAFZ2Rn+eY21hcAAAAaQAAAA+AAABQgAPJb1jdnQgAAAB5AAAAAYAAAAGAaAAIWZwZ20AAAHsAAABsQAAAmUPtC+nZ2x5ZgAAA6AAAACUAAAAlKEa4SBoZWFkAAAENAAAADEAAAA2IV6ZEWhoZWEAAARoAAAAHgAAACQE/QM/aG10eAAABIgAAAAQAAAAEAmuAHlsb2NhAAAEmAAAAAoAAAAKAHQAVG1heHAAAASkAAAAIAAAACABHgA7bmFtZQAABMQAAADAAAABHbNUuJpwb3N0AAAFhAAAABYAAAAqAPYAA3ByZXAAAAWcAAAALgAAAC6w8isUeNpjYGBgZACCy9vuzQDR96dqm8FoAFIdBqsAAHjaY2BktmKcwMDKwMDUybSbgYGhG0Iz3mcwZGQCijKwcjIgAwcYIyDNNYWBQUlISYjx4N9bDFGMB8HCjCACAM1SCtEAeNpjYGBgZoBgGQZGBhCwAfIYwXwWBgUgzQKEQL6S0P//EPLuR6hKBkY2BhiTgZEJSDAxoAJGhmEPAHaIBu4AAAAAACEBoAAAeNpdUbtOW0EQ3Q0PA4HE2CA52hSzmZAC74U2SCCuLsLIdmM5QtqNXORiXMAHUCBRg/ZrBmgoU6RNg5ALJD6BT4iUmTWJojQ7O7NzzpkzS8qRqndpveepcxZI4W6DZpt+J6TaRYAH0vWNRkbawSMtNjN65bp9v4/BZjTlThpAec9bykNG006gFu25fzI/g+E+/8s8B4OWZpqeWmchPYTAfDNuafA1o1l3/UFfsTpcDQaGFNNU3PXHVMr/luZcbRm2NjOad3AhIj+YBmhqrY1A0586pHo+jmIJcvlsrA0mpqw/yURwYTJd1VQtM752cJ/sLDrYpEpz4AEOsFWegofjowmF9C2JMktDhIPYKjFCxCSHQk45d7I/KVA+koQxb5LSzrhhrYFx5DUwqM3THL7MZlPbW4cwfhFH8N0vxpIOPrKhNkaE2I5YCmACkZBRVb6hxnMviwG51P4zECVgefrtXycCrTs2ES9lbZ1jjBWCnt823/llxd2qXOdFobt3VTVU6ZTmQy9n3+MRT4+F4aCx4M3nfX+jQO0NixsNmgPBkN6N3v/RWnXEVd4LH9lvNbOxFgAAAAACACEAAAEpAcEAAwAHAC6xAQAvPLIHBAHtMrEGBdw8sgMCAe0yALEDAC88sgUEAe0ysgcGAvw8sgECAe0yMxEhESczESMhAQjnxsYBwf4/IQF/AAACAFgA4wLhAREABwAIABoAsAcvsATNAbAJL7EKASsAsQQHERKwCDkwMSUyNCMhIhQzIQK7Jib9wyYmAj3jLi542mNgZGBgAOL6Hwy34/ltvjLIMz8HijDcn6ptBqcVGRiYHjIeBHI5GJhAogA/hwp3AAAAeNpjYGRgYDzIwMAQxWwFJBmYHjIwMqACFgA4LAJDAAADOgAhAAAAAAM6AAADOgBYAAAAKgAqACoASgAAAAEAAAAEAAkAAgAAAAAAAgABAAIAFgAAAQAALgAAAAB42kWNTarCQBCEP//1CeJKXA7uEzKzEteSA7hwKYiMQdAEJrpw6THeATyAN7QSBpxmur6mi2pgzJkOzesyYh65x4pD5AFT/iMPNX207fQn8s9aZ8M9tiwjD1jwijzkjzc7PAUPrhwJsPPF43oU5FSU3FsNcngMjpRMutE/caPmyTrOVttE3ao7uZyKvCrveRUKb1yamY053ernWmpdYm3iMifPXtFBUZf2YBPUHGHvQ32pSmNTDb9jtBF8AQdeJzx42mNgYkAGjAzogAUsysTwHgABtQD6AAC4Af+FsAGNAEuwCFBYsQEBjlmxRgYrWCGwEFlLsBRSWCGwgFkdsAYrXFhZsBQrAAA=) format(&apos;woff&apos;);}
@font-face{font-family:cmsy10;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
@font-face{font-family:cmmi8;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
@font-face{font-family:cmr12;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
@font-face{font-family:cmmi12;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
]]&gt;
&lt;/style&gt;
&lt;g id=&apos;page1&apos; transform=&apos;matrix(1.125 0 0 1.125 0 0)&apos;&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;0&apos; y=&apos;0&apos;&gt;P&lt;tspan x=&apos;9.171098&apos;&gt;r&lt;/tspan&gt;&lt;tspan x=&apos;14.771572&apos;&gt;of&lt;/tspan&gt;&lt;tspan x=&apos;27.445446&apos;&gt;it&lt;/tspan&gt;&lt;/text&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;35.666038&apos; y=&apos;0&apos;&gt;(&lt;/text&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;40.218364&apos; y=&apos;0&apos;&gt;P&lt;/text&gt;
&lt;text font-family=&apos;cmmi8&apos; font-size=&apos;7.970112&apos; x=&apos;47.763632&apos; y=&apos;1.793263&apos;&gt;n&lt;/text&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;53.399966&apos; y=&apos;0&apos;&gt;(&lt;/text&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;57.952292&apos; y=&apos;0&apos;&gt;o,&lt;tspan x=&apos;68.823888&apos;&gt;k&lt;/tspan&gt;&lt;/text&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;75.313392&apos; y=&apos;0&apos;&gt;))&lt;tspan x=&apos;87.738873&apos;&gt;=&lt;/tspan&gt;&lt;/text&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;100.164354&apos; y=&apos;0&apos;&gt;P&lt;tspan x=&apos;109.335453&apos;&gt;r&lt;/tspan&gt;&lt;tspan x=&apos;114.935926&apos;&gt;of&lt;/tspan&gt;&lt;tspan x=&apos;127.6098&apos;&gt;it&lt;/tspan&gt;&lt;/text&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;135.830392&apos; y=&apos;0&apos;&gt;(&lt;/text&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;140.382718&apos; y=&apos;0&apos;&gt;Q&lt;/text&gt;
&lt;text font-family=&apos;cmsy10&apos; font-size=&apos;11.955168&apos; x=&apos;152.310629&apos; y=&apos;0&apos;&gt;î&lt;tspan x=&apos;162.937431&apos;&gt;{&lt;/tspan&gt;&lt;/text&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;168.915038&apos; y=&apos;0&apos;&gt;(&lt;/text&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;173.467364&apos; y=&apos;0&apos;&gt;o,&lt;tspan x=&apos;184.33896&apos;&gt;k&lt;/tspan&gt;&lt;/text&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;190.828464&apos; y=&apos;0&apos;&gt;)&lt;/text&gt;
&lt;text font-family=&apos;cmsy10&apos; font-size=&apos;11.955168&apos; x=&apos;195.38079&apos; y=&apos;0&apos;&gt;}&lt;/text&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;201.358397&apos; y=&apos;0&apos;&gt;)&lt;tspan x=&apos;209.231552&apos;&gt;=&lt;/tspan&gt;&lt;/text&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;221.657033&apos; y=&apos;0&apos;&gt;P&lt;tspan x=&apos;230.828132&apos;&gt;r&lt;/tspan&gt;&lt;tspan x=&apos;236.428605&apos;&gt;of&lt;/tspan&gt;&lt;tspan x=&apos;249.102479&apos;&gt;it&lt;/tspan&gt;&lt;/text&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;257.323071&apos; y=&apos;0&apos;&gt;(&lt;/text&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;261.875397&apos; y=&apos;0&apos;&gt;Q&lt;/text&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;271.146645&apos; y=&apos;0&apos;&gt;)&lt;tspan x=&apos;278.355634&apos;&gt;+&lt;/tspan&gt;&lt;/text&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;290.116949&apos; y=&apos;0&apos;&gt;P&lt;tspan x=&apos;299.288047&apos;&gt;r&lt;/tspan&gt;&lt;tspan x=&apos;304.888521&apos;&gt;of&lt;/tspan&gt;&lt;tspan x=&apos;317.562395&apos;&gt;it&lt;/tspan&gt;&lt;/text&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;325.782987&apos; y=&apos;0&apos;&gt;((&lt;/text&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;334.887638&apos; y=&apos;0&apos;&gt;o,&lt;tspan x=&apos;345.759235&apos;&gt;k&lt;/tspan&gt;&lt;/text&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;352.248739&apos; y=&apos;0&apos;&gt;)&lt;tspan x=&apos;356.801053&apos;&gt;)&lt;/tspan&gt;&lt;/text&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;361.353379&apos; y=&apos;0&apos;&gt;,&lt;/text&gt;
&lt;text font-family=&apos;cmsy10&apos; font-size=&apos;11.955168&apos; x=&apos;370.499531&apos; y=&apos;0&apos;&gt;â&lt;/text&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;381.043305&apos; y=&apos;0&apos;&gt;Q&lt;/text&gt;
&lt;text font-family=&apos;cmsy10&apos; font-size=&apos;11.955168&apos; x=&apos;393.635382&apos; y=&apos;0&apos;&gt;â&lt;/text&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;404.92635&apos; y=&apos;0&apos;&gt;P&lt;/text&gt;
&lt;text font-family=&apos;cmmi8&apos; font-size=&apos;7.970112&apos; x=&apos;412.471618&apos; y=&apos;1.793263&apos;&gt;n&lt;/text&gt;
&lt;text font-family=&apos;cmsy8&apos; font-size=&apos;7.970112&apos; x=&apos;417.609821&apos; y=&apos;1.793263&apos;&gt;â&lt;/text&gt;
&lt;text font-family=&apos;cmmi8&apos; font-size=&apos;7.970112&apos; x=&apos;424.196327&apos; y=&apos;1.793263&apos;&gt;k&lt;/text&gt;
&lt;/g&gt;
&lt;/svg&gt;&lt;/div&gt;&lt;&#x2F;p&gt;
&lt;p&gt;We can thus get the best total value by using one of the members of the &lt;span style=&quot;vertical-align: -3.9248926525529266pt;&quot;&gt;
&lt;!-- This file was generated by dvisvgm 2.14 --&gt;
&lt;svg version=&apos;1.1&apos; xmlns=&apos;http://www.w3.org/2000/svg&apos; xmlns:xlink=&apos;http://www.w3.org/1999/xlink&apos; width=&apos;45.728265pt&apos; height=&apos;14.574568pt&apos; viewBox=&apos;-.562502 -10.649675 45.728265 14.574568&apos;&gt;
&lt;style type=&apos;text/css&apos;&gt;
&lt;![CDATA[@font-face{font-family:cmr12;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
@font-face{font-family:cmmi8;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
@font-face{font-family:cmmi12;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
]]&gt;
&lt;/style&gt;
&lt;g id=&apos;page1&apos; transform=&apos;matrix(1.125 0 0 1.125 0 0)&apos;&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;0&apos; y=&apos;0&apos;&gt;P&lt;/text&gt;
&lt;text font-family=&apos;cmmi8&apos; font-size=&apos;7.970112&apos; x=&apos;7.545268&apos; y=&apos;1.793263&apos;&gt;n&lt;/text&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;13.181602&apos; y=&apos;0&apos;&gt;(&lt;/text&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;17.733928&apos; y=&apos;0&apos;&gt;o,&lt;tspan x=&apos;28.605525&apos;&gt;k&lt;/tspan&gt;&lt;/text&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;35.095029&apos; y=&apos;0&apos;&gt;)&lt;/text&gt;
&lt;/g&gt;
&lt;/svg&gt;&lt;/span&gt;
set with the highest profit. Any other choice from that set would yield a lower
total profit. We have thus shown that our problem exhibits the &lt;em&gt;optimal
substructure&lt;&#x2F;em&gt; property: an optimal solution includes optimal solutions to
subproblems.&lt;&#x2F;p&gt;
&lt;p&gt;Armed with this revelation we can now produce a much more efficient
formulation:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;div style=&quot;vertical-align: -15.406785554171856pt; text-align: center&quot;&gt;
&lt;!-- This file was generated by dvisvgm 2.14 --&gt;
&lt;svg version=&apos;1.1&apos; xmlns=&apos;http://www.w3.org/2000/svg&apos; xmlns:xlink=&apos;http://www.w3.org/1999/xlink&apos; width=&apos;402.247952pt&apos; height=&apos;26.056461pt&apos; viewBox=&apos;-.562502 -10.649675 402.247952 26.056461&apos;&gt;
&lt;style type=&apos;text/css&apos;&gt;
&lt;![CDATA[@font-face{font-family:cmsy8;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
@font-face{font-family:cmsy6;src:url(data:application/x-font-woff;base64,d09GRgABAAAAAAXMAA4AAAAAB7wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGRlRNAAABRAAAABoAAAAckuE1A09TLzIAAAFgAAAAQwAAAFZ2SoAuY21hcAAAAaQAAAA+AAABQgAPJb1jdnQgAAAB5AAAAAYAAAAGAaQAIWZwZ20AAAHsAAABsQAAAmUPtC+nZ2x5ZgAAA6AAAACUAAAAlAIl8axoZWFkAAAENAAAADEAAAA2IcKZE2hoZWEAAARoAAAAHgAAACQFZQPHaG10eAAABIgAAAAQAAAAEAtGAJ5sb2NhAAAEmAAAAAoAAAAKAHQAVG1heHAAAASkAAAAIAAAACABHgA7bmFtZQAABMQAAADAAAABHa9UuJZwb3N0AAAFhAAAABYAAAAqAPYAA3ByZXAAAAWcAAAALgAAAC6w8isUeNpjYGBgZACCy9vuzQDR96dqm8JoAFITBqkAAHjaY2BkPsQ4gYGVgYGpk2k3AwNDN4RmvM9gyMgEFGVg5WRABg4wRkCaawoDg5KQkhDj0b/3GKIYj4KFGUEEAPoWC2UAeNpjYGBgZoBgGQZGBhCwAfIYwXwWBgUgzQKEQL6S0P//EPLuR6hKBkY2BhiTgZEJSDAxoAJGhmEPAHaIBu4AAAAAACEBpAAAeNpdUbtOW0EQ3Q0PA4HE2CA52hSzmZAC74U2SCCuLsLIdmM5QtqNXORiXMAHUCBRg/ZrBmgoU6RNg5ALJD6BT4iUmTWJojQ7O7NzzpkzS8qRqndpveepcxZI4W6DZpt+J6TaRYAH0vWNRkbawSMtNjN65bp9v4/BZjTlThpAec9bykNG006gFu25fzI/g+E+/8s8B4OWZpqeWmchPYTAfDNuafA1o1l3/UFfsTpcDQaGFNNU3PXHVMr/luZcbRm2NjOad3AhIj+YBmhqrY1A0586pHo+jmIJcvlsrA0mpqw/yURwYTJd1VQtM752cJ/sLDrYpEpz4AEOsFWegofjowmF9C2JMktDhIPYKjFCxCSHQk45d7I/KVA+koQxb5LSzrhhrYFx5DUwqM3THL7MZlPbW4cwfhFH8N0vxpIOPrKhNkaE2I5YCmACkZBRVb6hxnMviwG51P4zECVgefrtXycCrTs2ES9lbZ1jjBWCnt823/llxd2qXOdFobt3VTVU6ZTmQy9n3+MRT4+F4aCx4M3nfX+jQO0NixsNmgPBkN6N3v/RWnXEVd4LH9lvNbOxFgAAAAACACEAAAEpAcUAAwAHAC6xAQAvPLIHBAHtMrEGBdw8sgMCAe0yALEDAC88sgUEAe0ysgcGAvw8sgECAe0yMxEhESczESMhAQjnxsYBxf47IQGDAAACAH0A4ANFARQABwAIABoAsAcvsATNAbAJL7EKASsAsQQHERKwCDkwMSUyNCMhIhQzIQMcKSn9iikpAnbgNDR42mNgZGBgAOKDnHcD4/ltvjLIMz8HijDcn6ptCqcVGRiYXRmPArkcDEwgUQAoTgmEAAAAeNpjYGRgYDzKwMAQxXwISDIwuzIwMqACFgA6cAI0AAADwgAhAAAAAAPCAAADwgB9AAAAKgAqACoASgAAAAEAAAAEAAkAAgAAAAAAAgABAAIAFgAAAQAALgAAAAB42kWNvarCQBCFP//1CmIllot9QnYLC2vJA1hYCiJrEDSBjRaWPsZ9AB/AN/QkLLjDzvmGOZwBxpzp0LwuI+aRe6w4RB4w5T/yUNNH205/Iv+sdTbcY8sy8oAFr8hD/nizw1Pw4MqRADtfPK5HQU5Fyb3VIIfH4EjJpBv9EzdqnqzjbLVN1K26k8upyKvynleh8MalmdmY061+rqXWJdYmLnPy7BUdFHVpDzZBzRH2PtSXqjQ21fA7RhvBFwXSJzR42mNgYkAGjAzogAUsysTwHgABtQD6AAC4Af+FsAGNAEuwCFBYsQEBjlmxRgYrWCGwEFlLsBRSWCGwgFkdsAYrXFhZsBQrAAA=) format(&apos;woff&apos;);}
@font-face{font-family:cmsy10;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
@font-face{font-family:cmmi8;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
@font-face{font-family:cmmi6;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
@font-face{font-family:cmr12;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
@font-face{font-family:cmmi12;src:url(data:application/x-font-woff;base64,) format(&apos;woff&apos;);}
]]&gt;
&lt;/style&gt;
&lt;g id=&apos;page1&apos; transform=&apos;matrix(1.125 0 0 1.125 0 0)&apos;&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;0&apos; y=&apos;0&apos;&gt;P&lt;/text&gt;
&lt;text font-family=&apos;cmmi8&apos; font-size=&apos;7.970112&apos; x=&apos;7.545268&apos; y=&apos;1.793263&apos;&gt;n&lt;/text&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;13.181602&apos; y=&apos;0&apos;&gt;(&lt;/text&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;17.733928&apos; y=&apos;0&apos;&gt;o,&lt;tspan x=&apos;28.605525&apos;&gt;k&lt;/tspan&gt;&lt;/text&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;35.095029&apos; y=&apos;0&apos;&gt;)&lt;tspan x=&apos;42.968184&apos;&gt;=&lt;/tspan&gt;&lt;/text&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;55.393665&apos; y=&apos;0&apos;&gt;Q&lt;/text&gt;
&lt;text font-family=&apos;cmsy10&apos; font-size=&apos;11.955168&apos; x=&apos;67.321576&apos; y=&apos;0&apos;&gt;î&lt;tspan x=&apos;77.948378&apos;&gt;{&lt;/tspan&gt;&lt;/text&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;83.925985&apos; y=&apos;0&apos;&gt;(&lt;/text&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;88.478311&apos; y=&apos;0&apos;&gt;o,&lt;tspan x=&apos;99.349907&apos;&gt;k&lt;/tspan&gt;&lt;/text&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;105.839411&apos; y=&apos;0&apos;&gt;)&lt;/text&gt;
&lt;text font-family=&apos;cmsy10&apos; font-size=&apos;11.955168&apos; x=&apos;110.391737&apos; y=&apos;0&apos;&gt;}&lt;/text&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;116.369344&apos; y=&apos;0&apos;&gt;,&lt;tspan x=&apos;125.515496&apos;&gt;Q&lt;/tspan&gt;&lt;tspan x=&apos;138.688738&apos;&gt;is&lt;/tspan&gt;&lt;tspan x=&apos;152.098169&apos;&gt;any&lt;/tspan&gt;&lt;tspan x=&apos;175.269364&apos;&gt;one&lt;/tspan&gt;&lt;tspan x=&apos;197.211841&apos;&gt;el&lt;/tspan&gt;&lt;tspan x=&apos;206.38709&apos;&gt;ement&lt;/tspan&gt;&lt;tspan x=&apos;242.593996&apos;&gt;of&lt;/tspan&gt;&lt;tspan x=&apos;259.169863&apos;&gt;ar&lt;/tspan&gt;&lt;tspan x=&apos;270.915281&apos;&gt;g&lt;/tspan&gt;&lt;tspan x=&apos;276.949537&apos;&gt;max&lt;/tspan&gt;&lt;/text&gt;
&lt;text font-family=&apos;cmmi8&apos; font-size=&apos;7.970112&apos; x=&apos;263.807775&apos; y=&apos;9.76336&apos;&gt;S&lt;/text&gt;
&lt;text font-family=&apos;cmsy8&apos; font-size=&apos;7.970112&apos; x=&apos;269.403521&apos; y=&apos;9.76336&apos;&gt;â&lt;/text&gt;
&lt;text font-family=&apos;cmmi8&apos; font-size=&apos;7.970112&apos; x=&apos;275.049098&apos; y=&apos;9.76336&apos;&gt;P&lt;/text&gt;
&lt;text font-family=&apos;cmmi6&apos; font-size=&apos;5.977584&apos; x=&apos;280.417911&apos; y=&apos;11.169206&apos;&gt;n&lt;/text&gt;
&lt;text font-family=&apos;cmsy6&apos; font-size=&apos;5.977584&apos; x=&apos;285.018699&apos; y=&apos;11.169206&apos;&gt;â&lt;/text&gt;
&lt;text font-family=&apos;cmmi6&apos; font-size=&apos;5.977584&apos; x=&apos;290.774852&apos; y=&apos;11.169206&apos;&gt;k&lt;/text&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;303.887822&apos; y=&apos;0&apos;&gt;P&lt;tspan x=&apos;313.05892&apos;&gt;r&lt;/tspan&gt;&lt;tspan x=&apos;318.659394&apos;&gt;of&lt;/tspan&gt;&lt;tspan x=&apos;331.333268&apos;&gt;it&lt;/tspan&gt;&lt;/text&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;339.55386&apos; y=&apos;0&apos;&gt;(&lt;/text&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;344.106185&apos; y=&apos;0&apos;&gt;S&lt;/text&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;352.001508&apos; y=&apos;0&apos;&gt;)&lt;/text&gt;
&lt;/g&gt;
&lt;/svg&gt;&lt;/div&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This leads us to the following pseudocode:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; class=&quot;language-python z-code&quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;solve_optimal_substructure&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;n&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-annotation z-variable z-python&quot;&gt;:&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;solutions&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-mapping z-empty z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-mapping z-begin z-python&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-mapping z-end z-python&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;

    &lt;span class=&quot;z-meta z-statement z-loop z-for z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-loop z-for z-python&quot;&gt;for&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;k&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-control z-loop z-for z-in z-python&quot;&gt;in&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-loop z-for z-python&quot;&gt; &lt;span class=&quot;z-meta z-sequence z-list z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-sequence z-begin z-python&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-float z-decimal z-python&quot;&gt;1&lt;span class=&quot;z-punctuation z-separator z-decimal z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;n&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-sequence z-end z-python&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-loop z-for z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-loop z-for z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
        &lt;span class=&quot;z-meta z-statement z-loop z-for z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-loop z-for z-python&quot;&gt;for&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;o&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-control z-loop z-for z-in z-python&quot;&gt;in&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-loop z-for z-python&quot;&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-other z-constant z-python&quot;&gt;OPTIONS&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-loop z-for z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-loop z-for z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
            &lt;span class=&quot;z-meta z-statement z-conditional z-if z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-conditional z-if z-python&quot;&gt;if&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;o&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;accepts&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;k&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-block z-conditional z-if z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
                &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;solutions&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;solutions&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; âª
                            &lt;span class=&quot;z-meta z-group z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;solve_optimal_substructure&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;n&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-arithmetic z-python&quot;&gt;-&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;k&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; â
                             &lt;span class=&quot;z-meta z-mapping-or-set z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-mapping-or-set z-begin z-python&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-sequence z-tuple z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-sequence z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;o&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-sequence z-python&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;k&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-sequence z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-mapping-or-set z-end z-python&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;

    &lt;span class=&quot;z-keyword z-control z-flow z-return z-python&quot;&gt;return&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;argmax&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;solutions&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-arguments z-python&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;profit&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;

&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;solve_driver&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;n&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-annotation z-variable z-python&quot;&gt;:&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-keyword z-control z-flow z-return z-python&quot;&gt;return&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;solve_optimal_substructure&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;n&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;overlapping-subproblems&quot;&gt;Overlapping subproblems&lt;&#x2F;h3&gt;
&lt;p&gt;Another interesting thing to note is that to solve for &lt;span style=&quot;vertical-align: -0.5625016189290162pt;&quot;&gt;
&lt;!-- This file was generated by dvisvgm 2.14 --&gt;
&lt;svg version=&apos;1.1&apos; xmlns=&apos;http://www.w3.org/2000/svg&apos; xmlns:xlink=&apos;http://www.w3.org/1999/xlink&apos; width=&apos;8.98606pt&apos; height=&apos;6.915794pt&apos; viewBox=&apos;-.562502 -6.353292 8.98606 6.915794&apos;&gt;
&lt;style type=&apos;text/css&apos;&gt;
&lt;![CDATA[@font-face{font-family:cmmi12;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
]]&gt;
&lt;/style&gt;
&lt;g id=&apos;page1&apos; transform=&apos;matrix(1.125 0 0 1.125 0 0)&apos;&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;0&apos; y=&apos;0&apos;&gt;n&lt;/text&gt;
&lt;/g&gt;
&lt;/svg&gt;&lt;/span&gt; we need to solve
for &lt;span style=&quot;vertical-align: -1.6832986301369863pt;&quot;&gt;
&lt;!-- This file was generated by dvisvgm 2.14 --&gt;
&lt;svg version=&apos;1.1&apos; xmlns=&apos;http://www.w3.org/2000/svg&apos; xmlns:xlink=&apos;http://www.w3.org/1999/xlink&apos; width=&apos;58.534178pt&apos; height=&apos;10.913285pt&apos; viewBox=&apos;-.562502 -9.229986 58.534178 10.913285&apos;&gt;
&lt;style type=&apos;text/css&apos;&gt;
&lt;![CDATA[@font-face{font-family:cmr12;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
@font-face{font-family:cmsy10;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
@font-face{font-family:cmmi12;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
]]&gt;
&lt;/style&gt;
&lt;g id=&apos;page1&apos; transform=&apos;matrix(1.125 0 0 1.125 0 0)&apos;&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;0&apos; y=&apos;0&apos;&gt;n&lt;/text&gt;
&lt;text font-family=&apos;cmsy10&apos; font-size=&apos;11.955168&apos; x=&apos;9.644269&apos; y=&apos;0&apos;&gt;â&lt;/text&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;21.59943&apos; y=&apos;0&apos;&gt;1&lt;/text&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;29.44491&apos; y=&apos;0&apos;&gt;.&lt;tspan x=&apos;34.689069&apos;&gt;.&lt;/tspan&gt;&lt;tspan x=&apos;39.933228&apos;&gt;.&lt;/tspan&gt;&lt;/text&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;45.177387&apos; y=&apos;0&apos;&gt;1&lt;/text&gt;
&lt;/g&gt;
&lt;/svg&gt;&lt;/span&gt;. Similarly, to solve for &lt;span style=&quot;vertical-align: -1.6832986301369863pt;&quot;&gt;
&lt;!-- This file was generated by dvisvgm 2.14 --&gt;
&lt;svg version=&apos;1.1&apos; xmlns=&apos;http://www.w3.org/2000/svg&apos; xmlns:xlink=&apos;http://www.w3.org/1999/xlink&apos; width=&apos;32.008968pt&apos; height=&apos;10.913285pt&apos; viewBox=&apos;-.562502 -9.229986 32.008968 10.913285&apos;&gt;
&lt;style type=&apos;text/css&apos;&gt;
&lt;![CDATA[@font-face{font-family:cmr12;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
@font-face{font-family:cmsy10;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
@font-face{font-family:cmmi12;src:url(data:application/x-font-woff;base64,d09GRgABAAAAAAcgAA4AAAAACVgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGRlRNAAABRAAAABoAAAAckuE1A09TLzIAAAFgAAAAQgAAAFZVnl8PY21hcAAAAaQAAABBAAABQgMPBBljdnQgAAAB6AAAAAgAAAAIACECtWZwZ20AAAHwAAABsQAAAmUPtC+nZ2x5ZgAAA6QAAAHiAAACLErlMDRoZWFkAAAFiAAAADEAAAA2IKOZ32hoZWEAAAW8AAAAHgAAACQFIQJDaG10eAAABdwAAAAQAAAAEAbYADxsb2NhAAAF7AAAAAoAAAAKAUAAVG1heHAAAAX4AAAAIAAAACABHgFXbmFtZQAABhgAAAC/AAABI/a6b6dwb3N0AAAG2AAAABYAAAAqAFgAA3ByZXAAAAbwAAAALgAAAC6w8isUeNpjYGBgZACCy9vuzQDR96dqm8JoAFITBqkAAHjaY2Bk8mCcwMDKwMDUxbSHgYGhB0IzPmAwZGQCijKwcjLAACMDEghIc00BUnkMeUzv/rMxRDHNYuCCqQEAyFMKWQAAeNpjYGBgZoBgGQZGBhCwAfIYwXwWBgUgzQKEIH7e//8Q8v9UqEoGRjYGGJOBkQlIMDGgAkYGKgNmhsEGALg6BysAAAAAAAA8ACECeXjaXVG7TltBEN0NDwOBxNggOdoUs5mQAu+FNkggri7CyHZjOULajVzkYlzAB1AgUYP2awZoKFOkTYOQCyQ+gU+IlJk1iaI0Ozuzc86ZM0vKkap3ab3nqXMWSOFug2abfiek2kWAB9L1jUZG2sEjLTYzeuW6fb+PwWY05U4aQHnPW8pDRtNOoBbtuX8yP4PhPv/LPAeDlmaanlpnIT2EwHwzbmnwNaNZd/1BX7E6XA0GhhTTVNz1x1TK/5bmXG0ZtjYzmndwISI/mAZoaq2NQNOfOqR6Po5iCXL5bKwNJqasP8lEcGEyXdVULTO+dnCf7Cw62KRKc+ABDrBVnoKH46MJhfQtiTJLQ4SD2CoxQsQkh0JOOXeyPylQPpKEMW+S0s64Ya2BceQ1MKjN0xy+zGZT21uHMH4RR/DdL8aSDj6yoTZGhNiOWApgApGQUVW+ocZzL4sBudT+MxAlYHn67V8nAq07NhEvZW2dY4wVgp7fNt/5ZcXdqlznRaG7d1U1VOmU5kMvZ9/jEU+PheGgseDN531/o0DtDYsbDZoDwZDejd7/0Vp1xFXeCx/ZbzWzsRYAAAB42lWLP2/TQBiH787JOf+wfU6cSDGt4xhDErc2jWO7JokThaiKksJcwc7EJ2Bm6kfozsL0niuEYOrWyYxMfAAWJCYkJBBc2HiX3/M80osIshHCI3KFJCQjn2MUzHK5RL6NOS1/meUSEYi4tM/lfc5lKv2a5XjfQ2azByFzbFz9entLrn6/sMkFQgSZf34QD39AO3SOKQI1AKuAaQA0hOMCBmMMTwIIP0NSQKLxNfZgU8BG43NBowJGGm8IsguwNV4R5BbgatwUZBT8qZi4+zHrfH+FDK+mwEqDxQ3f4p+AboRcL1eLpgdb7Xq3RU0vF9q77F06VGF6mosmBr1Di+Vqu/P/Hf7PYNnFPAmZDlEKawZpChudH0/TlNsNpuc1OkhFqzBwUnB1rlrCTAYHKeKWynS+PhNhyt43jI47CqPze5304UkzI0kcjo2WTI1WOxxnUjRx+gqRFez0o0kSR5P7Tl/2hckKMVrhOE4yvH9QMZXp/iWJF+QTUSzmncZz5cjp+qZRqZWkEiEsOuyy7DR5viChc2RWtEqdlktqz7TY3WpdV+udunSnbWO33PWUwdnsjas7vjUKDqUqplSeZfbB4G0cPLoYBpF20pOqMkvnPtu9HA4ftxVDjp69Rn8BPPmCNwAAeNpjYGRgYADiVyk5nPH8Nl8Z5JlfAEUY7k/VNoXT0v+/MWkzzQJyORiYQKIAOxEK+gAAAHjaY2BkYGCa9f8bQxSTBwMQMGkzMDKgAhYAYRUDaQAAAkgAIQAAAAACSAAAAkgAGwAAACoAKgAqARYAAAABAAAABABNAAIAAAAAAAIAAQACABYAAAEAAQYAAAAAeNpNjU2qwjAUhT//FeXhSBwGHLc0GbqALsCBY0ViKdgWou7AZbgAV+D6PNEMXg6598vN4Vxgypke8fSZsEw8YMMh8Yg5z8Rj6a3f3nAm/9/XGXlAyTrxiBWPxGMWvNjhqbhz4UiAna/ul6OgpKPl9u1BDo/BkVOob3VPNFKN1fQ3iZSpWlUnn5Mou/ZWdqHyxuWF2ZpT09TWCazLrM1c4WTaKz1wVVrcGZPiHvY+XOuuNTbX4/8+fil8ANdtJ6YAeNpjYGJABowM6IAFLMrEEAgAARcAXAAAuAH/hbABjQBLsAhQWLEBAY5ZsUYGK1ghsBBZS7AUUlghsIBZHbAGK1xYWbAUKwAA) format(&apos;woff&apos;);}
]]&gt;
&lt;/style&gt;
&lt;g id=&apos;page1&apos; transform=&apos;matrix(1.125 0 0 1.125 0 0)&apos;&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;0&apos; y=&apos;0&apos;&gt;n&lt;/text&gt;
&lt;text font-family=&apos;cmsy10&apos; font-size=&apos;11.955168&apos; x=&apos;9.644269&apos; y=&apos;0&apos;&gt;â&lt;/text&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;21.59943&apos; y=&apos;0&apos;&gt;1&lt;/text&gt;
&lt;/g&gt;
&lt;/svg&gt;&lt;/span&gt; we need to solve
for &lt;span style=&quot;vertical-align: -1.6832986301369863pt;&quot;&gt;
&lt;!-- This file was generated by dvisvgm 2.14 --&gt;
&lt;svg version=&apos;1.1&apos; xmlns=&apos;http://www.w3.org/2000/svg&apos; xmlns:xlink=&apos;http://www.w3.org/1999/xlink&apos; width=&apos;58.534178pt&apos; height=&apos;10.913285pt&apos; viewBox=&apos;-.562502 -9.229986 58.534178 10.913285&apos;&gt;
&lt;style type=&apos;text/css&apos;&gt;
&lt;![CDATA[@font-face{font-family:cmr12;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
@font-face{font-family:cmsy10;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
@font-face{font-family:cmmi12;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
]]&gt;
&lt;/style&gt;
&lt;g id=&apos;page1&apos; transform=&apos;matrix(1.125 0 0 1.125 0 0)&apos;&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;0&apos; y=&apos;0&apos;&gt;n&lt;/text&gt;
&lt;text font-family=&apos;cmsy10&apos; font-size=&apos;11.955168&apos; x=&apos;9.644269&apos; y=&apos;0&apos;&gt;â&lt;/text&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;21.59943&apos; y=&apos;0&apos;&gt;2&lt;/text&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;29.44491&apos; y=&apos;0&apos;&gt;.&lt;tspan x=&apos;34.689069&apos;&gt;.&lt;/tspan&gt;&lt;tspan x=&apos;39.933228&apos;&gt;.&lt;/tspan&gt;&lt;/text&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;45.177387&apos; y=&apos;0&apos;&gt;1&lt;/text&gt;
&lt;/g&gt;
&lt;/svg&gt;&lt;/span&gt; and so on. We are solving the same problems over and
over again! Our problem thus exhibits the property of &lt;em&gt;overlapping subproblems&lt;&#x2F;em&gt;.
We can take advantage of this property by storing results in a cache and
reusing them instead of recalculating them.&lt;&#x2F;p&gt;
&lt;p&gt;Updating our original pseudocode to use a cache we have:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; class=&quot;language-python z-code&quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;solve_overlapping_subproblems&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;n&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-annotation z-variable z-python&quot;&gt;:&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-meta z-statement z-conditional z-if z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-conditional z-if z-python&quot;&gt;if&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;n&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-logical z-python&quot;&gt;in&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-other z-constant z-python&quot;&gt;CACHE&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-block z-conditional z-if z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-control z-flow z-return z-python&quot;&gt;return&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-other z-constant z-python&quot;&gt;CACHE&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-begin z-python&quot;&gt;[&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-arguments z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;n&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-end z-python&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;

    &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;solutions&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-mapping z-empty z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-mapping z-begin z-python&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-mapping z-end z-python&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;

    &lt;span class=&quot;z-meta z-statement z-loop z-for z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-loop z-for z-python&quot;&gt;for&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;k&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-control z-loop z-for z-in z-python&quot;&gt;in&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-loop z-for z-python&quot;&gt; &lt;span class=&quot;z-meta z-sequence z-list z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-sequence z-begin z-python&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-float z-decimal z-python&quot;&gt;1&lt;span class=&quot;z-punctuation z-separator z-decimal z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;n&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-sequence z-end z-python&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-loop z-for z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-loop z-for z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
        &lt;span class=&quot;z-meta z-statement z-loop z-for z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-loop z-for z-python&quot;&gt;for&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;o&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-control z-loop z-for z-in z-python&quot;&gt;in&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-loop z-for z-python&quot;&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-other z-constant z-python&quot;&gt;OPTIONS&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-loop z-for z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-loop z-for z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
            &lt;span class=&quot;z-meta z-statement z-conditional z-if z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-conditional z-if z-python&quot;&gt;if&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;o&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;accepts&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;k&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-block z-conditional z-if z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
                &lt;span class=&quot;z-meta z-statement z-loop z-for z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-loop z-for z-python&quot;&gt;for&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;s&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-control z-loop z-for z-in z-python&quot;&gt;in&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-loop z-for z-python&quot;&gt; &lt;span class=&quot;z-meta z-group z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;solve_overlapping_subproblems&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;n&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-arithmetic z-python&quot;&gt;-&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;k&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; âª &lt;span class=&quot;z-meta z-mapping-or-set z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-mapping-or-set z-begin z-python&quot;&gt;{&lt;&#x2F;span&gt;â&lt;span class=&quot;z-punctuation z-section z-mapping-or-set z-end z-python&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-loop z-for z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-loop z-for z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
                    &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;solutions&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;solutions&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; âª &lt;span class=&quot;z-meta z-group z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;s&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; â &lt;span class=&quot;z-meta z-mapping-or-set z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-mapping-or-set z-begin z-python&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-sequence z-tuple z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-sequence z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;o&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-sequence z-python&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;k&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-sequence z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-mapping-or-set z-end z-python&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;

    &lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-other z-constant z-python&quot;&gt;CACHE&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-begin z-python&quot;&gt;[&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-arguments z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;n&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-end z-python&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;solutions&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-keyword z-control z-flow z-return z-python&quot;&gt;return&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-other z-constant z-python&quot;&gt;CACHE&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-begin z-python&quot;&gt;[&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-arguments z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;n&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-end z-python&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;

&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;solve_driver&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;n&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-annotation z-variable z-python&quot;&gt;:&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-keyword z-control z-flow z-return z-python&quot;&gt;return&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;argmax&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;solve_overlapping_subproblems&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;n&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-arguments z-python&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;profit&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;dynamic-programming&quot;&gt;Dynamic programming&lt;&#x2F;h3&gt;
&lt;p&gt;If we combine both optimizations, taking advantage of both the optimal
substructure property and the overlapping subproblems property, we reach the
dynamic programming solution:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; class=&quot;language-python z-code&quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;solve_dp_recursive&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;n&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-annotation z-variable z-python&quot;&gt;:&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-meta z-statement z-conditional z-if z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-conditional z-if z-python&quot;&gt;if&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;n&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-logical z-python&quot;&gt;in&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-other z-constant z-python&quot;&gt;CACHE&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-block z-conditional z-if z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-control z-flow z-return z-python&quot;&gt;return&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-other z-constant z-python&quot;&gt;CACHE&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-begin z-python&quot;&gt;[&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-arguments z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;n&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-end z-python&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;solutions&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-mapping z-empty z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-mapping z-begin z-python&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-mapping z-end z-python&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;

    &lt;span class=&quot;z-meta z-statement z-loop z-for z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-loop z-for z-python&quot;&gt;for&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;k&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-control z-loop z-for z-in z-python&quot;&gt;in&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-loop z-for z-python&quot;&gt; &lt;span class=&quot;z-meta z-sequence z-list z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-sequence z-begin z-python&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-float z-decimal z-python&quot;&gt;1&lt;span class=&quot;z-punctuation z-separator z-decimal z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;n&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-sequence z-end z-python&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-loop z-for z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-loop z-for z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
        &lt;span class=&quot;z-meta z-statement z-loop z-for z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-loop z-for z-python&quot;&gt;for&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;o&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-control z-loop z-for z-in z-python&quot;&gt;in&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-loop z-for z-python&quot;&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-other z-constant z-python&quot;&gt;OPTIONS&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-loop z-for z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-loop z-for z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
            &lt;span class=&quot;z-meta z-statement z-conditional z-if z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-conditional z-if z-python&quot;&gt;if&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;o&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;accepts&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;k&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-block z-conditional z-if z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
                &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;solutions&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;solutions&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; âª
                            &lt;span class=&quot;z-meta z-group z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;solve_dp_recursive&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;n&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-arithmetic z-python&quot;&gt;-&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;k&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; â &lt;span class=&quot;z-meta z-mapping-or-set z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-mapping-or-set z-begin z-python&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-sequence z-tuple z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-sequence z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;o&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-sequence z-python&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;k&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-sequence z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-mapping-or-set z-end z-python&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;

    &lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-other z-constant z-python&quot;&gt;CACHE&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-begin z-python&quot;&gt;[&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-arguments z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;n&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-end z-python&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;argmax&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;solutions&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-arguments z-python&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;profit&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-keyword z-control z-flow z-return z-python&quot;&gt;return&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-other z-constant z-python&quot;&gt;CACHE&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-begin z-python&quot;&gt;[&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-arguments z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;n&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-end z-python&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;

&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;solve_driver&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;n&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-annotation z-variable z-python&quot;&gt;:&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-keyword z-control z-flow z-return z-python&quot;&gt;return&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;solve_dp_recursive&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;n&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Alternatively, we can express this without recursion:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; class=&quot;language-python z-code&quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;solve_dp_iterative&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;n&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-annotation z-variable z-python&quot;&gt;:&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;solutions&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-mapping z-empty z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-mapping z-begin z-python&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-mapping z-end z-python&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;

    &lt;span class=&quot;z-meta z-statement z-loop z-for z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-loop z-for z-python&quot;&gt;for&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;k&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-control z-loop z-for z-in z-python&quot;&gt;in&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-loop z-for z-python&quot;&gt; &lt;span class=&quot;z-meta z-sequence z-list z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-sequence z-begin z-python&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-float z-decimal z-python&quot;&gt;1&lt;span class=&quot;z-punctuation z-separator z-decimal z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;n&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-sequence z-end z-python&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-loop z-for z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-loop z-for z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
        &lt;span class=&quot;z-meta z-statement z-loop z-for z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-loop z-for z-python&quot;&gt;for&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;o&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-control z-loop z-for z-in z-python&quot;&gt;in&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-loop z-for z-python&quot;&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-other z-constant z-python&quot;&gt;OPTIONS&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-loop z-for z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-loop z-for z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
            &lt;span class=&quot;z-meta z-statement z-conditional z-if z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-conditional z-if z-python&quot;&gt;if&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;o&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;accepts&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;k&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-block z-conditional z-if z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
                &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;solutions&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;solutions&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; âª &lt;span class=&quot;z-meta z-group z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-other z-constant z-python&quot;&gt;CACHE&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-begin z-python&quot;&gt;[&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-arguments z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;n&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-arithmetic z-python&quot;&gt;-&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;k&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-end z-python&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; â &lt;span class=&quot;z-meta z-mapping-or-set z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-mapping-or-set z-begin z-python&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-sequence z-tuple z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-sequence z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;o&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-sequence z-python&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;k&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-sequence z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-mapping-or-set z-end z-python&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;

    &lt;span class=&quot;z-keyword z-control z-flow z-return z-python&quot;&gt;return&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;argmax&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;solutions&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-arguments z-python&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;profit&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;

&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;solve_driver&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;n&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-annotation z-variable z-python&quot;&gt;:&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-meta z-statement z-loop z-for z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-loop z-for z-python&quot;&gt;for&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;k&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-control z-loop z-for z-in z-python&quot;&gt;in&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-loop z-for z-python&quot;&gt; &lt;span class=&quot;z-meta z-sequence z-list z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-sequence z-begin z-python&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-float z-decimal z-python&quot;&gt;1&lt;span class=&quot;z-punctuation z-separator z-decimal z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;n&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-sequence z-end z-python&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-loop z-for z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-loop z-for z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
        &lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-other z-constant z-python&quot;&gt;CACHE&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-begin z-python&quot;&gt;[&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-arguments z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;k&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-end z-python&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;solve_dp_iterative&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;k&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-keyword z-control z-flow z-return z-python&quot;&gt;return&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-other z-constant z-python&quot;&gt;CACHE&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-begin z-python&quot;&gt;[&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-arguments z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;n&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-end z-python&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;scaling-down&quot;&gt;Scaling down&lt;&#x2F;h2&gt;
&lt;p&gt;Instances of this problem with a large &lt;span style=&quot;vertical-align: -0.5625016189290162pt;&quot;&gt;
&lt;!-- This file was generated by dvisvgm 2.14 --&gt;
&lt;svg version=&apos;1.1&apos; xmlns=&apos;http://www.w3.org/2000/svg&apos; xmlns:xlink=&apos;http://www.w3.org/1999/xlink&apos; width=&apos;8.98606pt&apos; height=&apos;6.915794pt&apos; viewBox=&apos;-.562502 -6.353292 8.98606 6.915794&apos;&gt;
&lt;style type=&apos;text/css&apos;&gt;
&lt;![CDATA[@font-face{font-family:cmmi12;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
]]&gt;
&lt;/style&gt;
&lt;g id=&apos;page1&apos; transform=&apos;matrix(1.125 0 0 1.125 0 0)&apos;&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;0&apos; y=&apos;0&apos;&gt;n&lt;/text&gt;
&lt;/g&gt;
&lt;/svg&gt;&lt;/span&gt; can still be prohibitive to
solve even when using the dynamic programming approach I just described. Not
all is lost, however, if we are willing to relax our requirement for a
guaranteed optimal solution.&lt;&#x2F;p&gt;
&lt;p&gt;One approach to cutting down our solution time, while still producing a
possibly good solution, is to scale down our problem. We do this by dividing
the start, end and bonus values of all options, and also the target number for
which we solve for by a particular &lt;em&gt;scale&lt;&#x2F;em&gt; factor. Another way to view this is
that scaling down by &lt;em&gt;scale&lt;&#x2F;em&gt; corresponds to performing the algorithms with a
minimum step of value &lt;em&gt;scale&lt;&#x2F;em&gt; instead of value 1.&lt;&#x2F;p&gt;
&lt;p&gt;For example if we scaled down our original problem by 10 we would solve for 172
(= 1720 &#x2F; 10) and use the following scaled down options:&lt;&#x2F;p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Option#&lt;&#x2F;th&gt;&lt;th&gt;min amount&lt;&#x2F;th&gt;&lt;th&gt;max amount&lt;&#x2F;th&gt;&lt;th&gt;interest&lt;&#x2F;th&gt;&lt;th&gt;sign up bonus&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;5&lt;&#x2F;td&gt;&lt;td&gt;9&lt;&#x2F;td&gt;&lt;td&gt;1%&lt;&#x2F;td&gt;&lt;td&gt;0.05&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;2&lt;&#x2F;td&gt;&lt;td&gt;10&lt;&#x2F;td&gt;&lt;td&gt;29&lt;&#x2F;td&gt;&lt;td&gt;1.1%&lt;&#x2F;td&gt;&lt;td&gt;0.1&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;3&lt;&#x2F;td&gt;&lt;td&gt;30&lt;&#x2F;td&gt;&lt;td&gt;49&lt;&#x2F;td&gt;&lt;td&gt;1.6%&lt;&#x2F;td&gt;&lt;td&gt;0.22&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;4&lt;&#x2F;td&gt;&lt;td&gt;50&lt;&#x2F;td&gt;&lt;td&gt;99&lt;&#x2F;td&gt;&lt;td&gt;1.8%&lt;&#x2F;td&gt;&lt;td&gt;0.25&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;5&lt;&#x2F;td&gt;&lt;td&gt;100&lt;&#x2F;td&gt;&lt;td&gt;199&lt;&#x2F;td&gt;&lt;td&gt;2%&lt;&#x2F;td&gt;&lt;td&gt;0.4&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;p&gt;When we find the optimal solution we can scale it back up using the same
&lt;em&gt;scale&lt;&#x2F;em&gt; factor.&lt;&#x2F;p&gt;
&lt;p&gt;The expectation is that the optimal solution for the scaled down version of our
problem is going to be in the proximity of the optimal solution for the
original version, and assuming that the &lt;em&gt;Profit&lt;&#x2F;em&gt; function is generally
smooth, the profit is also going to be near the optimal one.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;getting-greedy&quot;&gt;Getting greedy&lt;&#x2F;h2&gt;
&lt;p&gt;Another approach to solving this problem faster is to explore whether there is
greedy solution for it. Below I will describe an approach that works in many
cases, but is not guaranteed to provide the optimal solution.&lt;&#x2F;p&gt;
&lt;p&gt;Taking inspiration from the greedy solution to the fractional knapsack problem,
at each step we greedily select to put as many CUs as possible in the option
with the best marginal profit. The key observation here is that in our case
each option has &lt;em&gt;two&lt;&#x2F;em&gt; different marginal profits. The first one involves
investing in a new instance of an option using its minimum acceptable amount.
The second one involves investing more in an instance of an option we have
already invested in. In the first case the sign up bonus kicks in and increases
the marginal profit. In the second case the marginal profit is simply the interest.&lt;&#x2F;p&gt;
&lt;p&gt;For our original scenario we have:&lt;&#x2F;p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Option#&lt;&#x2F;th&gt;&lt;th&gt;min amount&lt;&#x2F;th&gt;&lt;th&gt;max amount&lt;&#x2F;th&gt;&lt;th&gt;min marginal profit&lt;&#x2F;th&gt;&lt;th&gt;add marginal profit&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;50&lt;&#x2F;td&gt;&lt;td&gt;99&lt;&#x2F;td&gt;&lt;td&gt;2%&lt;&#x2F;td&gt;&lt;td&gt;1%&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;2&lt;&#x2F;td&gt;&lt;td&gt;100&lt;&#x2F;td&gt;&lt;td&gt;299&lt;&#x2F;td&gt;&lt;td&gt;2.1%&lt;&#x2F;td&gt;&lt;td&gt;1.1%&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;3&lt;&#x2F;td&gt;&lt;td&gt;300&lt;&#x2F;td&gt;&lt;td&gt;499&lt;&#x2F;td&gt;&lt;td&gt;2.3333%&lt;&#x2F;td&gt;&lt;td&gt;1.6%&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;4&lt;&#x2F;td&gt;&lt;td&gt;500&lt;&#x2F;td&gt;&lt;td&gt;999&lt;&#x2F;td&gt;&lt;td&gt;2.3%&lt;&#x2F;td&gt;&lt;td&gt;1.8%&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;5&lt;&#x2F;td&gt;&lt;td&gt;1000&lt;&#x2F;td&gt;&lt;td&gt;1999&lt;&#x2F;td&gt;&lt;td&gt;2.4%&lt;&#x2F;td&gt;&lt;td&gt;2%&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;p&gt;For a total amount of 1720 this method works flawlessly.  We first select to
add &lt;span style=&quot;vertical-align: -3.9248926525529266pt;&quot;&gt;
&lt;!-- This file was generated by dvisvgm 2.14 --&gt;
&lt;svg version=&apos;1.1&apos; xmlns=&apos;http://www.w3.org/2000/svg&apos; xmlns:xlink=&apos;http://www.w3.org/1999/xlink&apos; width=&apos;56.52134pt&apos; height=&apos;14.574568pt&apos; viewBox=&apos;-.562502 -10.649675 56.52134 14.574568&apos;&gt;
&lt;style type=&apos;text/css&apos;&gt;
&lt;![CDATA[@font-face{font-family:cmmi12;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
@font-face{font-family:cmr12;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
]]&gt;
&lt;/style&gt;
&lt;g id=&apos;page1&apos; transform=&apos;matrix(1.125 0 0 1.125 0 0)&apos;&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;0&apos; y=&apos;0&apos;&gt;(&lt;/text&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;4.552326&apos; y=&apos;0&apos;&gt;o&lt;/text&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;10.179763&apos; y=&apos;0&apos;&gt;5&lt;/text&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;16.032754&apos; y=&apos;0&apos;&gt;,&lt;/text&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;21.276912&apos; y=&apos;0&apos;&gt;1000)&lt;/text&gt;
&lt;/g&gt;
&lt;/svg&gt;&lt;/span&gt; to our portofolio for a marginal profit of 2.4%. From the
remaining 720 we add &lt;span style=&quot;vertical-align: -3.9248926525529266pt;&quot;&gt;
&lt;!-- This file was generated by dvisvgm 2.14 --&gt;
&lt;svg version=&apos;1.1&apos; xmlns=&apos;http://www.w3.org/2000/svg&apos; xmlns:xlink=&apos;http://www.w3.org/1999/xlink&apos; width=&apos;49.936726pt&apos; height=&apos;14.574568pt&apos; viewBox=&apos;-.562502 -10.649675 49.936726 14.574568&apos;&gt;
&lt;style type=&apos;text/css&apos;&gt;
&lt;![CDATA[@font-face{font-family:cmmi12;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
@font-face{font-family:cmr12;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
]]&gt;
&lt;/style&gt;
&lt;g id=&apos;page1&apos; transform=&apos;matrix(1.125 0 0 1.125 0 0)&apos;&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;0&apos; y=&apos;0&apos;&gt;(&lt;/text&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;4.552326&apos; y=&apos;0&apos;&gt;o&lt;/text&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;10.179763&apos; y=&apos;0&apos;&gt;3&lt;/text&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;16.032754&apos; y=&apos;0&apos;&gt;,&lt;/text&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;21.276912&apos; y=&apos;0&apos;&gt;300)&lt;/text&gt;
&lt;/g&gt;
&lt;/svg&gt;&lt;/span&gt; for a marginal profit of 2.333%. From the
remaining 420 we again choose &lt;span style=&quot;vertical-align: -3.9248926525529266pt;&quot;&gt;
&lt;!-- This file was generated by dvisvgm 2.14 --&gt;
&lt;svg version=&apos;1.1&apos; xmlns=&apos;http://www.w3.org/2000/svg&apos; xmlns:xlink=&apos;http://www.w3.org/1999/xlink&apos; width=&apos;49.936726pt&apos; height=&apos;14.574568pt&apos; viewBox=&apos;-.562502 -10.649675 49.936726 14.574568&apos;&gt;
&lt;style type=&apos;text/css&apos;&gt;
&lt;![CDATA[@font-face{font-family:cmmi12;src:url(data:application/x-font-woff;base64,d09GRgABAAAAAAacAA4AAAAACKgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGRlRNAAABRAAAABoAAAAckuE0/09TLzIAAAFgAAAAQgAAAFZWE140Y21hcAAAAaQAAABLAAABSgDLBqhjdnQgAAAB8AAAAAgAAAAIACEEMmZwZ20AAAH4AAABsQAAAmUPtC+nZ2x5ZgAAA6wAAAFRAAABcC/4Jk1oZWFkAAAFAAAAADEAAAA2IEaZJGhoZWEAAAU0AAAAHgAAACQEvgEbaG10eAAABVQAAAAUAAAAFAWeAKFsb2NhAAAFaAAAAAwAAAAMAIoBDG1heHAAAAV0AAAAIAAAACABIQBqbmFtZQAABZQAAAC/AAABI/a6b6dwb3N0AAAGVAAAABYAAAAsABcAVHByZXAAAAZsAAAALgAAAC6w8isUeNpjYGBgZACCy9vuzQDR96dqG8NoAFH/BqUAAHjaY2BkLGKcwMDKwMDUxbSHgYGhB0IzPmAwZGQCijKwMjPAACMDEghIc00BUjoM+Uzv/rMxRDHNYjgIUwMA1YMK8gAAeNrNisEJgDAQBGcvIVVYgA/LsB+rsTbLOdcoQt5+HNgbBg4o3JsQF6tLvSuz3WwRLGyZ7u48cn/+jRpvKHyCEY1Z+EzlZ5xNiglzAAAAAbkAIQJ5eNpdUbtOW0EQ3Q0PA4HE2CA52hSzmZAC74U2SCCuLsLIdmM5QtqNXORiXMAHUCBRg/ZrBmgoU6RNg5ALJD6BT4iUmTWJojQ7O7NzzpkzS8qRqndpveepcxZI4W6DZpt+J6TaRYAH0vWNRkbawSMtNjN65bp9v4/BZjTlThpAec9bykNG006gFu25fzI/g+E+/8s8B4OWZpqeWmchPYTAfDNuafA1o1l3/UFfsTpcDQaGFNNU3PXHVMr/luZcbRm2NjOad3AhIj+YBmhqrY1A0586pHo+jmIJcvlsrA0mpqw/yURwYTJd1VQtM752cJ/sLDrYpEpz4AEOsFWegofjowmF9C2JMktDhIPYKjFCxCSHQk45d7I/KVA+koQxb5LSzrhhrYFx5DUwqM3THL7MZlPbW4cwfhFH8N0vxpIOPrKhNkaE2I5YCmACkZBRVb6hxnMviwG51P4zECVgefrtXycCrTs2ES9lbZ1jjBWCnt823/llxd2qXOdFobt3VTVU6ZTmQy9n3+MRT4+F4aCx4M3nfX+jQO0NixsNmgPBkN6N3v/RWnXEVd4LH9lvNbOxFgAAAHjaRY69TsJgFIbP+Vq+pkBJC6VQEgu1pCg11Lb8pJGggzGYuBpNjCbGxMGLcPAyWL2Br3VyZoClK5MX4OKqgwq2k8Ob8+YZ3vMAARMAu2QGHAjQixDccSzw5MOPaO5tHHMkrRBxGc5lOBYo9zOOMeOBYiqdQLFMFN8XCzL7vTfJJQCBi80hzOEWalCHFjDJZVyCTHdZacUgiRropJOSUmY03PdqfdvaplVVC/zR0K+qQtoDf4KDuWFoDb2uSoQ/KuRpZ4fvjYxyxZBI5Wpa5PN7133gYXfziUt8hQIUwYAmnEDMIThMS5joMin923IZXTE5YbIc6ehkBiY6kS4r5UjkwhAiSUxdmiHTlJgWIQxTK/y3Gg5w2x70h6MJBr5WValQQguX58d3z1nW37bXUptnlu2Zja1TEyvTm5eHLOuvg6D92B566Xnquj2AP7pBVl4AAAB42mNgZGBgAGLNHXV74/ltvjLIM78AijDcn6ptDKcV/9sznmCaBeRyMDCBRAFFtws6AAAAeNpjYGRgYJr1354hivEaAxAwnmBgZEAFrABlsgPcAAABbAAhAAAAAAFNAAABDwBXAdYAKQAAACoAKgAqAGAAuAABAAAABQAgAAQAAAAAAAIAAQACABYAAAEAAEYAAAAAeNpNjU2qwjAUhT//FeXhSBwGHLc0GbqALsCBY0ViKdgWou7AZbgAV+D6PNEMXg6598vN4Vxgypke8fSZsEw8YMMh8Yg5z8Rj6a3f3nAm/9/XGXlAyTrxiBWPxGMWvNjhqbhz4UiAna/ul6OgpKPl9u1BDo/BkVOob3VPNFKN1fQ3iZSpWlUnn5Mou/ZWdqHyxuWF2ZpT09TWCazLrM1c4WTaKz1wVVrcGZPiHvY+XOuuNTbX4/8+fil8ANdtJ6YAeNpjYGLAD1iBmJGBiYGfIQgAAUkAbAAAuAH/hbABjQBLsAhQWLEBAY5ZsUYGK1ghsBBZS7AUUlghsIBZHbAGK1xYWbAUKwAA) format(&apos;woff&apos;);}
@font-face{font-family:cmr12;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
]]&gt;
&lt;/style&gt;
&lt;g id=&apos;page1&apos; transform=&apos;matrix(1.125 0 0 1.125 0 0)&apos;&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;0&apos; y=&apos;0&apos;&gt;(&lt;/text&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;4.552326&apos; y=&apos;0&apos;&gt;o&lt;/text&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;10.179763&apos; y=&apos;0&apos;&gt;3&lt;/text&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;16.032754&apos; y=&apos;0&apos;&gt;,&lt;/text&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;21.276912&apos; y=&apos;0&apos;&gt;300)&lt;/text&gt;
&lt;/g&gt;
&lt;/svg&gt;&lt;/span&gt;. We now have 120 left, for which
we choose &lt;span style=&quot;vertical-align: -3.9248926525529266pt;&quot;&gt;
&lt;!-- This file was generated by dvisvgm 2.14 --&gt;
&lt;svg version=&apos;1.1&apos; xmlns=&apos;http://www.w3.org/2000/svg&apos; xmlns:xlink=&apos;http://www.w3.org/1999/xlink&apos; width=&apos;49.936726pt&apos; height=&apos;14.574568pt&apos; viewBox=&apos;-.562502 -10.649675 49.936726 14.574568&apos;&gt;
&lt;style type=&apos;text/css&apos;&gt;
&lt;![CDATA[@font-face{font-family:cmmi12;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
@font-face{font-family:cmr12;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
]]&gt;
&lt;/style&gt;
&lt;g id=&apos;page1&apos; transform=&apos;matrix(1.125 0 0 1.125 0 0)&apos;&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;0&apos; y=&apos;0&apos;&gt;(&lt;/text&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;4.552326&apos; y=&apos;0&apos;&gt;o&lt;/text&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;10.179763&apos; y=&apos;0&apos;&gt;3&lt;/text&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;16.032754&apos; y=&apos;0&apos;&gt;,&lt;/text&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;21.276912&apos; y=&apos;0&apos;&gt;100)&lt;/text&gt;
&lt;/g&gt;
&lt;/svg&gt;&lt;/span&gt;, and the final 20 we add to the &lt;span style=&quot;vertical-align: -3.9248926525529266pt;&quot;&gt;
&lt;!-- This file was generated by dvisvgm 2.14 --&gt;
&lt;svg version=&apos;1.1&apos; xmlns=&apos;http://www.w3.org/2000/svg&apos; xmlns:xlink=&apos;http://www.w3.org/1999/xlink&apos; width=&apos;56.52134pt&apos; height=&apos;14.574568pt&apos; viewBox=&apos;-.562502 -10.649675 56.52134 14.574568&apos;&gt;
&lt;style type=&apos;text/css&apos;&gt;
&lt;![CDATA[@font-face{font-family:cmmi12;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
@font-face{font-family:cmr12;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
]]&gt;
&lt;/style&gt;
&lt;g id=&apos;page1&apos; transform=&apos;matrix(1.125 0 0 1.125 0 0)&apos;&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;0&apos; y=&apos;0&apos;&gt;(&lt;/text&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;4.552326&apos; y=&apos;0&apos;&gt;o&lt;/text&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;10.179763&apos; y=&apos;0&apos;&gt;5&lt;/text&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;16.032754&apos; y=&apos;0&apos;&gt;,&lt;/text&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;21.276912&apos; y=&apos;0&apos;&gt;1000)&lt;/text&gt;
&lt;/g&gt;
&lt;/svg&gt;&lt;/span&gt;
instance we already have.&lt;&#x2F;p&gt;
&lt;p&gt;Unfortunately, this method doesn&#x27;t find the optimal solution in all cases. Take
for example a total amount of 500. The greedy algorithm chooses &lt;span style=&quot;vertical-align: -3.9248926525529266pt;&quot;&gt;
&lt;!-- This file was generated by dvisvgm 2.14 --&gt;
&lt;svg version=&apos;1.1&apos; xmlns=&apos;http://www.w3.org/2000/svg&apos; xmlns:xlink=&apos;http://www.w3.org/1999/xlink&apos; width=&apos;49.936726pt&apos; height=&apos;14.574568pt&apos; viewBox=&apos;-.562502 -10.649675 49.936726 14.574568&apos;&gt;
&lt;style type=&apos;text/css&apos;&gt;
&lt;![CDATA[@font-face{font-family:cmmi12;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
@font-face{font-family:cmr12;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
]]&gt;
&lt;/style&gt;
&lt;g id=&apos;page1&apos; transform=&apos;matrix(1.125 0 0 1.125 0 0)&apos;&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;0&apos; y=&apos;0&apos;&gt;(&lt;/text&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;4.552326&apos; y=&apos;0&apos;&gt;o&lt;/text&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;10.179763&apos; y=&apos;0&apos;&gt;3&lt;/text&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;16.032754&apos; y=&apos;0&apos;&gt;,&lt;/text&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;21.276912&apos; y=&apos;0&apos;&gt;300)&lt;/text&gt;
&lt;/g&gt;
&lt;/svg&gt;&lt;/span&gt;,
&lt;span style=&quot;vertical-align: -3.9248926525529266pt;&quot;&gt;
&lt;!-- This file was generated by dvisvgm 2.14 --&gt;
&lt;svg version=&apos;1.1&apos; xmlns=&apos;http://www.w3.org/2000/svg&apos; xmlns:xlink=&apos;http://www.w3.org/1999/xlink&apos; width=&apos;49.936726pt&apos; height=&apos;14.574568pt&apos; viewBox=&apos;-.562502 -10.649675 49.936726 14.574568&apos;&gt;
&lt;style type=&apos;text/css&apos;&gt;
&lt;![CDATA[@font-face{font-family:cmmi12;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
@font-face{font-family:cmr12;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
]]&gt;
&lt;/style&gt;
&lt;g id=&apos;page1&apos; transform=&apos;matrix(1.125 0 0 1.125 0 0)&apos;&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;0&apos; y=&apos;0&apos;&gt;(&lt;/text&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;4.552326&apos; y=&apos;0&apos;&gt;o&lt;/text&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;10.179763&apos; y=&apos;0&apos;&gt;2&lt;/text&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;16.032754&apos; y=&apos;0&apos;&gt;,&lt;/text&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;21.276912&apos; y=&apos;0&apos;&gt;100)&lt;/text&gt;
&lt;/g&gt;
&lt;/svg&gt;&lt;/span&gt;, &lt;span style=&quot;vertical-align: -3.9248926525529266pt;&quot;&gt;
&lt;!-- This file was generated by dvisvgm 2.14 --&gt;
&lt;svg version=&apos;1.1&apos; xmlns=&apos;http://www.w3.org/2000/svg&apos; xmlns:xlink=&apos;http://www.w3.org/1999/xlink&apos; width=&apos;49.936726pt&apos; height=&apos;14.574568pt&apos; viewBox=&apos;-.562502 -10.649675 49.936726 14.574568&apos;&gt;
&lt;style type=&apos;text/css&apos;&gt;
&lt;![CDATA[@font-face{font-family:cmmi12;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
@font-face{font-family:cmr12;src:url(data:application/x-font-woff;base64,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) format(&apos;woff&apos;);}
]]&gt;
&lt;/style&gt;
&lt;g id=&apos;page1&apos; transform=&apos;matrix(1.125 0 0 1.125 0 0)&apos;&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;0&apos; y=&apos;0&apos;&gt;(&lt;/text&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;4.552326&apos; y=&apos;0&apos;&gt;o&lt;/text&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;10.179763&apos; y=&apos;0&apos;&gt;2&lt;/text&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;16.032754&apos; y=&apos;0&apos;&gt;,&lt;/text&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;21.276912&apos; y=&apos;0&apos;&gt;100)&lt;/text&gt;
&lt;/g&gt;
&lt;/svg&gt;&lt;/span&gt; for a total profit of 11.2. Alas, the
optimal solution is simply &lt;span style=&quot;vertical-align: -3.9248926525529266pt;&quot;&gt;
&lt;!-- This file was generated by dvisvgm 2.14 --&gt;
&lt;svg version=&apos;1.1&apos; xmlns=&apos;http://www.w3.org/2000/svg&apos; xmlns:xlink=&apos;http://www.w3.org/1999/xlink&apos; width=&apos;49.936726pt&apos; height=&apos;14.574568pt&apos; viewBox=&apos;-.562502 -10.649675 49.936726 14.574568&apos;&gt;
&lt;style type=&apos;text/css&apos;&gt;
&lt;![CDATA[@font-face{font-family:cmmi12;src:url(data:application/x-font-woff;base64,d09GRgABAAAAAAacAA4AAAAACKgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGRlRNAAABRAAAABoAAAAckuE0/09TLzIAAAFgAAAAQgAAAFZWE140Y21hcAAAAaQAAABLAAABSgDLBqhjdnQgAAAB8AAAAAgAAAAIACEEMmZwZ20AAAH4AAABsQAAAmUPtC+nZ2x5ZgAAA6wAAAFRAAABcC/4Jk1oZWFkAAAFAAAAADEAAAA2IEaZJGhoZWEAAAU0AAAAHgAAACQEvgEbaG10eAAABVQAAAAUAAAAFAWeAKFsb2NhAAAFaAAAAAwAAAAMAIoBDG1heHAAAAV0AAAAIAAAACABIQBqbmFtZQAABZQAAAC/AAABI/a6b6dwb3N0AAAGVAAAABYAAAAsABcAVHByZXAAAAZsAAAALgAAAC6w8isUeNpjYGBgZACCy9vuzQDR96dqG8NoAFH/BqUAAHjaY2BkLGKcwMDKwMDUxbSHgYGhB0IzPmAwZGQCijKwMjPAACMDEghIc00BUjoM+Uzv/rMxRDHNYjgIUwMA1YMK8gAAeNrNisEJgDAQBGcvIVVYgA/LsB+rsTbLOdcoQt5+HNgbBg4o3JsQF6tLvSuz3WwRLGyZ7u48cn/+jRpvKHyCEY1Z+EzlZ5xNiglzAAAAAbkAIQJ5eNpdUbtOW0EQ3Q0PA4HE2CA52hSzmZAC74U2SCCuLsLIdmM5QtqNXORiXMAHUCBRg/ZrBmgoU6RNg5ALJD6BT4iUmTWJojQ7O7NzzpkzS8qRqndpveepcxZI4W6DZpt+J6TaRYAH0vWNRkbawSMtNjN65bp9v4/BZjTlThpAec9bykNG006gFu25fzI/g+E+/8s8B4OWZpqeWmchPYTAfDNuafA1o1l3/UFfsTpcDQaGFNNU3PXHVMr/luZcbRm2NjOad3AhIj+YBmhqrY1A0586pHo+jmIJcvlsrA0mpqw/yURwYTJd1VQtM752cJ/sLDrYpEpz4AEOsFWegofjowmF9C2JMktDhIPYKjFCxCSHQk45d7I/KVA+koQxb5LSzrhhrYFx5DUwqM3THL7MZlPbW4cwfhFH8N0vxpIOPrKhNkaE2I5YCmACkZBRVb6hxnMviwG51P4zECVgefrtXycCrTs2ES9lbZ1jjBWCnt823/llxd2qXOdFobt3VTVU6ZTmQy9n3+MRT4+F4aCx4M3nfX+jQO0NixsNmgPBkN6N3v/RWnXEVd4LH9lvNbOxFgAAAHjaRY69TsJgFIbP+Vq+pkBJC6VQEgu1pCg11Lb8pJGggzGYuBpNjCbGxMGLcPAyWL2Br3VyZoClK5MX4OKqgwq2k8Ob8+YZ3vMAARMAu2QGHAjQixDccSzw5MOPaO5tHHMkrRBxGc5lOBYo9zOOMeOBYiqdQLFMFN8XCzL7vTfJJQCBi80hzOEWalCHFjDJZVyCTHdZacUgiRropJOSUmY03PdqfdvaplVVC/zR0K+qQtoDf4KDuWFoDb2uSoQ/KuRpZ4fvjYxyxZBI5Wpa5PN7133gYXfziUt8hQIUwYAmnEDMIThMS5joMin923IZXTE5YbIc6ehkBiY6kS4r5UjkwhAiSUxdmiHTlJgWIQxTK/y3Gg5w2x70h6MJBr5WValQQguX58d3z1nW37bXUptnlu2Zja1TEyvTm5eHLOuvg6D92B566Xnquj2AP7pBVl4AAAB42mNgZGBgAGLNHXV74/ltvjLIM78AijDcn6ptDKcV/9sznmCaBeRyMDCBRAFFtws6AAAAeNpjYGRgYJr1354hivEaAxAwnmBgZEAFrABlsgPcAAABbAAhAAAAAAFNAAABDwBXAdYAKQAAACoAKgAqAGAAuAABAAAABQAgAAQAAAAAAAIAAQACABYAAAEAAEYAAAAAeNpNjU2qwjAUhT//FeXhSBwGHLc0GbqALsCBY0ViKdgWou7AZbgAV+D6PNEMXg6598vN4Vxgypke8fSZsEw8YMMh8Yg5z8Rj6a3f3nAm/9/XGXlAyTrxiBWPxGMWvNjhqbhz4UiAna/ul6OgpKPl9u1BDo/BkVOob3VPNFKN1fQ3iZSpWlUnn5Mou/ZWdqHyxuWF2ZpT09TWCazLrM1c4WTaKz1wVVrcGZPiHvY+XOuuNTbX4/8+fil8ANdtJ6YAeNpjYGLAD1iBmJGBiYGfIQgAAUkAbAAAuAH/hbABjQBLsAhQWLEBAY5ZsUYGK1ghsBBZS7AUUlghsIBZHbAGK1xYWbAUKwAA) format(&apos;woff&apos;);}
@font-face{font-family:cmr12;src:url(data:application/x-font-woff;base64,d09GRgABAAAAAAh4AA4AAAAACuwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGRlRNAAABRAAAABoAAAAckuE0/09TLzIAAAFgAAAAQgAAAFZWRF6XY21hcAAAAaQAAABUAAABUgBKEj5jdnQgAAAB+AAAAAYAAAAGAnkAIWZwZ20AAAIAAAABsQAAAmUPtC+nZ2x5ZgAAA7QAAAMOAAADmHt2Mw9oZWFkAAAGxAAAADEAAAA2IEaZPWhoZWEAAAb4AAAAHgAAACQFGAD1aG10eAAABxgAAAAcAAAAHAe0ARRsb2NhAAAHNAAAABIAAAASA0QCIG1heHAAAAdIAAAAIAAAACABJAC4bmFtZQAAB2gAAADBAAABHaYLJ0Vwb3N0AAAILAAAABwAAAAyAEEAJXByZXAAAAhIAAAALgAAAC6w8isUeNpjYGBgZACCy9vuzQDR96dqG8NoAFH/BqUAAHjaY2Bk3Ms4gYGVgYGpk2k3AwNDN4RmvM9gyMgEFGVgZWaAAUYGJBCQ5poCpDQYTJne/mdjiGJ6x/AbpgYA7S0LhgAAeNpjYGBgZoBgGQZGBhDwAfIYwXwWBgMgzQGETEBaE8gz/f8fyNIAskz+//9/+//V/5egusCAkY0BzmUE6WFiQAVIaplZIDQrELOxMwwbAADAYguTAAAAIQJ5AAB42l1Ru05bQRDdDQ8DgcTYIDnaFLOZkALvhTZIIK4uwsh2YzlC2o1c5GJcwAdQIFGD9msGaChTpE2DkAskPoFPiJSZNYmiNDs7s3POmTNLypGqd2m956lzFkjhboNmm34npNpFgAfS9Y1GRtrBIy02M3rlun2/j8FmNOVOGkB5z1vKQ0bTTqAW7bl/Mj+D4T7/yzwHg5Zmmp5aZyE9hMB8M25p8DWjWXf9QV+xOlwNBoYU01Tc9cdUyv+W5lxtGbY2M5p3cCEiP5gGaGqtjUDTnzqkej6OYgly+WysDSamrD/JRHBhMl3VVC0zvnZwn+wsOtikSnPgAQ6wVZ6Ch+OjCYX0LYkyS0OEg9gqMULEJIdCTjl3sj8pUD6ShDFvktLOuGGtgXHkNTCozdMcvsxmU9tbhzB+EUfw3S/Gkg4+sqE2RoTYjlgKYAKRkFFVvqHGcy+LAbnU/jMQJWB5+u1fJwKtOzYRL2VtnWOMFYKe3zbf+WXF3apc50Whu3dVNVTplOZDL2ff4xFPj4XhoLHgzed9f6NA7Q2LGw2aA8GQ3o3e/9FadcRV3gsf2W81s7EWAAAAeNpVUj2ME0cUfm/s9a7P5zuPvfaef26Jd7ldfD7f2rv+W59NuL8EKEAIHZBYAimCSBFREB000XVJlCISUAA60SBRz/oURBcqoMgmRSTT0FNEobkKKRhmdCBENW++Gb3v+973gEAZACvkLkRAhuUAwemP5Cj+5wYx6UV/FCG8hCAiYEnAIzlG/u+PUOAeLVPbo2YZlZdPnpC7b74tk3MABL55K+EmeQUazEEakOUdlhqzaBgUsAr1htS0LZrqtFtN05hBOZZVNZ14bgs36c79qbhcX88dXyt+6cjxPYnewy76D+KSsni6dvPR7s/t4SFFcHQ4R+FTjukxgw8cC017mZgGb52jKUHhuYeRU2Jhv/NHpte7v4ienGnybPL0PdOthwBRqLz9Fx+TO7x/BiywYRNGKkCVzYYjW5y6w6QQ2SGHTY1ZPmT5VGBgVYioYDUw8jQdzEq+D4Gu0vRoKgO+79cbyKWhacT2jaPnclkRw7KtVrNzGN2clsuq8gya+LhS+qrWGBasavFc7UrH+tPcSCZS00e+WE8mE8mNg3jkztluo93burWz1az/cPL25I/O0f6NnRXH83r+zd8Gx7oAwkeRZ/wXuc/PEhyAz6AGoxmhPxmyjIus7DB9zBSXFUOmucJCUNS59kiKaxd6LdOQMVvOqrEqZtueq7VMwxqg1zKpTM0MfhedSiiTf1DWmqp2+XtN9eYuXVrb2yO/zsanJ7X5oU7nCZmn+nAen56Y/ITXhS4CDT7fR+Q29GAFrgHzHGaEzHZYLWQFh/khIw5L8AH3HVYfs8WQLaYCnQ+4HQYDLnKxTtO/J+kcLPQOaj7T6UNSSBhe1xe3djqQ4mL2NZumd/WFelugBRrker4fJAj3BysijkxOrAZfRTlmGja3mqXqfircqIiCw5bNP/F95a88tPe1Ibe2l6vesKpE45+vr67LEQWlmJRYOtU9kC4tbHhbSUVJlfIZWrx48syPl3caZDC7tJSOFkuR3OR5QpGSq2uVrQu1wWorktXUuVxh8+r2+a+3W3+/AxU805wAAHjaY2BkYGAAYtWYm/Pj+W2+MsgzPweKMNyfqm0Mp6X/szKeY3oH5HIwMIFEAT9oCzAAAAB42mNgZGBgeveflSGK8SUDEDCeY2BkQAVsAGuaBBAAAAFrACEAAAAAAU0AAAF8AGIBfAA3AekAKQAbADEAAAAqACoAKgBcAI4A8gE+AcwAAAABAAAACAA8AAQAAAAAAAIAAQACABYAAAEAAHgAAAAAeNpFjUtqwzAURY/jJv0ESkehQ9G5jaWhx8ULyCDDQgiqCfgDcrKALCMLyAKyw145gkrovXOfLu8CL/ySEc+CZz4S53zxk3jJmmvildRdv9nTq/zvszNyzjefiZdsuCRe8caNLZ6WMx17Amx9e+72goaRgdPcgxweg6OkUq/1DvSaW80eOlKhalWdXE6XZhxOzRhab1xZmdoc+mCdunWFtYWrnDw7rQ5MHOfAuCiGsPNhOo6DsaXEfxjzCv4AyHkmAAAAAHjaY2BiwA84gJiRgYmBm4GHQZhBnEECAAKyAGe4Af+FsAGNAEuwCFBYsQEBjlmxRgYrWCGwEFlLsBRSWCGwgFkdsAYrXFhZsBQrAAA=) format(&apos;woff&apos;);}
]]&gt;
&lt;/style&gt;
&lt;g id=&apos;page1&apos; transform=&apos;matrix(1.125 0 0 1.125 0 0)&apos;&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;0&apos; y=&apos;0&apos;&gt;(&lt;/text&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;4.552326&apos; y=&apos;0&apos;&gt;o&lt;/text&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;10.179763&apos; y=&apos;0&apos;&gt;4&lt;/text&gt;
&lt;text font-family=&apos;cmmi12&apos; font-size=&apos;11.955168&apos; x=&apos;16.032754&apos; y=&apos;0&apos;&gt;,&lt;/text&gt;
&lt;text font-family=&apos;cmr12&apos; font-size=&apos;11.955168&apos; x=&apos;21.276912&apos; y=&apos;0&apos;&gt;500)&lt;/text&gt;
&lt;/g&gt;
&lt;/svg&gt;&lt;/span&gt; for a total profit of 11.4.&lt;&#x2F;p&gt;
&lt;p&gt;Perhaps there is some other greedy approach that provides optimal solutions in
all cases. Still, the described greedy approach is useful if we want to quickly
get a possibly good solution. We could also try both the greedy approach and
the scaling approach to raise our confidence level in the generated solution.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;can-we-do-better&quot;&gt;Can we do better?&lt;&#x2F;h2&gt;
&lt;p&gt;We have mostly focused on solving our investment problem using a dynamic
programming approach. Taking a step back, we may ask if this is indeed the best
way to get an optimal solution. Can we approach this problem from a completely
different angle to improve performance?&lt;&#x2F;p&gt;
&lt;p&gt;It turns out that the answer is yes! With some creativity our problem can be
expressed as an
&lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Integer_programming&quot;&gt;integer linear program (ILP)&lt;&#x2F;a&gt;,
for which we have algorithms that work quite efficiently in practice. I plan to
present this approach in more detail in a future post.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;an-ounce-of-action&quot;&gt;An ounce of action...&lt;&#x2F;h2&gt;
&lt;p&gt;If you want to try out the ideas mentioned in this post, I have created a
program implementing all the algorithms and variations. You can find it at:
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;afrantzis&#x2F;invest&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;afrantzis&#x2F;invest&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Enjoy!&lt;&#x2F;p&gt;</content>
  </entry>
  <entry>
    <author><name>Alexandros Frantzis</name></author>
    <title>Metrics for test suite comprehensiveness</title>
    <link href="https://afrantzis.com/posts/metrics-for-test-suite-comprehensiveness/" />
    <updated>2018-11-03T14:00:00Z</updated>
    <id>https://afrantzis.com/posts/metrics-for-test-suite-comprehensiveness/</id>
    <content type="html">&lt;p&gt;In a previous
&lt;a href=&quot;https:&#x2F;&#x2F;afrantzis.com&#x2F;posts&#x2F;on-the-low-adoption-of-automated-testing-in-foss&#x2F;&quot;&gt;post&lt;&#x2F;a&gt; I discussed
a few FOSS specific mentalities and practices that I believe play a role in
discouraging adoption of comprehensive automated testing in FOSS. One of the
points that came up in discussions, is whether the basic premise of the post,
that FOSS projects don&#x27;t typically employ &lt;em&gt;comprehensive&lt;&#x2F;em&gt; automated testing,
including not having any tests at all, is actually true. That&#x27;s a valid
concern, given that the post was motivated by my long-term observations working
on and with FOSS and didn&#x27;t provide any further data. In this post will try to
address this concern.&lt;&#x2F;p&gt;
&lt;p&gt;The main question is how we can measure the comprehensiveness of a test suite.
Code coverage is the standard metric used in the industry and makes intuitive
sense. However, it presents some difficulties for large scale surveys, since
it&#x27;s not computationally cheap to produce and often requires per project
changes or arrangements.&lt;&#x2F;p&gt;
&lt;p&gt;I would like to propose and explore two alternative metrics that are easier to
produce, and are therefore better suited to large scale surveys.&lt;&#x2F;p&gt;
&lt;p&gt;The first metric is the &lt;strong&gt;test commit ratio&lt;&#x2F;strong&gt; of the codebase â the number of
commits that affect test code as a percentage of all commits. Ideally, every
change that adds a feature or fixes a bug in the production code should be
accompanied by a corresponding change in the test code. The more we depart from
this ideal, and, hence, the less often we update the test code, the less
comprehensive our test suite tends to be. This metric is affected by the
project&#x27;s particular commit practices, so some amount of variance is expected
even between projects considered to be well tested.&lt;&#x2F;p&gt;
&lt;p&gt;The second metric is the &lt;strong&gt;test code size ratio&lt;&#x2F;strong&gt; of the codebase â the size of
the test code as a percentage of the size of all the code. It makes sense
intuitively that, typically, more test code will be able to test more
production code. That being said, the size itself does not provide the whole
picture. Depending on the project, a compact test suite may be adequately
comprehensive, or, conversely, large test data files may skew this metric.&lt;&#x2F;p&gt;
&lt;p&gt;Neither of these metrics is failproof, but my hypothesis is that when combined
and aggregated over many projects they can provide a good indication about the
overall trend of the comprehensiveness of test suites, which is the main goal
of this post.&lt;&#x2F;p&gt;
&lt;p&gt;Let&#x27;s see what these metrics give us for FOSS projects. I chose two software
suites that are considered quite prominent in the FOSS world, namely GNOME and
KDE, which together consist of over 1500 projects.&lt;&#x2F;p&gt;
&lt;p&gt;A small number of these projects are not good candidates for this survey,
because, for example, they are empty, or are pure documentation. Although they
are included in the survey, their count is low enough to not affect the overall
trend reported below.&lt;&#x2F;p&gt;
&lt;p&gt;Here is the distribution of the percentages of commits affecting test code in
GNOME and KDE projects:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;afrantzis.com&#x2F;posts&#x2F;metrics-for-test-suite-comprehensiveness&#x2F;kde-gnome-commits.svg&quot; alt=&quot;kde-gnome-commits&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Here is the distribution of the percentages of test code size in GNOME and
KDE projects:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;afrantzis.com&#x2F;posts&#x2F;metrics-for-test-suite-comprehensiveness&#x2F;kde-gnome-sizes.svg&quot; alt=&quot;kde-gnome-sizes&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The first thing to notice is the tall lines in the left part of both graphs.
For the second graph this shows that a very large percentage of the projects,
roughly 55%, have either no tests at all, or so few as to be practically
non-existent. Another interesting observation is the position of the 80%
percentile lines, which show that 80% of the projects have test commit ratios
less than 11.2%, and test code size ratios less than 8.8%.&lt;&#x2F;p&gt;
&lt;p&gt;In other words, out of ten commits that change the code base, only about one
(or fewer) touches the tests in the majority of the projects. Although this
doesn&#x27;t constitute indisputable proof that tests are not comprehensive, it is
nevertheless a big red flag, especially when combined with low test code size
percentages. Each project may have different needs and development patterns,
and these numbers need to be interpreted with care, but as a general trend this
is not encouraging.&lt;&#x2F;p&gt;
&lt;p&gt;On the bright side, there are some projects with higher values in this
distribution. It&#x27;s no surprise that this set consists mainly of core libraries
from these software suites, but does not include many end-user applications.&lt;&#x2F;p&gt;
&lt;p&gt;Going off on a slight tangent, one may argue that the distribution is unfairly
skewed since many of these projects are GUI applications which, according to
conventional wisdom, are not easy to test. However, this argument fails on
multiple fronts. First, it&#x27;s not unfair to include these programs, because we
expect no less of them in terms of quality compared to other types of programs.
They don&#x27;t get a free pass because they have a GUI. In addition, being a GUI
program is not a valid excuse for inadequate testing, because although testing
the UI itself, or the functionality through the UI, may not be easy, there is
typically a lot more we &lt;em&gt;can&lt;&#x2F;em&gt; test. Programs provide some core domain
functionality, which we should be able to test independently if we decouple our
core domain logic from the UI, often by using a different architecture, for
example, the &lt;a href=&quot;https:&#x2F;&#x2F;web.archive.org&#x2F;web&#x2F;20170506170237&#x2F;http:&#x2F;&#x2F;alistair.cockburn.us&#x2F;Hexagonal+architecture&quot;&gt;Hexagonal
Architecture&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;After having seen some general trends, let&#x27;s see some examples of individual
codebases that do better in these metrics:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;afrantzis.com&#x2F;posts&#x2F;metrics-for-test-suite-comprehensiveness&#x2F;misc-test-stats.svg&quot; alt=&quot;misc-test-stats&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This graph displays quite a diverse collection of projects including a
database, graphics libraries, a GUI toolkit, a display compositor, system tools
and even a GUI application. These projects are considered to be relatively well
tested, each in its own particular way, so these higher numbers provide some
evidence that the metrics correlate with test comprehensiveness.&lt;&#x2F;p&gt;
&lt;p&gt;If we accept this correlation, this collection also shows that we can achieve
more comprehensive testing in a wide variety of projects. Depending on project,
the trade-offs we need to make will differ, but it is almost always possible to
do well in this area.&lt;&#x2F;p&gt;
&lt;p&gt;The interpretation of individual results varies with the project, but, in
general, I have found that the test commit ratio is typically a more reliable
indicator of test comprehensiveness, since it&#x27;s less sensitive to test
specifics compared to test code size ratio.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;tools-and-data&quot;&gt;Tools and Data&lt;&#x2F;h2&gt;
&lt;p&gt;In order to produce the data, I developed the
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;afrantzis&#x2F;git-test-annotate&quot;&gt;git-test-annotate&lt;&#x2F;a&gt; program
which produces a list of files and commits from a git repository and marks them
as related to testing or not.&lt;&#x2F;p&gt;
&lt;p&gt;git-test-annotate decides whether a file is a test file by checking for the
string &amp;quot;test&amp;quot; anywhere in the file&#x27;s path within the repository. This is a very
simple heurestic, but works surprisingly well. In order to make test code size
calculation more meaningful, the tool ignores files that are not typically
considered testable sources, for example, non-text files and translations, both
in the production and the test code.&lt;&#x2F;p&gt;
&lt;p&gt;For commit annotations, only mainline commits are taken into account, To check
if a commit affects the tests the tool checks if it changes at least one file
with &amp;quot;test&amp;quot; in its path.&lt;&#x2F;p&gt;
&lt;p&gt;To get the stats for KDE and GNOME I downloaded all their projects from their
github organizations&#x2F;mirrors and ran the git-test-annotate tool on each
project. All the annotated data and a python script to process them are
available in the
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;afrantzis&#x2F;foss-test-annotations&quot;&gt;foss-test-annotations&lt;&#x2F;a&gt;
repository.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;epilogue&quot;&gt;Epilogue&lt;&#x2F;h2&gt;
&lt;p&gt;I hope this post has provided some useful information about the utility of the
proposed metrics, and some evidence that there is ample room for improvement in
automated testing of FOSS projects. It would certainly be interesting to
perform a more rigorous investigation to evaluate how well these metrics
correlate with code coverage.&lt;&#x2F;p&gt;
&lt;p&gt;Before closing, I would like to mention that there are cases where projects are
primarily tested through external test suites. Examples in the FOSS world are
the piglit suite for Mesa, and various tests suites for the Linux kernel. In
such cases, project test comprehensiveness metrics don&#x27;t provide the complete
picture, since they don&#x27;t take into account the external tests. These metrics
are still useful though, because external suites typically perform functional
or conformance testing only, and the metrics can provide information about
internal testing, for example unit testing, done within the projects
themselves.&lt;&#x2F;p&gt;</content>
  </entry>
  <entry>
    <author><name>Alexandros Frantzis</name></author>
    <title>On the low adoption of automated testing in FOSS</title>
    <link href="https://afrantzis.com/posts/on-the-low-adoption-of-automated-testing-in-foss/" />
    <updated>2018-10-15T18:00:00Z</updated>
    <id>https://afrantzis.com/posts/on-the-low-adoption-of-automated-testing-in-foss/</id>
    <content type="html">&lt;p&gt;A few times in the recent past I&#x27;ve been in the unfortunate position of using a
prominent Free and Open Source Software (FOSS) program or library, and running
into issues of such fundamental nature that made me wonder how those issues
even made it into a release.&lt;&#x2F;p&gt;
&lt;p&gt;In all cases, the answer came quickly when I realized that, invariably, the
project involved either didn&#x27;t have a test suite, or, if it did have one, it
was not adequately comprehensive.&lt;&#x2F;p&gt;
&lt;p&gt;I am using the term comprehensive in a very practical, non extreme way. I
understand that it&#x27;s often not feasible to test every possible scenario and
interaction, but, at the very least, a decent test suite should ensure that
under typical circumstances the code delivers all the functionality it promises
to.&lt;&#x2F;p&gt;
&lt;p&gt;For projects of any value and significance, having such a comprehensive
automated test suite is nowadays considered a standard software engineering
practice. Why, then, don&#x27;t we see more prominent, and certainly valuable, FOSS
projects employing this practice, or, when they do, why is it often employed
poorly? &lt;sup class=&quot;footnote-reference&quot;&gt;&lt;a href=&quot;#1&quot;&gt;1&lt;&#x2F;a&gt;&lt;&#x2F;sup&gt;&lt;&#x2F;p&gt;
&lt;p&gt;In this post I will highlight some of the reasons that I believe play a role in
the low adoption of proper automated testing in FOSS projects, and argue why
these reasons may be misguided. I will focus on topics that are especially
relevant from a FOSS perspective, omitting considerations, which, although
important, are not particular to FOSS.&lt;&#x2F;p&gt;
&lt;p&gt;My hope is that by shedding some light on this topic, more FOSS projects will
consider employing an automated test suite.&lt;&#x2F;p&gt;
&lt;p&gt;As you can imagine, I am a strong proponent of automating testing, but this
doesn&#x27;t mean I consider it a silver bullet. I do believe, however, that it is
an indispensable tool in the software engineering toolbox, which should only be
forsaken after careful consideration.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;1-underestimating-the-cost-of-bugs&quot;&gt;1. Underestimating the cost of bugs&lt;&#x2F;h2&gt;
&lt;p&gt;Most FOSS projects, at least those not supported by some commercial entity,
don&#x27;t come with any warranty; it&#x27;s even stated in the various licenses!  The
lack of any formal obligations makes it relatively inexpensive, both in terms
of time and money, to have the occasional bug in the codebase. This means that
there are fewer incentives for the developer to spend extra resources to try to
safeguard against bugs. When bugs come up, the developers can decide at their
own leisure if and when to fix them and when to release the fixed version.
Easy!&lt;&#x2F;p&gt;
&lt;p&gt;At first sight, this may seem like a reasonably pragmatic attitude to have.
After all, if fixing bugs is so cheap, is it worth spending extra resources
trying to prevent them?&lt;&#x2F;p&gt;
&lt;p&gt;Unfortunately, bugs are only cheap for the developer, not for the users who may
depend on the project for important tasks. Users expect the code to work
properly and can get frustrated or disappointed if this is not the case,
regardless of whether there is any formal warranty. This is even more
pronounced when security concerns are involved, for which the cost to users can
be devastating.&lt;&#x2F;p&gt;
&lt;p&gt;Of course, lack of formal obligations doesn&#x27;t mean that there is no driver for
quality in FOSS projects. On the contrary, there is an exceptionally strong
driver: professional pride. In FOSS projects the developers are in the
spotlight and no (decent) developer wants to be associated with a low quality,
bug infested codebase. It&#x27;s just that, due to the mentality stated above, in
many FOSS projects the trade-offs developers make seem to favor a reactive
rather than proactive attitude.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;2-overtrusting-code-reviews&quot;&gt;2. Overtrusting code reviews&lt;&#x2F;h2&gt;
&lt;p&gt;One of the development practices FOSS projects employ ardently is code reviews.
Code reviews happen naturally in FOSS projects, even in small ones, since most
contributors don&#x27;t have commit access to the code repository and the original
author has to approve any contributions. In larger projects there are often
more structured procedures which involve sending patches to a mailing list or
to a dedicated reviewing platform. Unfortunately, in some projects the trust on
code reviews is so great, that other practices, like automated testing, are
forsaken.&lt;&#x2F;p&gt;
&lt;p&gt;There is no question that code reviews are one of the best ways to maintain and
improve the quality of a codebase. They can help ensure that code is designed
properly, it is aligned with the overall architecture and furthers the long
term goals of the project. They also help catch bugs, but only some of them,
some of the time!&lt;&#x2F;p&gt;
&lt;p&gt;The main problem with code reviews is that we, the reviewers, are only human.
We humans are great at creative thought, but we are also great at overlooking
things, occasionally filling in the gaps with our own unicorns-and-rainbows
inspired reality. Another reason is that we tend to focus more on the code
changes at a local level, and less on how the code changes affect the system as
a whole.  This is not an inherent problem with the process itself but rather a
limitation of humans performing the process. When a codebase gets large enough,
it&#x27;s difficult for our brains to keep all the possible states and code paths in
mind and check them mentally, even in a codebase that is properly designed.&lt;&#x2F;p&gt;
&lt;p&gt;In theory, the problem of human limitations is offset by the open nature of the
code.  We even have the so called Linus&#x27;s law which states that &amp;quot;given enough
eyeballs, all bugs are shallow&amp;quot;. Note the clever use of the indeterminate term
&amp;quot;enough&amp;quot;. How many are enough? How about the qualitative aspects of the
&amp;quot;eyeballs&amp;quot;? &lt;&#x2F;p&gt;
&lt;p&gt;The reality is that most contributions to big, successful FOSS projects are
reviewed on average by a couple of people. Some projects are better, most are
worse, but in no case does being FOSS magically lead to a large number of
reviewers tirelessly checking code contributions. This limit in the number of
reviewers also limits the extent to which code reviews can stand as the only
process to ensure quality.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;3-it-s-not-in-the-culture&quot;&gt;3. It&#x27;s not in the culture&lt;&#x2F;h2&gt;
&lt;p&gt;In order to try out a development process in a project, developers first need
to learn about it and be convinced that it will be beneficial. Although there
are many resources, like books and articles, arguing in favor of automated
tests, the main driver for trying new processes is still learning about them
from more experienced developers when working on a project. In the FOSS world
this also takes the form of studying what other projects, especially the
high-profile ones, are doing.&lt;&#x2F;p&gt;
&lt;p&gt;Since comprehensive automated testing is not the norm in FOSS, this creates a
negative network effect. Why should you bother doing automated tests if the
high profile projects, which you consider to be role models, don&#x27;t do it
properly or at all?&lt;&#x2F;p&gt;
&lt;p&gt;Thankfully, the culture is beginning to shift, especially in projects using
technologies in which automated testing is part of the culture of the
technologies themselves. Unfortunately, many of the system-level and middleware
FOSS projects are still living in the non automated test world.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;4-tests-as-an-afterthought&quot;&gt;4. Tests as an afterthought&lt;&#x2F;h2&gt;
&lt;p&gt;Tests as an afterthought is not a situation particular to FOSS projects, but it
is especially relevant to them since the way they spring and grow can
disincentivize the early writing of tests.&lt;&#x2F;p&gt;
&lt;p&gt;Some FOSS projects start as small projects to scratch an itch, without any
plans for significant growth or adoption, so the incentives to have tests at
this stage are limited.&lt;&#x2F;p&gt;
&lt;p&gt;In addition, many projects, even the ones that start with more lofty adoption
goals, follow a &amp;quot;release early, release often&amp;quot; mentality. This mentality has
some benefits, but at the early stages also carries the risk of placing the
focus exclusively on making the project as relevant to the public as possible,
as quickly as possible. From such a perspective, spending the probably limited
resources on tests instead of features seems like a bad use of developer time.&lt;&#x2F;p&gt;
&lt;p&gt;As the project grows and becomes more complex, however, more and more
opportunities for bugs arise. At this point, some projects realize that adding
a test suite would be beneficial for maintaining quality in the long term.
Unfortunately, for many projects, it&#x27;s already too late. The code by now has
become test-unfriendly and significant effort is needed to change it.&lt;&#x2F;p&gt;
&lt;p&gt;The final effect is that many projects remain without an automated test suite,
or, in the best case, with a poor one.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;5-missing-ci-infrastructure&quot;&gt;5. Missing CI infrastructure&lt;&#x2F;h2&gt;
&lt;p&gt;Automated testing delivers the most value if it is combined with a CI service
that runs the tests automatically for each commit or merge proposal. Until
recently, access to such services was difficult to get for a reasonably low
effort and cost. Developers either had to set up and host CI themselves, or pay
for a commercial service, thus requiring resources which unsponsored FOSS
projects were unlikely to be able to afford.&lt;&#x2F;p&gt;
&lt;p&gt;Nowadays, it&#x27;s far easier to find and use free CI services, with most major
code hosting platforms supporting them. Hopefully, with time, this reason will
completely cease being a factor in the lack of automated testing adoption.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;6-not-the-hacker-way&quot;&gt;6. Not the hacker way&lt;&#x2F;h2&gt;
&lt;p&gt;The FOSS movement originated from the hacker culture and still has strong ties
to it. In the minds of some, the processes around software testing are too
enterprise-y, too 9-to-5, perceived as completely contrary to the creative and
playful nature of hacking. &lt;&#x2F;p&gt;
&lt;p&gt;My argument against this line of thought is that the hacker values technical
excellence very highly, and, automated testing, as a tool that helps achieve
such excellence, can not be inconsistent with the hacker way.&lt;&#x2F;p&gt;
&lt;p&gt;Some pseudo-hackers may also argue that their skills are so refined that their
code doesn&#x27;t require testing. When we are talking about a codebase of any
significant size, I consider this attitude to be a sign of inexperience and
immaturity rather than a testament of superior skills.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;epilogue&quot;&gt;Epilogue&lt;&#x2F;h2&gt;
&lt;p&gt;I hope this post will serve as a good starting point for a discussion about the
reasons which discourage FOSS projects from adopting a comprehensive automated
test suite. Identifying both valid concerns and misconceptions is the first
step in convincing both fledging and mature FOSS projects to embrace automated
testing, which will hopefully lead to an improvement in the overall quality of
FOSS.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;sup class=&quot;footnote-reference&quot;&gt;&lt;a href=&quot;#1&quot;&gt;1&lt;&#x2F;a&gt;&lt;&#x2F;sup&gt; See my &lt;a href=&quot;https:&#x2F;&#x2F;afrantzis.com&#x2F;posts&#x2F;metrics-for-test-suite-comprehensiveness&#x2F;&quot;&gt;follow-up
post&lt;&#x2F;a&gt; for some data
supporting the premise that FOSS projects don&#x27;t typically employ
&lt;em&gt;comprehensive&lt;&#x2F;em&gt; automated testing,&lt;&#x2F;p&gt;</content>
  </entry>
  <entry>
    <author><name>Alexandros Frantzis</name></author>
    <title>Bless Hex Editor 0.6.1</title>
    <link href="https://afrantzis.com/posts/bless-0-6-1/" />
    <updated>2018-09-19T00:00:00Z</updated>
    <id>https://afrantzis.com/posts/bless-0-6-1/</id>
    <content type="html">&lt;p&gt;A long time ago, on a computer far, far away... well, actually, 14 years ago,
on a computer that is still around somewhere in the basement, I wrote the first
lines of source code for what would become the Bless hex editor.&lt;&#x2F;p&gt;
&lt;p&gt;For my initial experiments I used C++ with the gtkmm bindings, but C++
compilation times were so appallingly slow on my feeble computer, that I
decided to give the relatively young &lt;a href=&quot;https:&#x2F;&#x2F;www.mono-project.com&quot;&gt;Mono&lt;&#x2F;a&gt;
framework a try. The development experience was much better, so I continued
with Mono and Gtk#. For revision control, I started out with
&lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;GNU_arch&quot;&gt;tla&lt;&#x2F;a&gt; (remember that?), but eventually
settled on bzr.&lt;&#x2F;p&gt;
&lt;p&gt;Development continued at a steady pace until 2009, when life&#x27;s responsibilities
got in the way, and left me with little time to work on the project. A few
attempts were made by other people to revive Bless after that, but,
unfortunately, they also seem to have stagnated.  The project had been inactive
for almost 8 years when the gna.org hosting site closed down in 2017 and pulled
the official Bless page and bzr repository with it into the abyss. &lt;&#x2F;p&gt;
&lt;p&gt;Despite the lack of development and maintenance, Bless remained surprisingly
functional through the years. I, and many others it seems, have kept using it,
and, naturally, a few bugs have been uncovered during this time.&lt;&#x2F;p&gt;
&lt;p&gt;I recently found some time to bring the project back to life, although, I
should warn, this does not imply any intention to resume feature development on
it. My free time is still scarce, so the best I can do is try to maintain it
and accept contributions. The project&#x27;s new official home is at
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;afrantzis&#x2F;bless&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;afrantzis&#x2F;bless&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;To mark the start of this new era, I have released &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;afrantzis&#x2F;bless&#x2F;releases&quot;&gt;Bless
0.6.1&lt;&#x2F;a&gt;, containing fixes for many
of the major issues I could find reports for. Enjoy!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Important Note&lt;&#x2F;strong&gt;: There seems to be a bug in some versions of Mono that
manifests as a crash when selecting bytes. The backtrace looks like:&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;free(): invalid pointer
Stacktrace:

  at &amp;lt;unknown&amp;gt; &amp;lt;0xffffffff&amp;gt;
  at (wrapper managed-to-native) GLib.SList.g_free (intptr) &amp;lt;0x0005f&amp;gt;
  at GLib.ListBase.Empty () &amp;lt;0x0013c&amp;gt;
  at GLib.ListBase.Dispose (bool) &amp;lt;0x0000f&amp;gt;
  at GLib.ListBase.Finalize () &amp;lt;0x0001d&amp;gt;
  at (wrapper runtime-invoke) object.runtime_invoke_virtual_void__this__ (object,intptr,intptr,intptr) &amp;lt;0x00068&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Searching for this backtrace you can find various reports of other Mono
programs also affected by this bug. At the time of writing, the mono packages
in Debian and Ubuntu (4.6.2) exhibit this problem. If you are affected, the
solution is to update to a newer version of Mono, e.g., from
&lt;a href=&quot;https:&#x2F;&#x2F;www.mono-project.com&#x2F;download&#x2F;stable&#x2F;&quot;&gt;https:&#x2F;&#x2F;www.mono-project.com&#x2F;download&#x2F;stable&#x2F;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;</content>
  </entry>
  <entry>
    <author><name>Alexandros Frantzis</name></author>
    <title>git-c2b: An alternative workflow for Chromium&#x27;s Gerrit</title>
    <link href="https://afrantzis.com/posts/git-commits-to-branches/" />
    <updated>2018-09-14T00:00:00Z</updated>
    <id>https://afrantzis.com/posts/git-commits-to-branches/</id>
    <content type="html">&lt;p&gt;There are two main options to handle reviews in git. The first option is to
treat commits as the unit of review. In this &lt;em&gt;commit-based flow&lt;&#x2F;em&gt;, authors work on
a branch with multiple commits and submit them for review, either by pushing
the branch or by creating a patch series for these commits. Typically, each
commit is expected to be functional and to be reviewable independently.&lt;&#x2F;p&gt;
&lt;p&gt;Here is a feature branch in a commit-based flow, before and after changing D to
D&#x27; with an interactive rebase (E and F are also changed by the rebase, to E&#x27;
and F&#x27;):&lt;&#x2F;p&gt;
&lt;div class=&quot;nowrap&quot;&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;A-B-C       [master]       A-B-C          [master] 
     \                          \                  
      D-E-F [feature]            D&amp;#39;-E&amp;#39;-F&amp;#39; [feature] or [feature-v2]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;div&gt;
&lt;p&gt;The second option is to treat branches as the unit of review.  In this
&lt;em&gt;branch-based flow&lt;&#x2F;em&gt;, authors work on multiple dependent branches and submit them
for review by pushing them to the review system. The individual commits in each
branch don&#x27;t matter; only the final state of each branch is taken into account.
Some review systems call this the &amp;quot;squash&amp;quot; mode.&lt;&#x2F;p&gt;
&lt;p&gt;Here are some dependent branches for a feature in a branch-based flow, before
and after updating feature-1 by adding D&#x27;, and then updating the other branches
by merging (we could rebase, instead, if we don&#x27;t care about retaining
history):&lt;&#x2F;p&gt;
&lt;div class=&quot;nowrap&quot;&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;A-B-C       [master]       A-B-C           [master]
     \                          \
      D     [feature-1]          D--D&amp;#39;     [feature-1]
       \                          \  \
        E   [feature-2]            E--E&amp;#39;   [feature-2]
         \                          \  \
          F [feature-3]              F--F&amp;#39; [feature-3]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;div&gt;
&lt;p&gt;Some people prefer to work this way, so they can update their submission
without losing the history of each individual change (e.g., keep both D and
D&#x27;). This reason is unconvincing, however, since one can easily preserve
history in a commit-based flow, too, by checking out a different branch (e.g.,
&#x27;feature-v2&#x27;) to work on.&lt;&#x2F;p&gt;
&lt;p&gt;Personally, I find branch-based flows a pain to work with. Their main fault is
the distracting and annoying user experience when dealing with multiple
dependent changes. Setting up and maintaining the dependent branches during
updates is far from straightforward. What would normally be a simple &#x27;git
rebase -i&#x27;, now turns into a fight to create and maintain separate dependent
branches.  There are tools that can help (git-rebase-update), but they are no
match for the simplicity and efficiency of rebasing interactively in a single
branch.&lt;&#x2F;p&gt;
&lt;p&gt;Chromium previously used the Rietveld review system, which uses branches as its
unit of review. Recently Chromium switched to Gerrit, but, instead of sticking
with Gerrit&#x27;s native commit-based flow, it adapted its tools to provide a
branch-based flow similar to Rietveld&#x27;s. Interacting with Chromium&#x27;s review
system is done mainly through the git-cl tool which evolved over the years to
support both flows. At this point, however, the commit-based flow is
essentially unsupported and broken for many use cases. Here is what working on
Chromium typically looks like:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; class=&quot;language-sh z-code&quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt; Create and work on first branch&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; git checkout&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;b&lt;&#x2F;span&gt; feature&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;t&lt;&#x2F;span&gt; origin&#x2F;master&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; git commit&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;m&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-single z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;Feature&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;...&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; git commit&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;m&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-single z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;Update to feature&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;...&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt; Create and work on second (dependent) branch&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; git checkout&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;b&lt;&#x2F;span&gt; feature-next&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;t&lt;&#x2F;span&gt; feature&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; git commit&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;m&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-single z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;Feature next&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;...&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; git commit&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;m&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-single z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;Update to feature next&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;...&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt; Upload the changes for review&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; git checkout feature&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; git cl upload&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; --&lt;&#x2F;span&gt;dependencies&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;I wrote the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;afrantzis&#x2F;git-c2b&quot;&gt;git-c2b&lt;&#x2F;a&gt;
(commits-to-branches) tool to be able to maintain a commit-based git flow even
when working with branch-based review systems, such as Chromium&#x27;s Gerrit. The
idea, and the tool itself, is simple but effective. It allows me to work as
usual in a single branch, splitting changes into commits and amending them as I
like. Just before submitting, I run git-c2b to produce separate dependent
branches for each commit. If the branches already exist they are updated
without losing any upstream metadata.&lt;&#x2F;p&gt;
&lt;p&gt;This is my current workflow with Chromium and git-c2b:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; class=&quot;language-sh z-code&quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt; Create patchset in branch&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; git checkout&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;b&lt;&#x2F;span&gt; feature&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;t&lt;&#x2F;span&gt; origin&#x2F;master&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; git commit&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;m&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-single z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;Change 1&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;...&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; git commit&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;m&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-single z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;Change 2&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;...&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt; Use git-c2b to create branches feature-1, feature-2, ... for each commit&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; git c2b&lt;&#x2F;span&gt;
&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt; Upload the changes for review&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; git checkout feature-1&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; git cl upload&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; --&lt;&#x2F;span&gt;dependencies&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;To update the patches and dependent CLs:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; class=&quot;language-sh z-code&quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; git checkout feature&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; git rebase&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;i&lt;&#x2F;span&gt; origin&#x2F;master&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;...&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt; Use c2b to update the feature-1, feature-2, ... branches&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; git c2b&lt;&#x2F;span&gt;
&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt; Upload the changes for review&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; git checkout feature-1&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; git cl upload&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; --&lt;&#x2F;span&gt;dependencies&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;When changes start to get merged, I typically need to reupload only the commits
that are left. For example, if the changes from the first two commits get
merged, I will rebase on top of master, and the previously third
commit will now be the first. You can tell git-c2b to start updating branches
starting from a particular number using the -n flag:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; class=&quot;language-sh z-code&quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt; The first two changes got merged, get new master and rebase on top of it&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; git fetch&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; git checkout feature&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; git rebase&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;i&lt;&#x2F;span&gt; origin&#x2F;master&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;...&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt; At this point the first two commits will be gone, so tell c2b to update&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt; feature-3 from the first commit, feature-4 from the second and so on.&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; git c2b&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;n&lt;&#x2F;span&gt; 3&lt;&#x2F;span&gt;
&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt; Upload the remaining changes for review&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; git checkout feature-3&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; git cl upload&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; --&lt;&#x2F;span&gt;dependencies&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Although the main driver for implementing
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;afrantzis&#x2F;git-c2b&quot;&gt;git-c2b&lt;&#x2F;a&gt; was improving my Chromium
workflow, there is nothing Chromium-specific about this tool. It can be used as
a general solution to create dependent branches from commits in any branch.
Enjoy!&lt;&#x2F;p&gt;</content>
  </entry>
  <entry>
    <author><name>Alexandros Frantzis</name></author>
    <title>Running Chromium with Ozone-GBM on a GNU&#x2F;Linux desktop system</title>
    <link href="https://afrantzis.com/posts/running-chromium-with-ozone-gbm-on-a-gnu-linux-desktop-system/" />
    <updated>2017-11-24T00:00:00Z</updated>
    <id>https://afrantzis.com/posts/running-chromium-with-ozone-gbm-on-a-gnu-linux-desktop-system/</id>
    <content type="html">&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;chromium.googlesource.com&#x2F;chromium&#x2F;src&#x2F;+&#x2F;lkcr&#x2F;docs&#x2F;ozone_overview.md&quot;&gt;Ozone&lt;&#x2F;a&gt;
is Chromium&#x27;s next-gen platform abstraction layer for graphics and input.  When
developing either Ozone itself or an application that uses Ozone, it is often
beneficial to be able to run the code on the development machine, which is
usually a typical GNU&#x2F;Linux desktop system, since doing so speeds up the
development cycle.&lt;&#x2F;p&gt;
&lt;p&gt;The X11 backend for Ozone works without much trouble on a Linux desktop system.
However, getting the DRM&#x2F;GBM backend to run on such a system, which I recently
needed to do as part of my work at &lt;a href=&quot;https:&#x2F;&#x2F;www.collabora.com&#x2F;&quot;&gt;Collabora&lt;&#x2F;a&gt;,
turned out to be significantly less straightforward. In this guide I will
describe all the steps that are required to run Chromium with Ozone-GBM on a
typical GNU&#x2F;Linux desktop system.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;building-chromium&quot;&gt;Building Chromium&lt;&#x2F;h2&gt;
&lt;p&gt;The Chromium developer documentation provides detailed &lt;a href=&quot;https:&#x2F;&#x2F;chromium.googlesource.com&#x2F;chromium&#x2F;src&#x2F;+&#x2F;master&#x2F;docs&#x2F;linux_build_instructions.md&quot;&gt;build instructions for
Linux&lt;&#x2F;a&gt;.
For this guide, we have to ensure that we enable Ozone and that the target OS
for the build is &amp;quot;chromeos&amp;quot;:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; class=&quot;language-sh z-code&quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; gn gen out&#x2F;OzoneChromeOS&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; gn args&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; --&lt;&#x2F;span&gt;args&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-option z-shell&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-single z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;use_ozone=true target_os=&amp;quot;chromeos&amp;quot;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; out&#x2F;OzoneChromeOS&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; ninja&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;C&lt;&#x2F;span&gt; out&#x2F;OzoneChromeOS chrome&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;building-a-functional-minigbm&quot;&gt;Building a functional minigbm&lt;&#x2F;h2&gt;
&lt;p&gt;Ozone-GBM uses the GBM API to create buffers. However, it doesn&#x27;t use Mesa&#x27;s
GBM implementation, but ships its own in the form of the minigbm library. The
Chromium source code contains a copy of the library under third_party, but uses
it only for building and testing purposes without enabling any of the minigbm
hardware drivers.&lt;&#x2F;p&gt;
&lt;p&gt;In order to run Ozone-GBM on real hardware we need to create a build of minigbm
that supports our target GPU. For the purposes of this guide, the simplest way
to provide a functional minigbm is to build it independently and provide it at
runtime to Chromium using LD_LIBRARY_PATH.&lt;&#x2F;p&gt;
&lt;p&gt;First we need to get the minigbm source code with:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; class=&quot;language-sh z-code&quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; git clone https:&#x2F;&#x2F;chromium.googlesource.com&#x2F;chromiumos&#x2F;platform&#x2F;minigbm&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;minigbm depends on libdrm, so we have to ensure that we have the development
files for the libdrm library and the vendor specific extensions. On a
Debian&#x2F;Ubuntu system we can get everything we need by installing the libdrm-dev
package:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; class=&quot;language-sh z-code&quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; sudo apt install libdrm-dev&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;We can now build minigbm with the correct flags to ensure the proper GPU driver is supported:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; class=&quot;language-sh z-code&quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; make CPPFLAGS=&lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;-DDRV_I915&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; DRV_I915=1&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Note that we need to provide the driver flag both as a preprocessor definition and a Make variable. Other driver flags for common desktop GPUs are DRV_RADEON and DRV_AMDGPU (but see below for amdgpu).&lt;&#x2F;p&gt;
&lt;p&gt;Finally we need to create a link with the proper file name so that chrome can find the library:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; class=&quot;language-sh z-code&quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; ln&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;s&lt;&#x2F;span&gt; libminigbm.so.1.0.0 libminigbm.so&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;building-minigbm-with-amdgpu-support&quot;&gt;Building minigbm with amdgpu support&lt;&#x2F;h2&gt;
&lt;p&gt;The amdgpu driver for minigbm depends on the elusive amdgpuaddr library. This
library is part of mesa, but it&#x27;s not installed, and thus not provided in any
package on most distributions.&lt;&#x2F;p&gt;
&lt;p&gt;To get it we need to build Mesa ourselves and extract it from the built
objects. An easy way to get all the dependencies and build Mesa with all the
required flags is to use the distribution&#x27;s build method. On a Debian&#x2F;Ubuntu
system this translates to a command sequence like:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; class=&quot;language-sh z-code&quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; sudo apt build-dep mesa&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; apt source mesa&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; cd &lt;span class=&quot;z-keyword z-control z-regexp z-set z-begin z-shell&quot;&gt;[&lt;&#x2F;span&gt;mesa&lt;span class=&quot;z-keyword z-operator z-word z-shell&quot;&gt;-&lt;&#x2F;span&gt;dir&lt;span class=&quot;z-keyword z-control z-regexp z-set z-end z-shell&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-logical z-and z-shell&quot;&gt;&amp;amp;&amp;amp;&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-readwrite z-assignment z-shell&quot;&gt;DEB_BUILD_OPTIONS&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-shell&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-unquoted z-shell&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;parallel=&lt;span class=&quot;z-meta z-group z-expansion z-command z-parens z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-shell&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;nproc&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-shell&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;debian&#x2F;rules&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; build&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;After the build is done, we have to copy (and rename) the addrlib library and the required headers to the minigbm directory:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; class=&quot;language-sh z-code&quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; cp &lt;span class=&quot;z-keyword z-control z-regexp z-set z-begin z-shell&quot;&gt;[&lt;&#x2F;span&gt;mesa&lt;span class=&quot;z-keyword z-operator z-word z-shell&quot;&gt;-&lt;&#x2F;span&gt;dir&lt;span class=&quot;z-keyword z-control z-regexp z-set z-end z-shell&quot;&gt;]&lt;&#x2F;span&gt;&#x2F;build&#x2F;src&#x2F;amd&#x2F;addrlib&#x2F;.libs&#x2F;libamdgpu_addrlib.a &lt;span class=&quot;z-keyword z-control z-regexp z-set z-begin z-shell&quot;&gt;[&lt;&#x2F;span&gt;minigbm&lt;span class=&quot;z-keyword z-operator z-word z-shell&quot;&gt;-&lt;&#x2F;span&gt;dir&lt;span class=&quot;z-keyword z-control z-regexp z-set z-end z-shell&quot;&gt;]&lt;&#x2F;span&gt;&#x2F;libamdgpuaddr.a&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; cp &lt;span class=&quot;z-keyword z-control z-regexp z-set z-begin z-shell&quot;&gt;[&lt;&#x2F;span&gt;mesa&lt;span class=&quot;z-keyword z-operator z-word z-shell&quot;&gt;-&lt;&#x2F;span&gt;dir&lt;span class=&quot;z-keyword z-control z-regexp z-set z-end z-shell&quot;&gt;]&lt;&#x2F;span&gt;&#x2F;src&#x2F;amd&#x2F;addrlib&#x2F;&lt;span class=&quot;z-keyword z-operator z-regexp z-quantifier z-shell&quot;&gt;*&lt;&#x2F;span&gt;.h &lt;span class=&quot;z-keyword z-control z-regexp z-set z-begin z-shell&quot;&gt;[&lt;&#x2F;span&gt;minigbm&lt;span class=&quot;z-keyword z-operator z-word z-shell&quot;&gt;-&lt;&#x2F;span&gt;dir&lt;span class=&quot;z-keyword z-control z-regexp z-set z-end z-shell&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Finally, we are able build minigbm with amdgpu support with:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; class=&quot;language-sh z-code&quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; make CPPFLAGS=&lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;-DDRV_AMDGPU&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; DRV_AMDGPU=1 LDFLAGS=&lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;-L.&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; ln&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;s&lt;&#x2F;span&gt; libminigbm.so.1.0.0 libminigbm.so&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;running-chromium&quot;&gt;Running Chromium&lt;&#x2F;h2&gt;
&lt;p&gt;We are almost there, but one last detail remains. If we try to run Chromium we
will get an error message informing us that EGL initialization failed. The
reason is that, when using Ozone-GBM, the EGLDisplay is created using
EGL_DEFAULT_DISPLAY as the native display argument, under the assumption that
the EGL implementation knows to interpret this as a request for a so-called
surfaceless platform. However, Mesa doesn&#x27;t recognize this hint. We need to
explicitly tell Mesa to use the surfaceless platform with the EGL_PLATFORM
environment variable.&lt;&#x2F;p&gt;
&lt;p&gt;The following command line brings all the pieces of the puzzle together,
allowing us to run Chromium with Ozone-GBM on a typical GNU&#x2F;Linux desktop:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; class=&quot;language-sh z-code&quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; sudo LD_LIBRARY_PATH=&lt;span class=&quot;z-keyword z-control z-regexp z-set z-begin z-shell&quot;&gt;[&lt;&#x2F;span&gt;minigbm&lt;span class=&quot;z-keyword z-operator z-word z-shell&quot;&gt;-&lt;&#x2F;span&gt;dir&lt;span class=&quot;z-keyword z-control z-regexp z-set z-end z-shell&quot;&gt;]&lt;&#x2F;span&gt; EGL_PLATFORM=surfaceless out&#x2F;OzoneChromeOS&#x2F;chrome&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; --&lt;&#x2F;span&gt;ozone-platform&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-option z-shell&quot;&gt;=&lt;&#x2F;span&gt;gbm&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; --&lt;&#x2F;span&gt;no-sandbox&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; --&lt;&#x2F;span&gt;mash&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;strong&gt;[Update March 2018]&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;To run Chromium on a typical GNU&#x2F;Linux desktop we must now use the following command:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; class=&quot;language-sh z-code&quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; sudo LD_LIBRARY_PATH=&lt;span class=&quot;z-keyword z-control z-regexp z-set z-begin z-shell&quot;&gt;[&lt;&#x2F;span&gt;minigbm&lt;span class=&quot;z-keyword z-operator z-word z-shell&quot;&gt;-&lt;&#x2F;span&gt;dir&lt;span class=&quot;z-keyword z-control z-regexp z-set z-end z-shell&quot;&gt;]&lt;&#x2F;span&gt; EGL_PLATFORM=surfaceless out&#x2F;OzoneChromeOS&#x2F;chrome&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; --&lt;&#x2F;span&gt;ozone-platform&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-option z-shell&quot;&gt;=&lt;&#x2F;span&gt;gbm&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; --&lt;&#x2F;span&gt;no-sandbox&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; --&lt;&#x2F;span&gt;force-system-compositor-mode&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Enjoy!&lt;&#x2F;p&gt;</content>
  </entry>
  <entry>
    <author><name>Alexandros Frantzis</name></author>
    <title>Converting emails from top-posted to bottom-posted</title>
    <link href="https://afrantzis.com/posts/converting-emails-from-top-posted-to-bottom-posted/" />
    <updated>2017-10-29T00:00:00Z</updated>
    <id>https://afrantzis.com/posts/converting-emails-from-top-posted-to-bottom-posted/</id>
    <content type="html">&lt;p&gt;I have been an adherent of
&lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Posting_style&quot;&gt;bottom-posting&lt;&#x2F;a&gt;, or, to be more
precise, of interleaved-posting for as long as I can remember. I don&#x27;t recall
why I selected this posting style when first I started sending emails â I guess
it just felt more intuitive and natural.&lt;&#x2F;p&gt;
&lt;p&gt;These days I find top-posted messages so annoying to deal with, that I manually
convert them to bottom-posted before replying. Unfortunately, many modern email
clients and web interfaces promote a top-posting style, so I end up performing
such conversions more often than I would like. A few weeks ago I received an 8
level deep top-posted email and decided that it is time for me to welcome our
automated email conversion overlords. The result is the
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;afrantzis&#x2F;top2bottom&quot;&gt;top2bottom&lt;&#x2F;a&gt; command-line tool.&lt;&#x2F;p&gt;
&lt;p&gt;There are many forms of top-posting, but the one I have to deal with the most,
and therefore the one that the top2bottom tool handles, looks like:&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;2017-10-28 B wrote:
&amp;gt; bbbbb
&amp;gt;
&amp;gt; bbbbb
&amp;gt;
&amp;gt; 2017-10-28 A wrote:
&amp;gt;
&amp;gt;&amp;gt; aaaaaa
&amp;gt;&amp;gt; aaaaaa
&amp;gt;&amp;gt;
&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The number of quote-prefix markers (&amp;gt;) in the beginning of each line indicates
the &lt;strong&gt;quote-depth&lt;&#x2F;strong&gt; of that line.&lt;&#x2F;p&gt;
&lt;p&gt;This form consists of two kinds of line blocks:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;attribution blocks&lt;&#x2F;strong&gt;, denoted by &lt;strong&gt;aD&lt;&#x2F;strong&gt;, where D is the quote-depth of the block&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;body blocks&lt;&#x2F;strong&gt;, denoted by &lt;strong&gt;bD&lt;&#x2F;strong&gt;, where D is the quote-depth of the block&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;In a top-posted message the blocks are interleaved:&lt;&#x2F;p&gt;
&lt;p&gt;b0, a0, b1, a1, b2, a2, ...&lt;&#x2F;p&gt;
&lt;p&gt;To convert such a message to bottom-posted we need to move all attribution
blocks to the top in quote-depth order, followed by all body blocks in reverse
quote-depth order:&lt;&#x2F;p&gt;
&lt;p&gt;a0, a1, a2, ..., b2, b1, b0&lt;&#x2F;p&gt;
&lt;p&gt;The block reordering operation can be easily implemented by sorting with an
appropriate comparison function. The more interesting and non-trivial part is
figuring out which lines belong to which block. To do this, we first need to
define some terms:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;An &lt;strong&gt;empty line&lt;&#x2F;strong&gt; is a line that has no message content, although it may
have one or more quote-prefix markers (&amp;gt;), i.e., a non-zero quote-depth.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;A &lt;strong&gt;paragraph&lt;&#x2F;strong&gt; is a sequence of non-empty, consecutive lines of the same
quote-depth.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Now we can provide precise definitions for attribution and body blocks:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;An attribution block of quote-depth D is the sequence of all consecutive
lines of quote-depth D which start from the beginning of the last
paragraph before a quote-depth increase from D to D+1, and end at the
last line before the quote-depth increase.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;A body block of quote-depth D is the sequence of all lines (not
necessarily consecutive) of quote-depth D that do not belong to an
attribution block.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Based on these definitions, I experimented with a number of  classification
algorithms. For my first attempt I used a chain of functional operations to
process the message, but I found it unintuitive to express the intricacies of
block detection in this manner. My next attempt was based on a finite state
machine and performed a single pass of the message from bottom to top. The
finite state machine approach worked, but it was more complex and difficult to
reason about than I would like. Finally, I developed an algorithm that I found
to be both simpler and more obviously correct than the alternatives.&lt;&#x2F;p&gt;
&lt;p&gt;The algorithm works by processing lines from top to bottom, marking them as
body lines of their respective quote-depth. When a quote-depth increase is
detected, and before processing the line with the increased quote-depth, the
algorithm backtracks until it reaches the beginning of a paragraph, marking all
lines it visits as attribution lines. It then continues processing from the
point it stopped before backtracking.&lt;&#x2F;p&gt;
&lt;p&gt;The empty line (if any) just before an attribution block needs special care. It
is an artifact of top-posting and serves to separate the preceding message body
from the attribution lines. In top2bottom I opted to repurpose this line as an
extra space after a quote-depth change in the bottom-posted output. This works
well because top-posted replies usually don&#x27;t start with an empty line, so
adding this line makes the bottom-posted version look better. In algorithmic
terms, this line is marked as belonging to a special &lt;strong&gt;before-body block&lt;&#x2F;strong&gt; (denoted
by &lt;strong&gt;bD-&lt;&#x2F;strong&gt;), which is placed just before the &lt;strong&gt;bD&lt;&#x2F;strong&gt; block in the final output.&lt;&#x2F;p&gt;
&lt;p&gt;Here is the algorithm in action:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;afrantzis.com&#x2F;posts&#x2F;converting-emails-from-top-posted-to-bottom-posted&#x2F;top2bottom-algorithm.gif&quot; alt=&quot;top2bottom-algorithm&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The algorithm works well if the input is top-posted, but what happens if the
input has some other form? It turns out that the algorithm works well for two
additional classes of messages that are not strictly top-posted and are often
encountered in the wild. The first class consists of messages that end with a
cascade of empty lines of decreasing quote-depth, which is a result of
(inadvertently) adding empty lines to the end of a message when replying. The
example used above to show the algorithm in action actually belongs to this
class. The second class comprises messages that started as (strictly)
bottom-posted, but for which the replies changed to top-posted at some point.&lt;&#x2F;p&gt;
&lt;p&gt;There is, however, a third class of messages that is also frequently seen, but
the  algorithm I described so far cannot handle without some enhancements. This
class is composed of messages that started as interleaved-posted and then
turned to top-posted. To handle this class we need a way to detect the section
of the message that is interleaved-posted and ensure that we don&#x27;t reorder its
parts, but rather treat it as an indivisible whole.&lt;&#x2F;p&gt;
&lt;p&gt;Fortunately, there is an easy way to decide which lines of the message belong
to the interleaved section. The quote-depth curve of interleaved messages has a
characteristic pattern of multiple peaks (lines with the highest quote-depth
locally) and valleys (lines with lower quote-depths between successive peaks).
In a deeply interleaved message the base quote-depth of the interleaved section
is the quote-depth of the lowest valley. All lines with quote-depth equal to or
higher than the base quote-depth belong to the interleaved section of the
message. In the following example, the lowest (and only) valley has a
quote-depth of 2, so we treat the marked part of the message, which consists of
all lines with quote-depth 2 or more, as indivisible:&lt;&#x2F;p&gt;
&lt;div class=&quot;nowrap&quot;&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;2017-10-28 C wrote:      0
&amp;gt; ccccc                    1
&amp;gt;                          1
&amp;gt; 2017-10-28 B wrote:      1      ___
&amp;gt;&amp;gt; 2017-10-28 A wrote:       2     |
&amp;gt;&amp;gt;&amp;gt; aaaaa                      3   |
&amp;gt;&amp;gt;&amp;gt; aaaaa                      3   |
&amp;gt;&amp;gt;                           2     |
&amp;gt;&amp;gt; bbbbb                     2 ----|
&amp;gt;&amp;gt;                           2     |
&amp;gt;&amp;gt;&amp;gt; aaaaa                      3   |
&amp;gt;&amp;gt;                           2     |
&amp;gt;&amp;gt; bbbbb                     2    _|_
&amp;gt;                          1
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;div&gt;
&lt;p&gt;The latest version of top2bottom implements the aforementioned enhancement,
and, with it, can handle almost all of the top-posted messages of this form
that I have encountered. The few messages which top2bottom refuses to convert
are either badly formatted or use a different form of top-posting.&lt;&#x2F;p&gt;
&lt;p&gt;I have been using top2bottom for a few weeks now and I am very pleased with it.
I am using Vim for composing and replying to emails, so my preferred way to
convert emails is by using the Vim filter command: :%!top2bottom. I hope you
find top2bottom useful!&lt;&#x2F;p&gt;
&lt;p&gt;A closing note: while doing some research for this post I came across another,
much older program that also performs top to bottom email conversion, and
which, unsurprisingly, is also named top2bottom. The code for it was posted in
an old Red Hat list
&lt;a href=&quot;https:&#x2F;&#x2F;www.redhat.com&#x2F;archives&#x2F;rhl-list&#x2F;2006-October&#x2F;msg01391.html&quot;&gt;post&lt;&#x2F;a&gt;. I
have tried it on a few sample top-posted emails, but it doesn&#x27;t seem to work
well, at least not for the kinds of emails that I get. YMMV.&lt;&#x2F;p&gt;</content>
  </entry>
  <entry>
    <author><name>Alexandros Frantzis</name></author>
    <title>A Pixel Format Guide (to the galaxy) â Update</title>
    <link href="https://afrantzis.com/posts/a-pixel-format-guide-to-the-galaxy-update/" />
    <updated>2017-10-05T00:00:00Z</updated>
    <id>https://afrantzis.com/posts/a-pixel-format-guide-to-the-galaxy-update/</id>
    <content type="html">&lt;p&gt;A few weeks ago I introduced the &lt;a href=&quot;https:&#x2F;&#x2F;afrantzis.github.io&#x2F;pixel-format-guide&#x2F;&quot;&gt;Pixel Format
Guide&lt;&#x2F;a&gt; â a collection of
documents and the accompanying
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;afrantzis&#x2F;pixel-format-guide&quot;&gt;pfg&lt;&#x2F;a&gt; tool which aim to help
people navigate the wilderness of pixel format definitions. In this post I will
list the most exciting improvements that have been made since the original
announcement.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;new-pixel-format-families&quot;&gt;New pixel format families&lt;&#x2F;h2&gt;
&lt;p&gt;The core mission of the Pixel Format Guide is to become a comprehensive
reference for pixel format definitions. Therefore, it&#x27;s no surprise that I have
put a lot of effort into adding more pixel format families. At the time the
previous post was written, the Pixel Format Guide supported 3 formats: Vulkan,
OpenGL and Wayland-DRM. Since then, I have added the Cairo, DirectFB, Pixman,
SDL2 and V4L2 pixel format families, bringing the total number of supported
families to 8 and the total number of supported pixel format definitions to
459!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;bit-indices&quot;&gt;Bit indices&lt;&#x2F;h2&gt;
&lt;p&gt;While working with packed pixel formats, I noticed that the ordering of the
component bits is sometimes difficult to figure out. This happens especially
when the bits of a component are split between multiple bytes, like, for
example, in an RGB565 16-bit format:&lt;&#x2F;p&gt;
&lt;div class=&quot;nowrap&quot;&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Format:               SDL_PIXELFORMAT_RGB565
Described as:         Native 16-bit type
Native type:          M              L
                      RRRRRGGGGGGBBBBB
Memory little-endian: 0        1
                      M      L M      L
                      GGGBBBBB RRRRRGGG
Memory big-endian:    0        1
                      M      L M      L
                      RRRRRGGG GGGBBBBB
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;div&gt;
&lt;p&gt;Each byte in memory holds 3 bits of the G component, but it&#x27;s not easy to tell
exactly which bits are in each byte. To fix this, the latest version of the pfg
tool introduces component bit indices. Every component bit is now accompanied
by its index, making the bit order crystal clear:&lt;&#x2F;p&gt;
&lt;div class=&quot;nowrap&quot;&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Format:               SDL_PIXELFORMAT_RGB565
Described as:         Native 16-bit type
Native type:          M                              L
                      RâRâRâRâRâGâGâGâGâGâGâBâBâBâBâBâ
Memory little-endian: 0                1
                      M              L M              L
                      GâGâGâBâBâBâBâBâ RâRâRâRâRâGâGâGâ
Memory big-endian:    0                1
                      M              L M              L
                      RâRâRâRâRâGâGâGâ GâGâGâBâBâBâBâBâ
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;div&gt;
&lt;p&gt;If you prefer not to see the bit indices you can use the --hide-bit-indices
flag.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;discovery-of-compatible-pixel-formats&quot;&gt;Discovery of compatible pixel formats&lt;&#x2F;h2&gt;
&lt;p&gt;The inspiration for the Pixel Format Guide was a series of frustrating
experiences trying to manually match pixel formats with other, compatible pixel
formats from different families. The latest version of the pfg tool finally
includes support for automating such operations, in the form of the
find-compatible command.&lt;&#x2F;p&gt;
&lt;p&gt;With the find-compatible command, discovering which OpenGL formats are
compatible with the PIXMAN_b5g6r5 format is now as easy as:&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$ python3 -m pfg find-compatible PIXMAN_b5g6r5 opengl
Format: PIXMAN_b5g6r5
Is compatible on all systems with:
        GL_RGB+GL_UNSIGNED_SHORT_5_6_5_REV
        GL_RGB_INTEGER+GL_UNSIGNED_SHORT_5_6_5_REV
Is compatible on little-endian systems with:
Is compatible on big-endian systems with
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Similarly, to find out which SDL2 formats are compatible with the
VK_FORMAT_R8G8B8A8_UNORM format, you can run:&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$ python3 -m pfg find-compatible VK_FORMAT_R8G8B8A8_UNORM sdl2
Format: VK_FORMAT_R8G8B8A8_UNORM
Is compatible on all systems with:
        SDL_PIXELFORMAT_RGBA32
Is compatible on little-endian systems with:
        SDL_PIXELFORMAT_ABGR8888
Is compatible on big-endian systems with:
        SDL_PIXELFORMAT_RGBA8888
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;listing-supported-pixel-formats-and-families&quot;&gt;Listing supported pixel formats and families&lt;&#x2F;h2&gt;
&lt;p&gt;The pfg tool now supports the list-formats and list-families commands. The
former lists the supported pixel formats for the specified family, while the
latter lists all the supported pixel format families. These commands can be
very useful when writing scripts involving the pfg tool.&lt;&#x2F;p&gt;
&lt;p&gt;As an example, with the list-formats command you can find which OpenGL formats
are compatible with each Cairo format by running:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; class=&quot;language-sh z-code&quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; for f in &lt;span class=&quot;z-meta z-group z-expansion z-command z-parens z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-shell&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;python3&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;m&lt;&#x2F;span&gt; pfg list-formats cairo&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-shell&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-logical z-continue z-shell&quot;&gt;;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-control z-loop z-do z-shell&quot;&gt;do&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;python3&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;m&lt;&#x2F;span&gt; pfg find-compatible &lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-shell&quot;&gt;f&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; opengl&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-logical z-continue z-shell&quot;&gt;;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-control z-loop z-end z-shell&quot;&gt;done&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;I hope you enjoy the improvements!&lt;&#x2F;p&gt;
&lt;p&gt;Once again, I would like to thank my employer, Collabora, for sponsoring my
work on the Pixel Format Guide as an R&amp;amp;D project.&lt;&#x2F;p&gt;</content>
  </entry>
  <entry>
    <author><name>Alexandros Frantzis</name></author>
    <title>A Pixel Format Guide (to the galaxy)</title>
    <link href="https://afrantzis.com/posts/a-pixel-format-guide-to-the-galaxy/" />
    <updated>2017-10-05T00:00:00Z</updated>
    <id>https://afrantzis.com/posts/a-pixel-format-guide-to-the-galaxy/</id>
    <content type="html">&lt;p&gt;I spend a lot of my time in various corners of the graphics domain of the FOSS
world. In my time there I frequently have to deal with a variety of pixel
formats definitions. Every graphics API and project has its own way of
describing and naming pixel formats â the different flavors used by Vulkan,
OpenGL, Mesa, Gallium, Wayland, DRM, GBM, Pixman, Mir and SDL are just a few of
the beasts one can encounter in the graphics wilderness.&lt;&#x2F;p&gt;
&lt;p&gt;It could be my aging memory, but, for some reason, I never seem to be able to
remember how to interpret all the different formats. &amp;quot;How are the components
laid out in memory?&amp;quot;, &amp;quot;Does it matter if the system is little-endian or
big-endian?&amp;quot; are some of the questions I often have to look up, with varying
degrees of success.&lt;&#x2F;p&gt;
&lt;p&gt;It turns out that I am not the only one facing this issue. It&#x27;s not uncommon
for developers to misinterpret pixel formats, often with entertaining and
psychedelic effects. If you are lucky you may catch a glimpse of uncanny blue
foxes running under alien red skies.&lt;&#x2F;p&gt;
&lt;p&gt;Despite the potential for entertainment, this problem is a constant cause of
frustration for developers. I finally decided to do something about it â I have
started the Pixel Format Guide.&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;afrantzis.github.io&#x2F;pixel-format-guide&#x2F;&quot;&gt;Pixel Format Guide&lt;&#x2F;a&gt;
consists of two components. The first is the guide itself â a collection of
documents describing how to interpret the pixel format definitions of various
APIs and projects.&lt;&#x2F;p&gt;
&lt;p&gt;The second component is the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;afrantzis&#x2F;pixel-format-guide&quot;&gt;pfg
tool&lt;&#x2F;a&gt; which performs the
interpretation of pixel formats automatically. Did you ever wonder how the
GL_RGBA with GL_UNSIGNED_INT_2_10_10_10_REV &lt;a href=&quot;https:&#x2F;&#x2F;afrantzis.github.io&#x2F;pixel-format-guide&#x2F;opengl.html&quot;&gt;OpenGL pixel
format&lt;&#x2F;a&gt; is laid out
in memory?  Now it&#x27;s easy to figure it out:&lt;&#x2F;p&gt;
&lt;div class=&quot;nowrap&quot;&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$ python3 -m pfg describe GL_RGBA+GL_UNSIGNED_INT_2_10_10_10_REV
Format:               GL_RGBA+GL_UNSIGNED_INT_2_10_10_10_REV
Described as:         Native 32-bit type
Native type:          M                              L
                      AABBBBBBBBBBGGGGGGGGGGRRRRRRRRRR
Memory little-endian: 0        1        2        3
                      M      L M      L M      L M      L
                      RRRRRRRR GGGGGGRR BBBBGGGG AABBBBBB
Memory big-endian:    0        1        2        3
                      M      L M      L M      L M      L
                      AABBBBBB BBBBGGGG GGGGGGRR RRRRRRRR
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;div&gt;
&lt;p&gt;How about the WL_DRM_FORMAT_ARGB8888 &lt;a href=&quot;https:&#x2F;&#x2F;afrantzis.github.io&#x2F;pixel-format-guide&#x2F;wayland_drm.html&quot;&gt;Wayland-DRM
format&lt;&#x2F;a&gt;?
Again, it&#x27;s easy:&lt;&#x2F;p&gt;
&lt;div class=&quot;nowrap&quot;&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$ python3 -m pfg describe WL_DRM_FORMAT_ARGB8888
Format: WL_DRM_FORMAT_ARGB8888
Described as: Bytes in memory
Memory little-endian: 0        1        2        3
                      M      L M      L M      L M      L
                      BBBBBBBB GGGGGGGG RRRRRRRR AAAAAAAA
Memory big-endian:    0        1        2        3
                      M      L M      L M      L M      L
                      BBBBBBBB GGGGGGGG RRRRRRRR AAAAAAAA
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;div&gt;
&lt;p&gt;The Pixel Format Guide is a work in progress. It currently supports many
Vulkan, OpenGL and Wayland(-DRM) formats, and it&#x27;s constantly growing. This
project was conceived as a collaborative endeavor, not a one-person effort (but
I&#x27;ll do my best), so, if you are familiar with a pixel format family, please
consider contributing to the guide and the python tool!&lt;&#x2F;p&gt;
&lt;p&gt;Before signing off I would like to thank my employer,
&lt;a href=&quot;https:&#x2F;&#x2F;www.collabora.com&quot;&gt;Collabora&lt;&#x2F;a&gt;, for sponsoring my work on the Pixel
Format Guide as an R&amp;amp;D project.&lt;&#x2F;p&gt;</content>
  </entry>
  <entry>
    <author><name>Alexandros Frantzis</name></author>
    <title>vkmark: More than a Vulkan benchmark</title>
    <link href="https://afrantzis.com/posts/vkmark-more-than-a-vulkan-benchmark/" />
    <updated>2017-07-12T00:00:00Z</updated>
    <id>https://afrantzis.com/posts/vkmark-more-than-a-vulkan-benchmark/</id>
    <content type="html">&lt;p&gt;Ever since &lt;a href=&quot;https:&#x2F;&#x2F;www.khronos.org&#x2F;vulkan&#x2F;&quot;&gt;Vulkan&lt;&#x2F;a&gt; was announced a few years
ago, the idea of creating a Vulkan benchmarking tool in the spirit of
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;glmark2&#x2F;glmark2&quot;&gt;glmark2&lt;&#x2F;a&gt; had been floating in my mind.
Recently, thanks to my employer, &lt;a href=&quot;https:&#x2F;&#x2F;www.collabora.com&#x2F;&quot;&gt;Collabora&lt;&#x2F;a&gt;, this
idea has materialized! The result is the vkmark Vulkan benchmark, hosted on
github:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vkmark&#x2F;vkmark&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;vkmark&#x2F;vkmark&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Like its glmark2 sibling project, vkmark&#x27;s goals are different from the goals
of big, monolithic and usually proprietary benchmarks. Instead of providing a
single, complex benchmark, vkmark aims to provide an extensible suite of
targeted, configurable benchmarking scenes. Most scenes exercise specific
Vulkan features or usage patterns (e.g., desktop 2.5D scenarios), although we
are also happy to have more complex, visually intriguing scenes.&lt;&#x2F;p&gt;
&lt;p&gt;Benchmarking scenes can be configured with options that affect various aspects
of their rendering. We hope that the ease with which developers can use
different options will make it painless to perform targeted tests and
eventually provide best practices advice.&lt;&#x2F;p&gt;
&lt;p&gt;A few years ago we were pleasantly surprised to learn that developers were
using glmark2 as a testing tool for driver development, especially in free (as
in freedom) software projects. This is a goal that we want to actively pursue
for vkmark, too. The flexible benchmarking approach is a natural fit for this
kind of development; the developer can start with getting the simple scenes
working and then, as the driver matures, move to scenes that use more advanced
features. vkmark has already proved useful in this regard, being an valuable
testing aid for my own experiments in the Mesa Vulkan WSI implementation.&lt;&#x2F;p&gt;
&lt;p&gt;With vkmark we also want to be on the cutting edge of software development
practices and tools. vkmark is a modern, C++14 codebase, using the
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;KhronosGroup&#x2F;Vulkan-Hpp&quot;&gt;vulkan-hpp&lt;&#x2F;a&gt; bindings, the
&lt;a href=&quot;http:&#x2F;&#x2F;mesonbuild.com&#x2F;&quot;&gt;Meson&lt;&#x2F;a&gt; build system and the
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;philsquared&#x2F;Catch&quot;&gt;Catch&lt;&#x2F;a&gt; test framework. To ensure a high
quality codebase, the core of vkmark is developed using test-driven
development.&lt;&#x2F;p&gt;
&lt;p&gt;It is still early days, but vkmark already has support for X11, Wayland and
DRM&#x2F;KMS, and provides two simple scenes: a &amp;quot;clear&amp;quot; scene, and a &amp;quot;cube&amp;quot; scene
that renders a simple colored cube based on the
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;krh&#x2F;vkcube&quot;&gt;vkcube&lt;&#x2F;a&gt; example (which is itself based on
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;robclark&#x2F;kmscube&quot;&gt;kmscube&lt;&#x2F;a&gt;). The future looks bright!&lt;&#x2F;p&gt;
&lt;p&gt;We are looking forward to getting more feedback on vkmark and, of course,
contributions are always welcome!&lt;&#x2F;p&gt;</content>
  </entry>
  <entry>
    <author><name>Alexandros Frantzis</name></author>
    <title>C vs C++11: C++ goes to eleven!</title>
    <link href="https://afrantzis.com/posts/c-vs-cpp11-cpp-goes-to-eleven/" />
    <updated>2012-09-17T00:00:00Z</updated>
    <id>https://afrantzis.com/posts/c-vs-cpp11-cpp-goes-to-eleven/</id>
    <content type="html">&lt;p&gt;One of the top web results when searching for &amp;quot;C vs C++&amp;quot; is Jakob Ãstergaard&#x27;s
&lt;a href=&quot;http:&#x2F;&#x2F;unthought.net&#x2F;c++&#x2F;c_vs_c++.html&quot;&gt;article&lt;&#x2F;a&gt; of the same name. In his
article, Jakob presents the challenge of writing a program that counts the
unique words in a text file, and tries out various versions he got or created
himself. Although Jakob&#x27;s text can&#x27;t really be considered a comprehensive
comparison of C vs C++, it does provide some insight into how powerful C++ can
be &amp;quot;out of the box&amp;quot;.&lt;&#x2F;p&gt;
&lt;p&gt;The original C++ implementation given by Jakob is:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;cpp&quot; class=&quot;language-cpp z-code&quot;&gt;&lt;code class=&quot;language-cpp&quot; data-lang=&quot;cpp&quot;&gt;&lt;span class=&quot;z-source z-c++&quot;&gt;&lt;span class=&quot;z-meta z-preprocessor z-include z-c++&quot;&gt;&lt;span class=&quot;z-keyword z-control z-import z-include z-c++&quot;&gt;#include&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-other z-lt-gt z-include z-c++&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-c++&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;set&lt;span class=&quot;z-punctuation z-definition z-string z-end z-c++&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-preprocessor z-include z-c++&quot;&gt;&lt;span class=&quot;z-keyword z-control z-import z-include z-c++&quot;&gt;#include&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-other z-lt-gt z-include z-c++&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-c++&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;string&lt;span class=&quot;z-punctuation z-definition z-string z-end z-c++&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-preprocessor z-include z-c++&quot;&gt;&lt;span class=&quot;z-keyword z-control z-import z-include z-c++&quot;&gt;#include&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-other z-lt-gt z-include z-c++&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-c++&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;iostream&lt;span class=&quot;z-punctuation z-definition z-string z-end z-c++&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;
&lt;span class=&quot;z-storage z-type z-c&quot;&gt;int&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function z-c++&quot;&gt;&lt;span class=&quot;z-meta z-toc-list z-full-identifier z-c++&quot;&gt;&lt;span class=&quot;z-entity z-name z-function z-c++&quot;&gt;main&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-c++&quot;&gt;&lt;span class=&quot;z-meta z-group z-c++&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-c++&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-c++&quot;&gt;&lt;span class=&quot;z-meta z-group z-c++&quot;&gt;&lt;span class=&quot;z-storage z-type z-c&quot;&gt;int&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-c++&quot;&gt;argc&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-storage z-type z-c&quot;&gt;char&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-c&quot;&gt;*&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-c&quot;&gt;*&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-c++&quot;&gt;argv&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-c++&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-c++&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-c++&quot;&gt;&lt;span class=&quot;z-meta z-block z-c++&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-c++&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-c++&quot;&gt;&lt;span class=&quot;z-meta z-block z-c++&quot;&gt;
    &lt;span class=&quot;z-comment z-line z-double-slash z-c&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-c&quot;&gt;&#x2F;&#x2F;&lt;&#x2F;span&gt; Declare and Initialize some variables
&lt;&#x2F;span&gt;    std&lt;span class=&quot;z-punctuation z-accessor z-double-colon z-c++&quot;&gt;::&lt;&#x2F;span&gt;string word&lt;span class=&quot;z-punctuation z-terminator z-c++&quot;&gt;;&lt;&#x2F;span&gt;
    std&lt;span class=&quot;z-punctuation z-accessor z-double-colon z-c++&quot;&gt;::&lt;&#x2F;span&gt;set&lt;span class=&quot;z-punctuation z-section z-generic z-begin z-c++&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;std&lt;span class=&quot;z-punctuation z-accessor z-double-colon z-c++&quot;&gt;::&lt;&#x2F;span&gt;string&lt;span class=&quot;z-punctuation z-section z-generic z-end z-c++&quot;&gt;&amp;gt;&lt;&#x2F;span&gt; wordcount&lt;span class=&quot;z-punctuation z-terminator z-c++&quot;&gt;;&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-comment z-line z-double-slash z-c&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-c&quot;&gt;&#x2F;&#x2F;&lt;&#x2F;span&gt; Read words and insert in set
&lt;&#x2F;span&gt;    &lt;span class=&quot;z-keyword z-control z-c++&quot;&gt;while&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-group z-c++&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-c++&quot;&gt;(&lt;&#x2F;span&gt;std&lt;span class=&quot;z-punctuation z-accessor z-double-colon z-c++&quot;&gt;::&lt;&#x2F;span&gt;cin &lt;span class=&quot;z-keyword z-operator z-arithmetic z-c&quot;&gt;&amp;gt;&amp;gt;&lt;&#x2F;span&gt; word&lt;span class=&quot;z-punctuation z-section z-group z-end z-c++&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; wordcount&lt;span class=&quot;z-punctuation z-accessor z-dot z-c++&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-method-call z-c++&quot;&gt;&lt;span class=&quot;z-variable z-function z-member z-c++&quot;&gt;insert&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-c++&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-c++&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-method-call z-c++&quot;&gt;&lt;span class=&quot;z-meta z-group z-c++&quot;&gt;word&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-method-call z-c++&quot;&gt;&lt;span class=&quot;z-meta z-group z-c++&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-c++&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-c++&quot;&gt;;&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-comment z-line z-double-slash z-c&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-c&quot;&gt;&#x2F;&#x2F;&lt;&#x2F;span&gt; Print the result
&lt;&#x2F;span&gt;    std&lt;span class=&quot;z-punctuation z-accessor z-double-colon z-c++&quot;&gt;::&lt;&#x2F;span&gt;cout &lt;span class=&quot;z-keyword z-operator z-arithmetic z-c&quot;&gt;&amp;lt;&amp;lt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-c&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-c&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Words: &lt;span class=&quot;z-punctuation z-definition z-string z-end z-c&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-arithmetic z-c&quot;&gt;&amp;lt;&amp;lt;&lt;&#x2F;span&gt; wordcount&lt;span class=&quot;z-punctuation z-accessor z-dot z-c++&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-method-call z-c++&quot;&gt;&lt;span class=&quot;z-variable z-function z-member z-c++&quot;&gt;size&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-c++&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-c++&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-method-call z-c++&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-method-call z-c++&quot;&gt;&lt;span class=&quot;z-meta z-group z-c++&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-c++&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-arithmetic z-c&quot;&gt;&amp;lt;&amp;lt;&lt;&#x2F;span&gt; std&lt;span class=&quot;z-punctuation z-accessor z-double-colon z-c++&quot;&gt;::&lt;&#x2F;span&gt;endl&lt;span class=&quot;z-punctuation z-terminator z-c++&quot;&gt;;&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-keyword z-control z-flow z-return z-c++&quot;&gt;return&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-c++&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-c++&quot;&gt;&lt;span class=&quot;z-meta z-block z-c++&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-c++&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Unfortunately, the concise and highly readable solution presented above leaves
a lot to be desired on the performance front. So, I set out to improve it,
trying to also take advantage of any relevant C++11 features. My updated C++11
version is:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;cpp&quot; class=&quot;language-cpp z-code&quot;&gt;&lt;code class=&quot;language-cpp&quot; data-lang=&quot;cpp&quot;&gt;&lt;span class=&quot;z-source z-c++&quot;&gt;&lt;span class=&quot;z-meta z-preprocessor z-include z-c++&quot;&gt;&lt;span class=&quot;z-keyword z-control z-import z-include z-c++&quot;&gt;#include&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-other z-lt-gt z-include z-c++&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-c++&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;unordered_set&lt;span class=&quot;z-punctuation z-definition z-string z-end z-c++&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-preprocessor z-include z-c++&quot;&gt;&lt;span class=&quot;z-keyword z-control z-import z-include z-c++&quot;&gt;#include&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-other z-lt-gt z-include z-c++&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-c++&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;string&lt;span class=&quot;z-punctuation z-definition z-string z-end z-c++&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-preprocessor z-include z-c++&quot;&gt;&lt;span class=&quot;z-keyword z-control z-import z-include z-c++&quot;&gt;#include&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-other z-lt-gt z-include z-c++&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-c++&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;iostream&lt;span class=&quot;z-punctuation z-definition z-string z-end z-c++&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;
&lt;span class=&quot;z-storage z-type z-c&quot;&gt;int&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function z-c++&quot;&gt;&lt;span class=&quot;z-meta z-toc-list z-full-identifier z-c++&quot;&gt;&lt;span class=&quot;z-entity z-name z-function z-c++&quot;&gt;main&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-c++&quot;&gt;&lt;span class=&quot;z-meta z-group z-c++&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-c++&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-c++&quot;&gt;&lt;span class=&quot;z-meta z-group z-c++&quot;&gt;&lt;span class=&quot;z-storage z-type z-c&quot;&gt;int&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-c++&quot;&gt;argc&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-storage z-type z-c&quot;&gt;char&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-c&quot;&gt;*&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-c&quot;&gt;*&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-c++&quot;&gt;argv&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-c++&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-c++&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-c++&quot;&gt;&lt;span class=&quot;z-meta z-block z-c++&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-c++&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-c++&quot;&gt;&lt;span class=&quot;z-meta z-block z-c++&quot;&gt;
    &lt;span class=&quot;z-comment z-line z-double-slash z-c&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-c&quot;&gt;&#x2F;&#x2F;&lt;&#x2F;span&gt; Declare and Initialize some variables
&lt;&#x2F;span&gt;    std&lt;span class=&quot;z-punctuation z-accessor z-double-colon z-c++&quot;&gt;::&lt;&#x2F;span&gt;string word&lt;span class=&quot;z-punctuation z-terminator z-c++&quot;&gt;;&lt;&#x2F;span&gt;
    std&lt;span class=&quot;z-punctuation z-accessor z-double-colon z-c++&quot;&gt;::&lt;&#x2F;span&gt;unordered_set&lt;span class=&quot;z-punctuation z-section z-generic z-begin z-c++&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;std&lt;span class=&quot;z-punctuation z-accessor z-double-colon z-c++&quot;&gt;::&lt;&#x2F;span&gt;string&lt;span class=&quot;z-punctuation z-section z-generic z-end z-c++&quot;&gt;&amp;gt;&lt;&#x2F;span&gt; wordcount&lt;span class=&quot;z-punctuation z-terminator z-c++&quot;&gt;;&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-meta z-function-call z-c++&quot;&gt;std&lt;span class=&quot;z-punctuation z-accessor z-double-colon z-c++&quot;&gt;::&lt;&#x2F;span&gt;ios_base&lt;span class=&quot;z-punctuation z-accessor z-double-colon z-c++&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-function z-c++&quot;&gt;sync_with_stdio&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-c++&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-c++&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-c++&quot;&gt;&lt;span class=&quot;z-meta z-group z-c++&quot;&gt;&lt;span class=&quot;z-constant z-language z-c&quot;&gt;false&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-c++&quot;&gt;&lt;span class=&quot;z-meta z-group z-c++&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-c++&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-c++&quot;&gt;;&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-comment z-line z-double-slash z-c&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-c&quot;&gt;&#x2F;&#x2F;&lt;&#x2F;span&gt; Read words and insert in unordered_set
&lt;&#x2F;span&gt;    &lt;span class=&quot;z-keyword z-control z-c++&quot;&gt;while&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-group z-c++&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-c++&quot;&gt;(&lt;&#x2F;span&gt;std&lt;span class=&quot;z-punctuation z-accessor z-double-colon z-c++&quot;&gt;::&lt;&#x2F;span&gt;cin &lt;span class=&quot;z-keyword z-operator z-arithmetic z-c&quot;&gt;&amp;gt;&amp;gt;&lt;&#x2F;span&gt; word&lt;span class=&quot;z-punctuation z-section z-group z-end z-c++&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; wordcount&lt;span class=&quot;z-punctuation z-accessor z-dot z-c++&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-method-call z-c++&quot;&gt;&lt;span class=&quot;z-variable z-function z-member z-c++&quot;&gt;insert&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-c++&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-c++&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-method-call z-c++&quot;&gt;&lt;span class=&quot;z-meta z-group z-c++&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-c++&quot;&gt;std&lt;span class=&quot;z-punctuation z-accessor z-double-colon z-c++&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-function z-c++&quot;&gt;move&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-c++&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-c++&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-c++&quot;&gt;&lt;span class=&quot;z-meta z-group z-c++&quot;&gt;word&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-c++&quot;&gt;&lt;span class=&quot;z-meta z-group z-c++&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-c++&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-method-call z-c++&quot;&gt;&lt;span class=&quot;z-meta z-group z-c++&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-c++&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-c++&quot;&gt;;&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-comment z-line z-double-slash z-c&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-c&quot;&gt;&#x2F;&#x2F;&lt;&#x2F;span&gt; Print the result
&lt;&#x2F;span&gt;    std&lt;span class=&quot;z-punctuation z-accessor z-double-colon z-c++&quot;&gt;::&lt;&#x2F;span&gt;cout &lt;span class=&quot;z-keyword z-operator z-arithmetic z-c&quot;&gt;&amp;lt;&amp;lt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-c&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-c&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Words: &lt;span class=&quot;z-punctuation z-definition z-string z-end z-c&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-arithmetic z-c&quot;&gt;&amp;lt;&amp;lt;&lt;&#x2F;span&gt; wordcount&lt;span class=&quot;z-punctuation z-accessor z-dot z-c++&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-method-call z-c++&quot;&gt;&lt;span class=&quot;z-variable z-function z-member z-c++&quot;&gt;size&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-c++&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-c++&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-method-call z-c++&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-method-call z-c++&quot;&gt;&lt;span class=&quot;z-meta z-group z-c++&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-c++&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-arithmetic z-c&quot;&gt;&amp;lt;&amp;lt;&lt;&#x2F;span&gt; std&lt;span class=&quot;z-punctuation z-accessor z-double-colon z-c++&quot;&gt;::&lt;&#x2F;span&gt;endl&lt;span class=&quot;z-punctuation z-terminator z-c++&quot;&gt;;&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-keyword z-control z-flow z-return z-c++&quot;&gt;return&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-c++&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-c++&quot;&gt;&lt;span class=&quot;z-meta z-block z-c++&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-c++&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;There are three changes in the new code. The first change is using the new
C++11 std::unordered_set container instead of std::set. Internally,
unordered_set uses a hash table instead of balanced tree, losing support for
item ordering, but gaining significantly in average performance.&lt;&#x2F;p&gt;
&lt;p&gt;The second change is actually an old C++ option, not particular to C++11:
disabling stdio synchronization. This is a big performance booster for
intensive I&#x2F;O. It is highly recommended to turn synchronization off, unless you
really, &lt;strong&gt;really&lt;&#x2F;strong&gt; need to use the C and C++ standard streams at the same time.&lt;&#x2F;p&gt;
&lt;p&gt;The third change is explicitly taking advantage of C++11 move semantics
(std::move()). In my benchmarks the change didn&#x27;t have a noticable impact,
perhaps because the compiler was eliding the copy anyway, or because the
strings were small enough that a copy and a move weren&#x27;t significantly
different in performance.&lt;&#x2F;p&gt;
&lt;p&gt;To test the different versions, I created a series of word files containing 4
million words each, each one consisting of a different number of unique words.
The tested versions include all the versions from Jakob&#x27;s article, plus the new
cpp4, c2, and python versions.&lt;&#x2F;p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Name&lt;&#x2F;th&gt;&lt;th&gt;Description&lt;&#x2F;th&gt;&lt;th&gt;SLOC&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;cpp1&lt;&#x2F;td&gt;&lt;td&gt;Original C++ version&lt;&#x2F;td&gt;&lt;td&gt;11&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;cpp1-fixed&lt;&#x2F;td&gt;&lt;td&gt;âFixedâ C++ version (using scanf)&lt;&#x2F;td&gt;&lt;td&gt;12&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;cpp2&lt;&#x2F;td&gt;&lt;td&gt;C++ version of c1&lt;&#x2F;td&gt;&lt;td&gt;100&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;cpp3&lt;&#x2F;td&gt;&lt;td&gt;Jakobâs Ego-booster&lt;&#x2F;td&gt;&lt;td&gt;83&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;cpp4&lt;&#x2F;td&gt;&lt;td&gt;C++11 version&lt;&#x2F;td&gt;&lt;td&gt;12&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;c1&lt;&#x2F;td&gt;&lt;td&gt;C hash&lt;&#x2F;td&gt;&lt;td&gt;71&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;c2&lt;&#x2F;td&gt;&lt;td&gt;Glib hash&lt;&#x2F;td&gt;&lt;td&gt;12&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;py&lt;&#x2F;td&gt;&lt;td&gt;Python&lt;&#x2F;td&gt;&lt;td&gt;5&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;p&gt;Here are the run time results:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;afrantzis.com&#x2F;posts&#x2F;c-vs-cpp11-cpp-goes-to-eleven&#x2F;cvscpp-time-results.png&quot; alt=&quot;cvscpp-time-results&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Here are the results for the maximum RSS:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;afrantzis.com&#x2F;posts&#x2F;c-vs-cpp11-cpp-goes-to-eleven&#x2F;cvscpp-mem-results.png&quot; alt=&quot;cvscpp-mem-results&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The updated C++11 version (cpp4) is about 5 times (!) faster than the original,
partly because of using unordered_set, and partly because of not synchronizing
with stdio. The memory usage has decreased by a decent amount, too! For lower
numbers of unique words the performance results are somewhat mixed, but, as the
number of unique words grows, the C++11 and Glib versions become clear winners.
C++ goes to 11, indeed!&lt;&#x2F;p&gt;
&lt;p&gt;Based on the results above, here are some tips:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Rolling your own implementation is probably not worth it.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;In C++11, when you don&#x27;t need item ordering, you are probably better off
using the unordered variants of the containers (but don&#x27;t forget to
benchmark).&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;If you use standard streams, and don&#x27;t need to be in sync with stdio
streams, be sure to turn synchronization off. If you need to be in sync,
try hard to stop needing it!&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;If you just want to quickly create something having decent performance,
consider using python.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;You can find the code and scripts used for benchmarking
&lt;a href=&quot;https:&#x2F;&#x2F;code.launchpad.net&#x2F;~afrantzis&#x2F;+junk&#x2F;cvscpp&#x2F;&quot;&gt;here&lt;&#x2F;a&gt;. To create the
sample text files (&#x27;make texts&#x27;) you need to have an extracted copy of
&lt;a href=&quot;http:&#x2F;&#x2F;wordlist.aspell.net&#x2F;&quot;&gt;scowl&lt;&#x2F;a&gt; in the project directory.&lt;&#x2F;p&gt;</content>
  </entry>
  <entry>
    <author><name>Alexandros Frantzis</name></author>
    <title>Changing gdm&#x2F;lightdm user login settings programatically</title>
    <link href="https://afrantzis.com/posts/changing-gdm-lightdm-user-login-settings-programmatically/" />
    <updated>2012-06-11T00:00:00Z</updated>
    <id>https://afrantzis.com/posts/changing-gdm-lightdm-user-login-settings-programmatically/</id>
    <content type="html">&lt;p&gt;Recently, as part of the automated testing efforts at Linaro, I needed to
programmatically change the default X session for a user. It used to be the
case that editing &lt;code&gt;~&#x2F;.dmrc&lt;&#x2F;code&gt; was enough to achieve this. Display managers (DMs),
such as gdm and lightdm, would read the contents of the &lt;code&gt;~&#x2F;.dmrc&lt;&#x2F;code&gt; at login time
to decide which language and X session to use (among other settings). When a
user changed a setting through the GUI, the DM would write the new settings to
&lt;code&gt;~&#x2F;.dmrc&lt;&#x2F;code&gt; (only after successfully logging in, of course).&lt;&#x2F;p&gt;
&lt;p&gt;However, all of this changed with the introduction of &lt;em&gt;AccountsService&lt;&#x2F;em&gt;. As the
name suggests, &lt;em&gt;AccountsService&lt;&#x2F;em&gt; provides a service for the management of user
accounts, and among other things, some of the login settings that were
previously configured in &lt;code&gt;~&#x2F;.dmrc&lt;&#x2F;code&gt;. It offers this functionality through the
&lt;code&gt;org.freedesktop.Accounts&lt;&#x2F;code&gt; DBus service on the system bus.&lt;&#x2F;p&gt;
&lt;p&gt;Modern Display Managers use &lt;em&gt;AccountsService&lt;&#x2F;em&gt; to manipulate user  login settings,
falling back to &lt;code&gt;~&#x2F;.dmrc&lt;&#x2F;code&gt; only when the service is unavailable (at least in the
case of lightdm). What this means for the end-user is that editing &lt;code&gt;~&#x2F;.dmrc&lt;&#x2F;code&gt;
manually has no effect. For example, you can try changing the Session field in
&lt;code&gt;~&#x2F;.dmrc&lt;&#x2F;code&gt; all you want, but next time you log in you will end up in the same
session and your &lt;code&gt;~&#x2F;.dmrc&lt;&#x2F;code&gt; changes will have been overwritten.&lt;&#x2F;p&gt;
&lt;p&gt;In order to actually change any settings we need to communicate with
&lt;em&gt;AccountsService&lt;&#x2F;em&gt; through DBus. The first step is to find out the object that
corresponds to the user we want to change the settings for. The path of this
object is of the form &lt;code&gt;&#x2F;org&#x2F;freedesktop&#x2F;Accounts&#x2F;&amp;lt;USER&amp;gt;&lt;&#x2F;code&gt;. &lt;code&gt;&amp;lt;USER&amp;gt;&lt;&#x2F;code&gt; is usually
of the form &lt;code&gt;User&amp;lt;UID&amp;gt;&lt;&#x2F;code&gt; but there is no guarantee of that.  Thankfully, the
&lt;code&gt;&#x2F;org&#x2F;freedesktop&#x2F;Accounts&lt;&#x2F;code&gt; object provides the
&lt;code&gt;org.freedesktop.Accounts.FindUserByName&lt;&#x2F;code&gt; and
&lt;code&gt;org.freedesktop.Accounts.FindUserById&lt;&#x2F;code&gt; methods, which we can use to get the
object path for a user.&lt;&#x2F;p&gt;
&lt;p&gt;Having the user object path, we can use the &lt;code&gt;org.freedesktop.Accounts.User.*&lt;&#x2F;code&gt;
methods on the user object to change the required settings.&lt;&#x2F;p&gt;
&lt;p&gt;We can use the dbus-send program to perform the operations mentioned above. For
example:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; class=&quot;language-sh z-code&quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; USER_PATH=&lt;span class=&quot;z-meta z-group z-expansion z-command z-parens z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-shell&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;dbus-send&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; --&lt;&#x2F;span&gt;print-reply&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-option z-shell&quot;&gt;=&lt;&#x2F;span&gt;literal&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; --&lt;&#x2F;span&gt;system&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; --&lt;&#x2F;span&gt;dest&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-option z-shell&quot;&gt;=&lt;&#x2F;span&gt;org.freedesktop.Accounts &#x2F;org&#x2F;freedesktop&#x2F;Accounts org.freedesktop.Accounts.FindUserById int64:1000&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-shell&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; dbus-send&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; --&lt;&#x2F;span&gt;print-reply&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; --&lt;&#x2F;span&gt;system&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; --&lt;&#x2F;span&gt;dest&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-option z-shell&quot;&gt;=&lt;&#x2F;span&gt;org.freedesktop.Accounts &lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-shell&quot;&gt;USER_PATH&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; org.freedesktop.Accounts.User.SetXSession string:&lt;span class=&quot;z-string z-quoted z-single z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;xterm&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;As I needed to get and set the X session for a user in a user-friendly manner,
I decided to create a small python program instead. You can find the program
here: &lt;a href=&quot;http:&#x2F;&#x2F;bazaar.launchpad.net&#x2F;~linaro-graphics-wg&#x2F;linaro-graphics-tests&#x2F;trunk&#x2F;view&#x2F;head:&#x2F;scripts&#x2F;user_xsession.py&quot;&gt;user_xsession.py&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;You can use user_xsession.py like:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; class=&quot;language-sh z-code&quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; .&#x2F;user_xsession.py &lt;span class=&quot;z-keyword z-control z-regexp z-set z-begin z-shell&quot;&gt;[&lt;&#x2F;span&gt;-&lt;span class=&quot;z-keyword z-operator z-word z-shell&quot;&gt;-&lt;&#x2F;span&gt;user&lt;span class=&quot;z-keyword z-operator z-word z-shell&quot;&gt;-&lt;&#x2F;span&gt;id &amp;lt;ID&amp;gt;|&lt;span class=&quot;z-keyword z-operator z-word z-shell&quot;&gt;-&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-word z-shell&quot;&gt;-&lt;&#x2F;span&gt;user&lt;span class=&quot;z-keyword z-operator z-word z-shell&quot;&gt;-&lt;&#x2F;span&gt;name &amp;lt;NAME&amp;gt;&lt;span class=&quot;z-keyword z-control z-regexp z-set z-end z-shell&quot;&gt;]&lt;&#x2F;span&gt; set &lt;span class=&quot;z-keyword z-operator z-assignment z-redirection z-shell&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;SESSION&lt;span class=&quot;z-keyword z-operator z-assignment z-redirection z-shell&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; .&#x2F;user_xsession.py &lt;span class=&quot;z-keyword z-control z-regexp z-set z-begin z-shell&quot;&gt;[&lt;&#x2F;span&gt;-&lt;span class=&quot;z-keyword z-operator z-word z-shell&quot;&gt;-&lt;&#x2F;span&gt;user&lt;span class=&quot;z-keyword z-operator z-word z-shell&quot;&gt;-&lt;&#x2F;span&gt;id &amp;lt;ID&amp;gt;|&lt;span class=&quot;z-keyword z-operator z-word z-shell&quot;&gt;-&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-word z-shell&quot;&gt;-&lt;&#x2F;span&gt;user&lt;span class=&quot;z-keyword z-operator z-word z-shell&quot;&gt;-&lt;&#x2F;span&gt;name &amp;lt;NAME&amp;gt;&lt;span class=&quot;z-keyword z-control z-regexp z-set z-end z-shell&quot;&gt;]&lt;&#x2F;span&gt; get&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;where &lt;SESSION&gt; is one of the sessions available in &lt;code&gt;&#x2F;usr&#x2F;share&#x2F;xsessions&#x2F;&lt;&#x2F;code&gt;.
Note that you may need to run as root, depending on the account you want to
change the settings for.&lt;&#x2F;p&gt;
&lt;p&gt;For example:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; class=&quot;language-sh z-code&quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; .&#x2F;user_xsession.py&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; --&lt;&#x2F;span&gt;user-id&lt;&#x2F;span&gt; 1000 set xterm&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;You can easily tweak the program to change another setting instead of the X
session.&lt;&#x2F;p&gt;</content>
  </entry>
  <entry>
    <author><name>Alexandros Frantzis</name></author>
    <title>glmark2: more than a benchmark</title>
    <link href="https://afrantzis.com/posts/glmark2-more-than-a-benchmark/" />
    <updated>2011-12-16T00:00:00Z</updated>
    <id>https://afrantzis.com/posts/glmark2-more-than-a-benchmark/</id>
    <content type="html">&lt;h2 id=&quot;genesis&quot;&gt;Genesis&lt;&#x2F;h2&gt;
&lt;p&gt;Almost 1.5 year ago, we (at &lt;a href=&quot;https:&#x2F;&#x2F;www.linaro.org&quot;&gt;Linaro&lt;&#x2F;a&gt; set out on a
mission to provide consolidation and optimization of GNU&#x2F;Linux for ARM
hardware. Soon after, the Linaro Graphics Working Group was formed to focus on
the graphics and user interface parts of the stack. Like all other groups
within Linaro, the Graphics WG strived (and still does, of course!) to provide
palpable and measurable improvements. One of the tools we needed to ensure this
goal, and we found was missing, was a Free Software OpenGL ES 2.0 benchmark.&lt;&#x2F;p&gt;
&lt;p&gt;Why did we even care about this when there surely are professional, proprietary
alternatives used in the industry? The answer is simple: we couldn&#x27;t imagine
doing this any other way.  Linaro, both as an organization and as individuals,
strongly believe that Free Software is good for society. Even if we didn&#x27;t
believe in the ethics of Free Software, using a proprietary solution would have
been the wrong choice from a practical point of view. Many of our goals, which
reach beyond plain benchmarking, would be very difficult to achieve with a
proprietary solution. We wanted a tool that was freely (in every sense)
available to all, so that it would provide a common reference point for all
developers and users that didn&#x27;t have access to the proprietary tools.&lt;&#x2F;p&gt;
&lt;p&gt;Instead of starting completely from scratch, we leveraged an existing GPL
licensed desktop GL benchmark, called glmark, and ported it to support OpenGL
ES 2.0. We decided to call the new benchmark glmark2. Although OpenGL ES 2.0
was the primary goal for us (this API is prevalent in the ARM world), we
continued to treat desktop OpenGL as a first class citizen. This mindset
eventually led to what we call the &amp;quot;subset approach&amp;quot;: using only the common
subset of desktop OpenGL 2.1 and OpenGL ES 2.0 APIs to produce a single, easily
maintainable code base, working happily with both versions.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;goals&quot;&gt;Goals&lt;&#x2F;h2&gt;
&lt;p&gt;After the initial porting to OpenGL ES 2.0 was done, and as we continued to
work on new features, a set of goals for glmark2 began to crystallize in our
minds. These goals transcended the limits of plain benchmarking, and can be
summarized as: flexible benchmarking, best practices, validation and educating
new developers.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;flexible-benchmarking&quot;&gt;Flexible benchmarking&lt;&#x2F;h3&gt;
&lt;p&gt;The primary function of glmark2 is, of course, to provide a comprehensive
benchmarking suite. What differentiates glmark2 from other tools is the unique
flexibility it delivers. Most existing benchmarking tools just provide the
option to run benchmarks from a predefined fixed set. For glmark2, however, we
decided that we didn&#x27;t want to force our own selections on users. In this
spirit, glmark2 offers a suite of scenes that can be used to evaluate many
aspects of OpenGL (ES) 2.0 performance. The way in which each scene is rendered
is configurable through a set of scene-specific options, that range from the
simple, like selecting the texturing mode for the texturing scene, to the
complex, like specifying the convolution matrix for the GPU convolution scene.
A benchmark is just a scene instantiated with specific options.&lt;&#x2F;p&gt;
&lt;p&gt;For the casual user, who just wants to get an overview of the graphics stack&#x27;s
performance, glmark2 comes with a predefined set of default benchmarks. For
users that need to explore a particular aspect in more depth, we have made it
trivial to specify and execute a custom set of benchmarks.&lt;&#x2F;p&gt;
&lt;p&gt;Regarding the actual benchmark content, we draw inspiration from typical
applications that use OpenGL, like games, modern user interfaces and our own
experience about important features. We have given glmark2 a focus on
fundamental techniques used in 3D and 2.5D graphics, so most scenes are
relatively simple, but we don&#x27;t shy way from other kinds of benchmarks. We
already have low-level benchmarks for specific shader features, and we are
planning to add high-level benchmarks involving more complex and visually
intriguing scenes in the future.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;best-practices&quot;&gt;Best practices&lt;&#x2F;h3&gt;
&lt;p&gt;The flexibility offered by our option-driven benchmarking approach lends itself
naturally to another one of our goals: answering developer questions and
providing best practices. &amp;quot;Should I use X or Y to get the best
performance&#x2F;quality&#x2F;of both worlds on this class of hardware?&amp;quot; is a common form
of question among developers. For example, we have implemented a benchmark to
test how different methods of uploading data to the GPU (glBufferData vs
glMapBuffer, interleaved buffers vs separate buffers etc) affect performance.
We hope that the ease with which developers can use different options will make
it painless to perform targeted tests and eventually provide best practices
advice.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;validation&quot;&gt;Validation&lt;&#x2F;h3&gt;
&lt;p&gt;Besides measuring the graphics performance, we also care about output quality.
That is, we want to validate the correctness of the graphics stack.  Of course,
we don&#x27;t want to perform validation manually, by having someone looking at
pictures. We want the process to be automatic, ideally as part of our
continuous integration efforts.&lt;&#x2F;p&gt;
&lt;p&gt;To handle validation in glmark2 we added a special mode in which we just draw
the first frame of each benchmark and fuzzily compare some pixel values against
expected reference values. We rely on the 3D pipeline being deterministic, so,
if a single pixel is correct, chances are that all pixels are correct. Is this
a 100% robust validation solution? No, but it is more than enough for our
needs; it&#x27;s not our aim to provide a conformance suite.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;educating-new-developers&quot;&gt;Educating new developers&lt;&#x2F;h3&gt;
&lt;p&gt;The last (but not least) goal we have for glmark2 is a surprising but important
one: educating new developers.  We found that one of the main issues developers
have when trying to move to modern, programmable 3D APIs, and in particular
OpenGL ES 2.0, is the lack of concrete information on how to work with the new
APIs, like EGL, and, also, how to apply fundamental 3D techniques that were
straightforward before, e.g., lighting. Due to our focus on benchmarks for
fundamental techniques, we are actually providing clear examples of how to
achieve useful results. We make a special effort to ensure that both the C++
and the shader code are understandable, including comments explaining why and
how we are doing things. Developers can use the glmark2 code base as a
launchpad to explore the wonders of modern 3D graphics.&lt;&#x2F;p&gt;
&lt;p&gt;Our journey with glmark2 has been very exciting so far, and the future looks
brighter than ever! We are constantly working on new features, and the recent
addition of support for Android has made glmark2 one of the most versatile Free
Software 3D benchmarking tools available. You can learn more about what we are
planning by visiting our &lt;a href=&quot;https:&#x2F;&#x2F;blueprints.launchpad.net&#x2F;glmark2&quot;&gt;blueprints&lt;&#x2F;a&gt;
page.&lt;&#x2F;p&gt;
&lt;p&gt;What are you waiting for? Grab &lt;a href=&quot;https:&#x2F;&#x2F;launchpad.net&#x2F;glmark2&quot;&gt;glmark2&lt;&#x2F;a&gt; and
start exploring!&lt;&#x2F;p&gt;</content>
  </entry>
  <entry>
    <author><name>Alexandros Frantzis</name></author>
    <title>The NP-Completeness of tax solidarity</title>
    <link href="https://afrantzis.com/posts/the-np-completeness-of-tax-solidarity/" />
    <updated>2010-09-30T00:00:00Z</updated>
    <id>https://afrantzis.com/posts/the-np-completeness-of-tax-solidarity/</id>
    <content type="html">&lt;p&gt;At last, it&#x27;s Friday! After a long week of hard work you deserve some time to
relax and meet for a drink with friends. You make a few phone calls, everything
is arranged and a few hours later you are out having a great time. And then the
time comes to pay for the drinks. If you are lucky, there is a separate receipt
for every drink  If you are not lucky (and you usually aren&#x27;t), there is one
receipt for all the drinks. Now you have to spend the next five minutes trying
to decide who gets the receipt.&lt;&#x2F;p&gt;
&lt;p&gt;Why all the fuss about receipts, you may ask? If you live in Greece (and
perhaps other places) in this time of economic woe, then this scenario is all
too familiar. The Greek government, in its never-ending battle with tax evasion
has come up with a plan! Every citizen must present an amount in receipts which
depends on their income (using a tiered system). Any difference from the
required amount (up to 15000 â¬) leads to either a penalty or credit equal to
10% of the difference. Note, that you can&#x27;t present receipts that are used in
some other way to lower your taxable income (rent, utilities etc).&lt;&#x2F;p&gt;
&lt;p&gt;The main idea is to make citizens ask for receipts, so that businesses are
forced to issue them. The secondary idea is to make citizens spend more. So
much for savings...&lt;&#x2F;p&gt;
&lt;p&gt;In any case, near the end of the year, everyone in your group of close friends
(the ones you go out with more often) ends up with a bunch of receipts. Some
have enough receipts to cover their limit, some do not.  Furthermore, some of
the receipts are shared, in the sense that the one who has the receipt has paid
for only some of the items on it.  Being such good friends you decide that you
should help each other out, so that, if possible, everyone reaches their limit
and saves money.  Practical tax solidarity&lt;&#x2F;p&gt;
&lt;p&gt;There are several practical ways to help each other and they all share a common
core.  The receipts of each individual are first split into a private and
public part.  Each individual keeps their private part and the public part is
split among the individuals that need it. By combining different ways to decide
what receipts are public and private and how to split the public ones we can
get several methods to help our friends. Some interesting methods are:&lt;&#x2F;p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;#&lt;&#x2F;th&gt;&lt;th&gt;private&lt;&#x2F;th&gt;&lt;th&gt;public&lt;&#x2F;th&gt;&lt;th&gt;split method&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;nothing&lt;&#x2F;td&gt;&lt;td&gt;all&lt;&#x2F;td&gt;&lt;td&gt;equally among all&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;2&lt;&#x2F;td&gt;&lt;td&gt;all until limit&lt;&#x2F;td&gt;&lt;td&gt;the rest&lt;&#x2F;td&gt;&lt;td&gt;among those that need it until limit, rest back to owners or equally among all&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;3&lt;&#x2F;td&gt;&lt;td&gt;all until limit + 15000â¬&lt;&#x2F;td&gt;&lt;td&gt;the rest&lt;&#x2F;td&gt;&lt;td&gt;among those that need it until limit, rest back to owners or equally among all&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;4&lt;&#x2F;td&gt;&lt;td&gt;non-shared&lt;&#x2F;td&gt;&lt;td&gt;shared&lt;&#x2F;td&gt;&lt;td&gt;equally among all&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;5&lt;&#x2F;td&gt;&lt;td&gt;non-shared + shared until limit&lt;&#x2F;td&gt;&lt;td&gt;rest&lt;&#x2F;td&gt;&lt;td&gt;equally among all&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;p&gt;If you are really good friends and the spirit of solidarity is high within the
group, you may decide to try to split the receipts as evenly as possible within
the group (method 1). This method maximizes the collective gain, but hurts the
individuals that have originally a larger amount in receipts. This may not be a
problem, though, and may actually be the most fair way to handle the situation
if the number of shared receipts in the group is high.&lt;&#x2F;p&gt;
&lt;p&gt;Another way (method 2) is for every person to keep enough of their receipts so
that they reach the limit (if they can, of course) and add the rest to the
group&#x27;s surplus collection. The receipts from the surplus collection are then
distributed to those that don&#x27;t have enough receipts to reach the limit on
their own.  Any remaining receipts are then either  returned to their original
owners or equally split within the group.&lt;&#x2F;p&gt;
&lt;p&gt;A variation of the previous method is method 3. In this case we use limit +
15000â¬ for the private receipts, so that individuals get the maximum benefit
from their receipts. Unfortunately, this method rarely leaves any receipts for
the surplus and is quite unfair if there is a large number of shared receipts.&lt;&#x2F;p&gt;
&lt;p&gt;Methods 4 and 5 assume that each receipt can be easily identified as shared or
non-shared. In method 4 individuals keep only the receipts that are non-shared
and add the shared receipts to the surplus. In method 5 individuals first use
their non-shared receipts and then start using the shared ones until they reach
the limit. If the receipts were originally distributed randomly, then method 4
is the fairest way to handle things. On the other hand, if shared receipts were
originally given to the person with the highest expense then perhaps method 5
is a bit more fair.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;handling-np-completeness&quot;&gt;Handling NP-completeness&lt;&#x2F;h2&gt;
&lt;p&gt;Whatever way you choose to help your friends, the same basic problem must be
solved: how can you evenly partition a set of receipts among a number of
individuals?&lt;&#x2F;p&gt;
&lt;p&gt;This problem, as innocent as it may look, is actually NP-complete! Its official
name is the &amp;quot;partition problem&amp;quot; and in its optimization version is stated as:&lt;&#x2F;p&gt;
&lt;p&gt;Partition a multiset of integers S into n subsets &lt;em&gt;S&lt;sub&gt;1&lt;&#x2F;sub&gt;,
S&lt;sub&gt;2&lt;&#x2F;sub&gt;, ..., S&lt;sub&gt;n&lt;&#x2F;sub&gt;&lt;&#x2F;em&gt; such that &lt;em&gt;max(sum(S&lt;sub&gt;1&lt;&#x2F;sub&gt;),
sum(S&lt;sub&gt;2&lt;&#x2F;sub&gt;), ..., sum(S&lt;sub&gt;n&lt;&#x2F;sub&gt;))&lt;&#x2F;em&gt; is minimized.&lt;&#x2F;p&gt;
&lt;p&gt;In plain words, split a multiset of integers into n subsets as evenly (as far
as the sum of each subset is concerned) as possible. The classic version
involves only two subsets. The difficulty lies in the fact that we are not
allowed to split each integer (receipt amount in our case) arbitrarily.&lt;&#x2F;p&gt;
&lt;p&gt;Being NP-complete practically means that in the worst case we have to go
through all the partitioning combinations to find the best. The combinations
being persons&lt;sup&gt;receipts&lt;&#x2F;sup&gt;, this is &lt;em&gt;not&lt;&#x2F;em&gt; what I call a fun past-time.&lt;&#x2F;p&gt;
&lt;p&gt;So, is this all part of an evil plot by the tax service to get our hard-earned
income? Even if it is, we are not completely helpless! The partition problem is
often called the &amp;quot;Easiest Hard Problem&amp;quot;. The reason is that under some
conditions, which have been extensively studied, there are heuristic methods
that provide very good results.&lt;&#x2F;p&gt;
&lt;p&gt;These conditions state that if we take &lt;em&gt;n&lt;&#x2F;em&gt; numbers randomly selected from
the range &lt;em&gt;[1, 2&lt;sup&gt;m&lt;&#x2F;sup&gt;]&lt;&#x2F;em&gt; then if &lt;em&gt;k = m &#x2F; n &amp;lt; 1 ( â m &amp;lt; n)&lt;&#x2F;em&gt;
there is a large probability that there exist many perfect partitions. Of
course this also works for numbers from arbitrary ranges because we can always
map a range &lt;em&gt;[a, b]&lt;&#x2F;em&gt; to &lt;em&gt;[1, b - a + 1]&lt;&#x2F;em&gt;. On the other hand if
&lt;em&gt;k &amp;gt; 1&lt;&#x2F;em&gt; the probability of perfect partitions existing for a given
multiset abruptly drops.&lt;&#x2F;p&gt;
&lt;p&gt;Intuitively, the above condition makes perfect sense: it is much more probable
to be able to split a multiset into subsets with equal sums if that multiset
has many small values (where small is relative to the cardinality of the set).
As the values get larger and&#x2F;or the set size becomes smaller it is much less
probable to be able to find a perfect split.&lt;&#x2F;p&gt;
&lt;p&gt;So, how does our problem instance fare with regard to this criterion?  First of
all, we have to make a minor adjustment because the condition refers to
integers but cash amounts are real numbers with two decimal digits.  This can
be easily countered by expressing all amounts as euro-cents. The amount on each
receipt is hardly ever outside the [1, 6553600] range (&lt;em&gt;~ 2&lt;sup&gt;23&lt;&#x2F;sup&gt;&lt;&#x2F;em&gt;)
in euro-cents (unless, of course, you end up buying a new yacht every time you
go out for groceries). Also, let&#x27;s be insanely over-conservative here and say
that a normal person gets 3 receipts per week. These give us an &lt;em&gt;m&lt;&#x2F;em&gt; of 23
and an &lt;em&gt;n&lt;&#x2F;em&gt; of 3 * 52 = 156, therefore &lt;em&gt;k = 23 &#x2F; 156 &amp;lt; 1&lt;&#x2F;em&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Now that we know that there is a good chance of being able to solve the
problem, how do we actually go about it? The algorithm is surprisingly
straightforward. Of course, it does not strictly solve the problem, but it
produces an approximate solution that is good enough for our purposes. The
algorithm is:&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;1. Sort the numbers in descending order   [ O(nlogn) on average ]
2. Process each number (in sorted order): [ Î(n) ]
  2.1 Find the subset with the least sum  [ O(logp) using priority queues ]
  2.2 Add the number to the subset        [ Î(1) ]

where n: number of receipts
      p: number of persons
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;This gives us T(n, p) = O(nlogn + nlogp + n). For a constant number of persons
this leads to T(n) = O(nlogn). Not bad for &amp;quot;solving&amp;quot; an NP-complete problem!
This algorithm has been proved to produce results relatively close to the
optimal solution. Its discrepancy (the difference in value of the sums of the
produced subsets) is O(1&#x2F;n). There are other  algorithms that can do a bit
better, but they are considerably more complicated (and not worth it for our
puny purpose).&lt;&#x2F;p&gt;
&lt;p&gt;Finally, because âan ounce of action is worth a ton of theoryâ, I have
developed a proof of concept application that implements some of the methods
mentioned above. You can find
&lt;a href=&quot;https:&#x2F;&#x2F;code.launchpad.net&#x2F;~afrantzis&#x2F;+junk&#x2F;tax-solidarity-trunk&quot;&gt;here&lt;&#x2F;a&gt;. It is
written in python and licensed under the AGPL 3.0+.&lt;&#x2F;p&gt;
&lt;p&gt;Take that, tax service! YOUR NEFARIOUS SCHEME WILL NEVER SUCCEED!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;References&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Karmarker, Narenda and Karp, Richard M., The Differencing Method of Set
Partitioning, Techreport, UC Berkley, 1983&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Brian Hayes, The Easiest Hard Problem, American Scientist, March-April 2002&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Stephan Mertens, The Easiest Hard Problem: Number Partitioning,
Computational Complexity and Statistical Physics, 2006&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;</content>
  </entry>
</feed>
